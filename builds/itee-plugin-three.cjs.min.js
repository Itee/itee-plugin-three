"use strict";var e,t=require("itee-database"),r=require("itee-mongodb"),n=require("itee-validators"),o=(e=n)&&"object"==typeof e&&"default"in e?e.default:e,i=require("three-full"),a=require("itee-client"),c=require("itee-utils"),s=require("bson");
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @see [IFC Standard]{@link http://standards.buildingsmart.org/IFC/RELEASE/IFC4_1/FINAL/HTML/}
 *
 */
class d extends r.TMongooseController{constructor(e={}){super(e)}async _readOneDocument(e,t){if(n.isNotDefined(e)||n.isNotDefined(t))return null;const r=await this._driver.model(e).findOne(t).exec();return n.isDefined(r)?r._doc:null}async _readManyDocument(e,t){if(n.isNotDefined(e)||n.isNotDefined(t))return null;return(await this._driver.model(e).find(t).exec()).map(e=>e._doc)}async _updateDocument(e,t,r){return n.isNotDefined(e)?null:await this._driver.model(e.type).findByIdAndUpdate(e._id,t,r).exec()}async getAllChildrenIds(e,t=!1){const r={children:[],geometries:[],materials:[]},o=[],i=await this._readManyDocument("Objects3D",{parent:e});for(let e=0,a=i.length;e<a;e++){const a=i[e],c=a._id.toString();n.isDefined(c)&&r.children.push(c);const s=a.geometry;n.isDefined(s)&&r.geometries.push(s.toString());const d=a.material;if(d){const e=n.isArray(d)?d.map(e=>e.toString()):[d.toString()];r.materials.push(...e)}if(a.children){const e=this.getAllChildrenIds(c,t);o.push(e)}}if(o.length>0){const e=await Promise.all(o);for(let t=0,n=e.length;t<n;t++){const n=e[t];r.children.push(...n.children),r.geometries.push(...n.geometries),r.materials.push(...n.materials)}}return r}async _deleteOne(e,t){try{if("oneByOne"==="allInOne"){const n=await this._readOneDocument("Objects3D",{_id:e}),o=await this._removeParentReference(n),i={...await this._removeChildDocument(n),parent:o};r.TMongooseController.returnData(i,t)}else{const n=await this.getAllChildrenIds(e,!0);n.children.push(e);const o={children:[...new Set(n.children)],geometries:[...new Set(n.geometries)],materials:[...new Set(n.materials)]},i=await this._deleteDocuments("Objects3D",o.children),a=await this._deleteDocuments("Geometries",o.geometries),c=await this._deleteDocuments("Materials",o.materials);r.TMongooseController.returnData({deletedObjectsCount:i,deletedGeometriesResult:a,deletedMaterialsResult:c},t)}}catch(e){r.TMongooseController.returnError(e,t)}}async _deleteDocuments(e,t){return(await this._driver.model(e).deleteMany({_id:{$in:t}}).exec()).deletedCount}async _deleteDocument(e){if(n.isNotDefined(e))return null;const t=await this._driver.model(e.type).findByIdAndDelete(e._id).exec();return t&&t._doc?t._doc._id:null}async _removeParentReference(e){const t=e.parent;if(n.isNotDefined(t))return null;const r=await this._readOneDocument("Objects3D",{_id:t}),o=r.children,i=o.indexOf(e._id);o.splice(i,1);return await this._updateDocument(r,{$set:{children:o}})}async _removeChildrenDocuments(e){let t=[];for(let r=e.length-1;r>=0;r--)t.push(this._removeChildDocument(e[r]));return Promise.all(t)}async _removeChildDocument(e){const t=await this._readManyDocument("Objects3D",{parent:e._id}),r=await this._removeChildrenDocuments(t),n=await this._removeOrphanGeometryWithId(e.geometry),o=await this._removeOrphanMaterialsWithIds(e.material||[]);return{object:await this._deleteDocument(e),children:r,geometry:n,materials:o}}async _removeOrphanGeometryWithId(e){if(n.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{geometry:e})).length>1)return;const t=await this._readOneDocument("Geometries",{_id:e});return await this._deleteDocument(t)}async _removeOrphanMaterialsWithIds(e){const t=[];for(let r=0,n=e.length;r<n;r++)t.push(this._removeOrphanMaterialWithId(e[r]));return Promise.all(t)}async _removeOrphanMaterialWithId(e){if((await this._readManyDocument("Objects3D",{material:e})).length>1)return;const t=await this._readOneDocument("Materials",{_id:e});return await this._deleteDocument(t)}}
/**
 * @module Converters/ColladaToThree
 * @desc Export JsonToThree converter class about .dae files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class u extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new i.ColladaLoader;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Loader/DBFLoader
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * From:
 * https://www.clicketyclick.dk/databases/xbase/format/db2_dbf.html#DBII_DBF_STRUCT
 * http://web.archive.org/web/20150323061445/http://ulisse.elettra.trieste.it/services/doc/dbase/DBFstruct.htm
 * http://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm
 *
 *
 */const m=c.toEnum({FoxPro:48,FoxPro_Autoincrement:49,dBASE_II:2,FoxPro_Var:50,dBASE_III_plus:3,dBASE_III_plus_memo:131,dBASE_IV_SQL_table:67,dBASE_IV_SQL_system:99,dBASE_IV_memo:139,dBASE_IV_memo_SQL_table:203,FoxBase:251,dBase_v_7:4,FoxPro_2_x:245,HiPerSix_memo:229}),l=c.toEnum({Binary:"B",Character:"C",Date:"D",Numeric:"N",Logical:"L",Memo:"M",Timestamp:"@",Long:"I",Autoincrement:"+",Float:"F",Double:"O",OLE:"G"});class f{constructor(e={}){const t={manager:i.DefaultLoadingManager,logger:a.DefaultLogger,reader:new a.TBinaryReader,...e};this.manager=t.manager,this.logger=t.logger,this.reader=t.reader}get manager(){return this._manager}set manager(e){this._manager=e}get logger(){return this._logger}set logger(e){this._logger=e}get reader(){return this._reader}set reader(e){this._reader=e}setManager(e){return this.manager=e,this}setLogger(e){return this.logger=e,this}setReader(e){return this.reader=e,this}load(e,t,r,n){const o=this,a=new i.FileLoader(o.manager);a.setResponseType("arraybuffer"),a.load(e,e=>{t(o.parse(e))},r,n)}parse(e){this.reader.setEndianess(a.Endianness.Big).setBuffer(e);const t=this.reader.getInt8();if(!this._isValidVersion(t))return this.logger.error("DBFLoader: Invalid version number: "+t),null;const r=this._parseHeader(t);return{header:r,datas:this._parseDatas(t,r)}}_isValidVersion(e){return m.includes(e)}_parseHeader(e){let t={};switch(e){case m.FoxPro:case m.FoxPro_Autoincrement:case m.FoxPro_Var:case m.dBASE_II:t=this._parseHeaderV2();break;case m.dBASE_III_plus:case m.dBASE_III_plus_memo:t=this._parseHeaderV2_5();break;case m.dBASE_IV_memo:case m.dBASE_IV_memo_SQL_table:case m.dBASE_IV_SQL_system:case m.dBASE_IV_SQL_table:t=this._parseHeaderV3();break;case m.dBase_v_7:case m.FoxPro_2_x:case m.HiPerSix_memo:t=this._parseHeaderV4();break;default:throw new RangeError("Invalid version parameter: "+e)}return this.reader.getUint8()!==f.Terminator&&this.logger.error("DBFLoader: Invalid terminator after field descriptors !!!"),t}_parseHeaderV2(){const e=this.reader.getInt16(),t=this.reader.getInt8()+f.YearOffset,r=this.reader.getInt8(),n=this.reader.getInt8(),o=this.reader.getInt16();let i=[],a=void 0,c=void 0,s=void 0,d=void 0,u=void 0;for(let t=0;t<e;t++)a=this.reader.getString(11),c=this.reader.getChar(),s=this.reader.getUint8(),d=this.reader.getInt16(),u=this.reader.getInt8(),i.push({name:a,type:c,length:s,memoryAddress:d,decimalCount:u});return{numberOfRecords:e,year:t,month:r,day:n,lengthOfEachRecords:o,fields:i}}_parseHeaderV2_5(){const e=this.reader.getInt8()+f.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(a.Endianness.Little);const n=this.reader.getInt32(),o=this.reader.getInt16(),i=this.reader.getInt16();this.reader.setEndianess(a.Endianness.Big),this.reader.skipOffsetOf(20);let c=[],s=void 0,d=void 0,u=void 0,m=void 0,l=void 0,h=void 0,g=void 0;for(let e=0;e<n;e++)s=this.reader.getString(11),d=this.reader.getChar(),m=this.reader.getInt32(),u=this.reader.getUint8(),l=this.reader.getUint8(),this.reader.skipOffsetOf(2),h=this.reader.getInt8(),this.reader.skipOffsetOf(2),g=this.reader.getInt8(),this.reader.skipOffsetOf(1),c.push({name:s,type:d,length:u,memoryAddress:m,decimalCount:l,workAreaId:h,MDXFlag:g});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:o,numberOfByteInRecord:i,fields:c}}_parseHeaderV3(){const e=this.reader.getInt8()+f.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(a.Endianness.Little);const n=this.reader.getInt32(),o=this.reader.getInt16(),i=this.reader.getInt16();this.reader.setEndianess(a.Endianness.Big),this.reader.skipOffsetOf(2);const c=this.reader.getInt8(),s=this.reader.getInt8();this.reader.skipOffsetOf(12);const d=this.reader.getInt8(),u=this.reader.getInt8();this.reader.skipOffsetOf(2);let m=[],l=void 0,h=void 0,g=void 0,p=void 0,S=void 0,y=void 0;for(;this.reader.getOffset()<o-1;)l=this.reader.getString(11),h=this.reader.getChar(),this.reader.skipOffsetOf(4),g=this.reader.getUint8(),p=this.reader.getUint8(),this.reader.skipOffsetOf(2),S=this.reader.getInt8(),this.reader.skipOffsetOf(10),y=this.reader.getInt8(),m.push({name:l,type:h,length:g,decimalCount:p,workAreaId:S,MDXFieldFlag:y});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:o,numberOfByteInRecord:i,incompleteTransactionFlag:c,encryptionFlag:s,MDXFlag:d,languageDriverId:u,fields:m}}_parseHeaderV4(){const e=this.reader.getInt8()+f.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(a.Endianness.Little);const n=this.reader.getInt32(),o=this.reader.getInt16(),i=this.reader.getInt16();this.reader.setEndianess(a.Endianness.Big),this.reader.skipOffsetOf(2);const c=this.reader.getInt8(),s=this.reader.getInt8();this.reader.skipOffsetOf(12);const d=this.reader.getInt8(),u=this.reader.getInt8();this.reader.skipOffsetOf(2);const m=this.reader.getString(32);this.reader.skipOffsetOf(4);let l=[],h=void 0,g=void 0,p=void 0,S=void 0,y=void 0,v=void 0;for(let e=0;e<n;e++)h=this.reader.getString(32),g=this.reader.getChar(),p=this.reader.getUint8(),S=this.reader.getUint8(),this.reader.skipOffsetOf(2),y=this.reader.getInt8(),this.reader.skipOffsetOf(2),v=this.reader.getInt32(),this.reader.skipOffsetOf(4),l.push({name:h,type:g,length:p,decimalCount:S,MDXFieldFlag:y,nextAutoincrementValue:v});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:o,numberOfByteInRecord:i,incompleteTransactionFlag:c,encryptionFlag:s,MDXFlag:d,languageDriverId:u,languageDriverName:m,fields:l}}_parseDatas(e,t){const r=t.numberOfRecords,n=t.fields;let o=[],i=null,a=null;for(let e=0;e<r;e++){i={},i.deleted=this.reader.getUint8()===f.DeletedRecord;for(let e=0,t=n.length;e<t;e++)switch(a=n[e],a.type){case l.Binary:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case l.Numeric:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case l.Character:case l.Date:i[a.name]=this.reader.getString(a.length);break;case l.Logical:{const e=this.reader.getChar().toLowerCase();i[a.name]="t"===e||"y"===e||"f"!==e&&"n"!==e&&null}break;case l.Memo:i[a.name]=this.reader.getString(a.length);break;case l.Timestamp:break;case l.Long:case l.Autoincrement:i[a.name]=this.reader.getInt32();break;case l.Float:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case l.Double:i[a.name]=this.reader.getFloat64();break;case l.OLE:i[a.name]=this.reader.getString(a.length);break;default:throw new RangeError("Invalid data type parameter: "+a.type)}o.push(i)}return o}_parseFieldProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt16(),n=this.reader.getInt16(),o=this.reader.getInt16(),i=this.reader.getInt16(),a=this.reader.getInt16(),c=this.reader.getInt16();let s=[];for(let t=0;t<e;t++)s.push(this._getStandardProperties());let d=[];for(let e=0;e<r;e++)d.push(this._getCustomProperties());let u=[];for(let e=0;e<o;e++)u.push(this._getReferentialIntegrityProperties());return{numberOfStandardProperties:e,startOfStandardPropertiesDescriptor:t,numberOfCustomProperties:r,startOfCustomPropertiesDescriptor:n,numberOfReferentialIntegrityProperties:o,startOfReferentialIntegrityDescriptor:i,startOfData:a,sizeOfPropertiesStructure:c,standardProperties:s,customProperties:d,referentialIntegrityProperties:u}}_getStandardProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8(),n=this.reader.getInt8(),o=this.reader.getInt8();this.reader.skipOffsetOf(4);return{generationalNumber:e,tableFieldOffset:t,propertyDescribed:r,type:n,isConstraint:o,offsetFromStart:this.reader.getInt16(),widthOfDatabaseField:this.reader.getInt16()}}_getCustomProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8();this.reader.skipOffsetOf(1);return{generationalNumber:e,tableFieldOffset:t,type:r,offsetFromStartOfName:this.reader.getInt16(),lengthOfName:this.reader.getInt16(),offsetFromStartOfData:this.reader.getInt16(),lengthOfData:this.reader.getInt16()}}_getReferentialIntegrityProperties(){return{databaseState:this.reader.getInt8(),sequentialNumberRule:this.reader.getInt16(),offsetOfTheRIRuleName:this.reader.getInt16(),sizeOfTheRIRuleName:this.reader.getInt16(),offsetOfNameOfForeignTable:this.reader.getInt16(),sizeOfNameOfForeignTable:this.reader.getInt16(),stateBehaviour:this.reader.getInt8(),numberOfFieldsInLinkingKey:this.reader.getInt16(),offsetOfLocalTableTagName:this.reader.getInt16(),sizeOfTheLocalTableTagName:this.reader.getInt16(),offsetOfForeignTableTagName:this.reader.getInt16(),sizeOfTheForeignTableTagName:this.reader.getInt16()}}}f.Terminator=13,f.DeletedRecord=26,f.YearOffset=1900;
/**
 * @module Converters/DbfToThree
 * @desc Export JsonToThree converter class about .dbf files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link module:Loader/DBFLoader Loader/DBFLoader}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class h extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new f;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/FbxToThree
 * @desc Export JsonToThree converter class about .fbx files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class g extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new i.FBXLoader;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/JsonToThree
 * @desc Export JsonToThree converter class about .json files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class p extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new i.ObjectLoader;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/MtlToThree
 * @desc Export JsonToThree converter class about .mtl files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class S extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.String})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new i.MTLLoader;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/Obj2ToThree
 * @desc Export JsonToThree converter class about .obj files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class y extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new i.OBJLoader2;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Loader/SHPLoader
 * @desc Export SHPLoader to load .shp files
 *
 * @requires {@link https://github.com/Itee/itee-client itee-client}
 * @requires {@link https://github.com/Itee/itee-utils itee-utils}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 * @example Todo...
 *
 */const v=c.toEnum({NullShape:0,Point:1,Polyline:3,Polygon:5,MultiPoint:8,PointZ:11,PolyLineZ:13,PolygonZ:15,MultiPointZ:18,PointM:21,PolylineM:23,PolygonM:25,MultiPointM:28,MultiPatch:31});class M{constructor(e={}){const t={manager:i.DefaultLoadingManager,logger:a.DefaultLogger,reader:new a.TBinaryReader,globalOffset:new i.Vector3(0,0,0),worldAxis:{from:"zUp",to:"zForward"},...e};this.manager=t.manager,this.logger=t.logger,this.reader=t.reader,this.globalOffset=t.globalOffset,this.worldAxis=t.worldAxis}get globalOffset(){return this._globalOffset}set globalOffset(e){this._globalOffset=e}get worldAxis(){return this._worldAxis}set worldAxis(e){this._worldAxis=e}get manager(){return this._manager}set manager(e){this._manager=e}get logger(){return this._logger}set logger(e){this._logger=e}get reader(){return this._reader}set reader(e){this._reader=e}setGlobalOffset(e){return this.globalOffset=e,this}setWorldAxis(e){return this.worldAxis=e,this}setManager(e){return this.manager=e,this}setLogger(e){return this.logger=e,this}setReader(e){return this.reader=e,this}load(e,t,r,n){const o=this,a=new i.FileLoader(o.manager);a.setResponseType("arraybuffer"),a.load(e,e=>{t(o.parse(e))},r,n)}parse(e){this._reader.setEndianess(a.Endianness.Big).setBuffer(e);const t=this._parseHeader();if(t.fileCode!==M.FileCode)return this.logger.error("SHPLoader: Invalide Shape file code !"),null;if(t.fileLength<M.MinFileLength)return this.logger.error("SHPLoader: Shape file have an incorrect length !"),null;if(!Object.values(v).includes(t.shapeType))return this.logger.error("SHPLoader: Shape file have an incorrect shape type !"),null;t.version<M.MinVersion&&this.logger.warn("SHPLoader: Version of shape file below than 1000 could be incorrectly parsed !");const r=this._parseDatas(t);return this._convertToObjects(r)}_parseHeader(){const e=this._reader.getInt32();this._reader.skipOffsetOf(20);const t=this._reader.getInt32();this._reader.setEndianess(a.Endianness.Little);const r=this._reader.getInt32(),n=this._reader.getInt32(),o=this._reader.getInt32(),i=this._reader.getInt32();return{fileCode:e,fileLength:t,version:r,shapeType:n,boundingBox:{xMin:o,xMax:this._reader.getInt32(),yMin:i,yMax:this._reader.getInt32(),zMin:this._reader.getInt32(),zMax:this._reader.getInt32(),mMin:this._reader.getInt32(),mMax:this._reader.getInt32()}}}_parseDatas(e){this._reader.skipOffsetTo(100);let t=[],r=void 0,n=void 0,o=void 0;for(;!this._reader.isEndOfFile();)switch(r=this._parseRecordHeader(),n=this._reader.getOffset()+2*r.contentLength,this._reader.setEndianess(a.Endianness.Little),e.shapeType){case v.NullShape:this._reader.skipOffsetTo(n);break;case v.Point:case v.PointZ:case v.PointM:for(;this._reader.getOffset()<n;)o=this._parsePoint(),o&&t.push(o);break;case v.Polyline:case v.PolyLineZ:case v.PolylineM:for(;this._reader.getOffset()<n;)o=this._parsePolyLine(),o&&t.push(o);break;case v.Polygon:case v.PolygonZ:case v.PolygonM:for(;this._reader.getOffset()<n;)o=this._parsePolyLine(),o&&t.push(o);break;case v.MultiPoint:case v.MultiPointZ:case v.MultiPointM:for(;this._reader.getOffset()<n;)o=this._parseMultiPoint(),o&&t.push(o);break;case v.MultiPatch:for(;this._reader.getOffset()<n;)o=this._parseMultiPatch(),o&&t.push(o);break;default:this.logger.error("SHPLoader: Invalid switch parameter: "+e.shapeType)}return t}_parseRecordHeader(){this._reader.setEndianess(a.Endianness.Big);return{recordNumber:this._reader.getInt32(),contentLength:this._reader.getInt32()}}_parseNull(){return this._reader.getInt32(),null}_parsePoint(){const e=this._reader.getInt32();if(e===v.NullShape)return null;return{shapeType:e,x:this._reader.getFloat64(),y:this._reader.getFloat64()}}_parsePolyLine(){const e=this._reader.getInt32();if(e===v.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=this._reader.getInt32(),o=new Array(r);for(let e=0;e<r;e++)o[e]=this._reader.getInt32();const i=new Array(n);for(let e=0;e<n;e++)i[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};return{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:n,parts:o,points:i}}_parsePolygon(){const e=this._reader.getInt32();if(e===v.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=this._reader.getInt32();let o=new Array(r);for(let e=0;e<r;e++)o[e]=this._reader.getInt32();let i=new Array(n);for(let e=0;e<n;e++)i[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};const a=[],s=[];return o.forEach((e,t)=>{const r=i.slice(e,o[t+1]);c.ringClockwise(r)?a.push(r):s.push(r)}),s.forEach(e=>{a.some(t=>{if(c.ringContainsSome(t[0],e))return t.push(e),!0})||a.push([e])}),{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:n,parts:o,polygons:a}}_parseMultiPoint(){const e=this._reader.getInt32();if(e===v.NullShape)return null;const t={xMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMin:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=new Array(r);for(let e=0;e<r;e++)n.push([this._reader.getFloat64(),this._reader.getFloat64()]);return{shapeType:e,boundingBox:t,numberOfPoints:r,points:n}}_parseMultiPatch(){const e=this._reader.getInt32();return e===v.NullShape?null:{shapeType:e}}_convertToObjects(e){let t=[];for(let t=0,o=e.length;t<o;t++){let o=e[t];o.shapeType!==v.Polygon&&o.shapeType!==v.PolygonZ&&o.shapeType!==v.PolygonM||(o.points&&Array.isArray(o.points[0])?r(o.points):n(o.points))}function r(e){for(let t=0,o=e.length;t<o;t++){let o=e[t];o?Array.isArray(o[0])?r(o):n(o):this.logger.log("no array, oups !")}}function n(e){t.push(new i.Shape(e))}return t}}M.FileCode=9994,M.MinFileLength=100,M.MinVersion=1e3;
/**
 * @module Converters/ShpToThree
 * @desc Export JsonToThree converter class about .shp files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link module:Loader/SHPLoader Loader/SHPLoader}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class b extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new M;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/StlToThree
 * @desc Export JsonToThree converter class about .stl files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class T extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new i.STLLoader;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/TdsToThree
 * @desc Export JsonToThree converter class about .3ds files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class F extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new i.TDSLoader;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Inserters/ThreeToMongoDB
 * @desc Export ThreeToMongoDB mongodb inserter class.

 * @requires {@link https://github.com/Itee/itee-client itee-client}
 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class w extends t.TAbstractDataInserter{constructor(e={}){const t={logger:a.DefaultLogger,...e};super(t),this.logger=t.logger,this.mergeStrategy="add"}static _arrayify(e){let t=[];return n.isDefined(e)&&(t=n.isArray(e)?e:[e]),t}async _save(e,t,r,o,i){const a=w._arrayify(e);if(n.isEmptyArray(a))return void i("No data to save in database. Abort insert !");const c=a.map(e=>e.name);this.logger.log("ThreeToMongoDB: Saving "+c),t.mergeStrategy&&(this.mergeStrategy=t.mergeStrategy);try{const e=t.parentId;let o=null,c=null;if(n.isDefined(e)){const r=await this._readOneDocument("Objects3D",{_id:e});if(n.isNull(r))return void i(`Unable to retrieve parent with id (${t.parentId}). Abort insert !`);if("add"===this.mergeStrategy)o=await this._parseObjects(a,e),c=n.isDefined(o)?o.filter(e=>e).map(e=>e._id):[],await this._updateDocument(r,{$addToSet:{children:c}});else if("replace"===this.mergeStrategy){const t=await this._readManyDocument("Objects3D",{parent:e}),i=a.map(e=>e.uuid),s=t.filter(e=>!i.includes(e.uuid));await this._removeChildrenDocuments(s),o=await this._parseObjects(a,e),c=n.isDefined(o)?o.filter(e=>e).map(e=>e._id):[],await this._updateDocument(r,{$set:{children:c}})}}else o=await this._parseObjects(a,null),c=n.isDefined(o)?o.filter(e=>e).map(e=>e._id):[];this.logger.log("ThreeToMongoDB: Saved "+c),r()}catch(e){i(e)}}async _parseObjects(e=[],t=null){const r=w._arrayify(e);if(n.isEmptyArray(r))return null;const o=[];for(let e=0,n=r.length;e<n;e++)o.push(this._parseObject(r[e],t));return Promise.all(o)}async _parseObject(e,t=null){if(n.isNotDefined(e))return null;const r=e.type,o=e.name,i=e.geometry,a=w._arrayify(e.children),c=w._arrayify(e.material);if(n.isDefined(i)&&n.isEmptyArray(a))if(i.isGeometry){const e=i.vertices;if(n.isNotDefined(e)||n.isEmptyArray(e))return this.logger.error(`Leaf object ${o} have a geometry that doesn't contain vertices ! Skip it.`),null}else{if(!i.isBufferGeometry)return this.logger.error(`Object ${o} contain an unknown/unmanaged geometry of type ${i.type} ! Skip it.`),null;{const e=i.attributes;if(n.isNotDefined(e))return this.logger.error(`Buffer geometry of ${o} doesn't contain attributes ! Skip it.`),null;const t=e.position;if(n.isNotDefined(t)||0===t.count)return this.logger.error(`Leaf object ${o} have a buffer geometry that doesn't contain position attribute ! Skip it.`),null}}let s=null;if(w.AvailableLineTypes.includes(r)){if(n.isNotDefined(i))return this.logger.error(`Missing geometry for object ${e.name} of type ${r}. Only Sprite can contains material without geometry ! Skip it.`),null;s=w.AvailableLineMaterialTypes}else if(w.AvailablePointTypes.includes(r)){if(n.isNotDefined(i))return this.logger.error(`Missing geometry for object ${e.name} of type ${r}. Only Sprite can contains material without geometry ! Skip it.`),null;s=w.AvailablePointMaterialTypes}else w.AvailableSpriteTypes.includes(r)&&(s=w.AvailableSpriteMaterialTypes);if(s)for(let e=0,t=c.length;e<t;e++){const t=c[e].type;if(!s.includes(t))return this.logger.error(`Object ${o} of type ${r}, contain an invalid material of type ${t} ! Skip it.`),null}const d=await this._getOrCreateDocuments(i),u=n.isDefined(d)?d.filter(e=>e).map(e=>e._id).pop():null,m=await this._getOrCreateDocuments(c),l=n.isDefined(m)?m.filter(e=>e).map(e=>e._id):[];let f=await this._readOneDocument(r,{uuid:e.uuid,parent:t});if(n.isDefined(f))if("add"===this.mergeStrategy){const e=await this._parseObjects(a,f._id),t=n.isDefined(e)?e.filter(e=>e).map(e=>e._id):[];await this._updateDocument(f,{$addToSet:{children:t}})}else if("replace"===this.mergeStrategy){const e=await this._readManyDocument("Objects3D",{parent:f._id}),t=a.map(e=>e.uuid),r=e.filter(e=>!t.includes(e.uuid));await this._removeChildrenDocuments(r);const o=await this._parseObjects(a,f._id),i=n.isDefined(o)?o.filter(e=>e).map(e=>e._id):[];await this._updateDocument(f,{$set:{children:i,geometry:u,material:l}})}else this.logger.error("Unknown/Unmanaged merge srategy "+this.mergeStrategy);else{e.parent=t,e.children=[],e.geometry=u,e.material=l,f=await this._createDocument(e);const r=await this._parseObjects(a,f._id),o=n.isDefined(r)?r.filter(e=>e).map(e=>e._id):[];await this._updateDocument(f,{$set:{children:o,geometry:u,material:l}})}return f}async _getOrCreateDocuments(e=[]){const t=w._arrayify(e);if(n.isEmptyArray(t))return null;const r=[];for(let e=0,n=t.length;e<n;e++)r.push(this._getOrCreateDocument(t[e]));return Promise.all(r)}async _getOrCreateDocument(e){if(n.isNotDefined(e))return null;let t=await this._readOneDocument(e.type,{uuid:e.uuid});return t=n.isDefined(t)?await this._updateDocument(t,e):await this._createDocument(e),t}async _createDocuments(e=[]){const t=w._arrayify(e);if(n.isEmptyArray(t))return null;const r=[];for(let e=0,n=t.length;e<n;e++)r.push(this._createDocument(t[e]));return Promise.all(r)}async _createDocument(e){if(n.isNotDefined(e))return null;const t=this._driver.model(e.type);return(await t(e).save())._doc}async _readOneDocument(e,t){if(n.isNotDefined(e)||n.isNotDefined(t))return null;const r=await this._driver.model(e).findOne(t).exec();return n.isDefined(r)?r._doc:null}async _readManyDocument(e,t){if(n.isNotDefined(e)||n.isNotDefined(t))return null;return(await this._driver.model(e).find(t).exec()).map(e=>e._doc)}async _updateDocuments(e=[],t,r){const o=w._arrayify(e);if(n.isEmptyArray(o))return null;const i=[];for(let e=0,n=o.length;e<n;e++)i.push(this._updateDocument(o[e],t,r));return Promise.all(i)}async _updateDocument(e,t,r){return n.isNotDefined(e)?null:await this._driver.model(e.type).findByIdAndUpdate(e._id,t,r).exec()}async _deleteDocuments(e=[]){const t=w._arrayify(e);if(n.isEmptyArray(t))return null;const r=[];for(let e=0,n=t.length;e<n;e++)r.push(this._deleteDocument(t[e]));return Promise.all(r)}async _deleteDocument(e){return n.isNotDefined(e)?null:await this._driver.model(e.type).findByIdAndDelete(e._id).exec()}async _removeChildrenDocuments(e){let t=[];for(let r=e.length-1;r>=0;r--)t.push(this._removeChildDocument(e[r]));return Promise.all(t)}async _removeChildDocument(e){const t=await this._readManyDocument("Objects3D",{parent:e._id});await this._removeChildrenDocuments(t),await this._removeOrphanGeometryWithId(e.geometry),await this._removeOrphanMaterialsWithIds(e.material||[]),await this._deleteDocument(e)}async _removeOrphanGeometryWithId(e){if(n.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{geometry:e})).length>1)return;const t=await this._readOneDocument("Geometries",{_id:e});await this._deleteDocument(t)}async _removeOrphanMaterialsWithIds(e){const t=[];for(let r=0,n=e.length;r<n;r++)t.push(this._removeOrphanMaterialWithId(e[r]));return Promise.all(t)}async _removeOrphanMaterialWithId(e){if((await this._readManyDocument("Objects3D",{material:e})).length>1)return;const t=await this._readOneDocument("Materials",{_id:e});await this._deleteDocument(t)}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Object3D
 *
 * @description Todo...
 */
function _(){}w.AvailableCurveTypes=["Curve","ArcCurve","CatmullRomCurve3","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","CurvePath","Path","Shape"],w.AvailableLineTypes=["Line","LineLoop","LineSegments"],w.AvailableLineMaterialTypes=["LineBasicMaterial","LineDashedMaterial"],w.AvailablePointTypes=["Points"],w.AvailablePointMaterialTypes=["PointsMaterial"],w.AvailableSpriteTypes=["Sprite"],w.AvailableSpriteMaterialTypes=["SpriteMaterial"],_.getSchemaFrom=e=>(_._schema||_._createSchema(e),_._schema),_._createSchema=e=>{const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Mixed,i=r.Vector3,a=r.Quaternion,c=r.Matrix4,s=r.Euler;_._schema=new t({uuid:String,name:String,type:String,parent:n,children:[n],up:i,position:i,rotation:s,quaternion:a,scale:{type:i,default:{x:1,y:1,z:1}},modelViewMatrix:c,normalMatrix:c,matrix:c,matrixWorld:c,matrixAutoUpdate:Boolean,matrixWorldNeedsUpdate:Boolean,layers:{type:Number,set:e=>e.mask},visible:Boolean,castShadow:Boolean,receiveShadow:Boolean,frustumCulled:Boolean,renderOrder:Boolean,userData:{type:o,set:e=>function e(t){let r={};for(let n in t){if(!Object.prototype.hasOwnProperty.call(t,n))continue;let o=t[n];o.constructor===Object&&(o=e(o)),r[n.replace(/\./g,"")]=o}return r}(e)}},{collection:"objects",discriminatorKey:"type"})},_.getModelFrom=e=>(_._model||_._createModel(e),_._model),_._createModel=e=>{_._model=e.model("Objects3D",_.getSchemaFrom(e)),_._model.discriminator("Object3D",new e.Schema({}))},_.registerModelTo=e=>(_._model||_._createModel(e),e),_._schema=null,_._model=null;var N=Object.freeze({__proto__:null,Object3D:_});
/**
 * @module Schemas/Audio/Audio
 * @desc Export the ThreeJs Audio Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:B}=N;let C=void 0,O=void 0;function D(e){return C||function(e){const t=e.Schema;C=new t({})}(e),C}function x(e){const t=B.getModelFrom(e);O=t.discriminator("Audio",D(e))}var I={name:"Audio",getSchemaFrom:D,getModelFrom:function(e){return O||x(e),O},registerModelTo:function(e){return O||x(e),e}};
/**
 * @module Schemas/Audio/AudioListener
 * @desc Export the ThreeJs AudioListener Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:A}=N;let E=void 0,G=void 0;function L(e){return E||function(e){const t=e.Schema;E=new t({})}(e),E}function P(e){const t=A.getModelFrom(e);G=t.discriminator("AudioListener",L(e))}var j={name:"AudioListener",getSchemaFrom:L,getModelFrom:function(e){return G||P(e),G},registerModelTo:function(e){return G||P(e),e}};
/**
 * @module Schemas/Audio/PositionalAudio
 * @desc Export the ThreeJs PositionalAudio Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:V}=N;let $=void 0,U=void 0;function R(e){return $||function(e){const t=e.Schema;$=new t({})}(e),$}function k(e){const t=V.getModelFrom(e);U=t.discriminator("PositionalAudio",R(e))}var H={name:"PositionalAudio",getSchemaFrom:R,getModelFrom:function(e){return U||k(e),U},registerModelTo:function(e){return U||k(e),e}};
/**
 * @module Schemas/Camera/ArrayCamera
 * @desc Export the ThreeJs ArrayCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:z}=N;let Y=void 0,Q=void 0;function W(e){return Y||function(e){const t=e.Schema;Y=new t({})}(e),Y}function X(e){const t=z.getModelFrom(e);Q=t.discriminator("ArrayCamera",W(e))}var Z={name:"ArrayCamera",getSchemaFrom:W,getModelFrom:function(e){return Q||X(e),Q},registerModelTo:function(e){return Q||X(e),e}};
/**
 * @module Schemas/Camera/Camera
 * @desc Export the ThreeJs Camera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:J}=N;let q=void 0,K=void 0;function ee(e){return q||function(e){const t=e.Schema;q=new t({})}(e),q}function te(e){const t=J.getModelFrom(e);K=t.discriminator("Camera",ee(e))}var re={name:"Camera",getSchemaFrom:ee,getModelFrom:function(e){return K||te(e),K},registerModelTo:function(e){return K||te(e),e}};
/**
 * @module Schemas/Camera/CubeCamera
 * @desc Export the ThreeJs CubeCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ne}=N;let oe=void 0,ie=void 0;function ae(e){return oe||function(e){const t=e.Schema;oe=new t({})}(e),oe}function ce(e){const t=ne.getModelFrom(e);ie=t.discriminator("CubeCamera",ae(e))}var se={name:"CubeCamera",getSchemaFrom:ae,getModelFrom:function(e){return ie||ce(e),ie},registerModelTo:function(e){return ie||ce(e),e}};
/**
 * @module Schemas/Camera/OrthographicCamera
 * @desc Export the ThreeJs OrthographicCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:de}=N;let ue=void 0,me=void 0;function le(e){return ue||function(e){const t=e.Schema;ue=new t({})}(e),ue}function fe(e){const t=de.getModelFrom(e);me=t.discriminator("OrthographicCamera",le(e))}var he={name:"OrthographicCamera",getSchemaFrom:le,getModelFrom:function(e){return me||fe(e),me},registerModelTo:function(e){return me||fe(e),e}};
/**
 * @module Schemas/Camera/PerspectiveCamera
 * @desc Export the ThreeJs PerspectiveCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ge}=N;let pe=void 0,Se=void 0;function ye(e){return pe||function(e){const t=e.Schema;pe=new t({})}(e),pe}function ve(e){const t=ge.getModelFrom(e);Se=t.discriminator("PerspectiveCamera",ye(e))}var Me={name:"PerspectiveCamera",getSchemaFrom:ye,getModelFrom:function(e){return Se||ve(e),Se},registerModelTo:function(e){return Se||ve(e),e}};
/**
 * @module Schemas/Core/BufferAttribute
 * @desc Export the ThreeJs BufferAttribute Model and Schema for Mongoose.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{isInt8Array:be,isInt16Array:Te,isInt32Array:Fe,isFloat32Array:we,isFloat64Array:_e,isUint8Array:Ne,isUint8ClampedArray:Be,isUint16Array:Ce,isUint32Array:Oe,isBigInt64Array:De,isBigUint64Array:xe}=o;let Ie=void 0;var Ae={name:"BufferAttribute",getSchemaFrom:function(e){return Ie||function(e){const t=e.Schema,r=t.Types.Mixed,n={Int8Array:0,Uint8Array:1,Uint8ClampedArray:2,Int16Array:3,Uint16Array:4,Int32Array:5,Uint32Array:6,Float32Array:7,Float64Array:8,BigInt64Array:9,BigUint64Array:10};Ie=new t({array:{type:Buffer,set:e=>{const t=e.length;let r=null,o=0;if(be(e)){r=Buffer.allocUnsafe(1+1*t),o=r.writeUInt8(n.Int8Array,o);for(let n=0;n<t;n++)o=r.writeInt8(e[n],o)}else if(Ne(e)){r=Buffer.allocUnsafe(1+1*t),o=r.writeUInt8(n.Uint8Array,o);for(let n=0;n<t;n++)o=r.writeUInt8(e[n],o)}else if(Be(e)){r=Buffer.allocUnsafe(1+1*t),o=r.writeUInt8(n.Uint8ClampedArray,o);for(let n=0;n<t;n++)o=r.writeUInt8(e[n],o)}else if(Te(e)){r=Buffer.allocUnsafe(1+2*t),o=r.writeUInt8(n.Int16Array,o);for(let n=0;n<t;n++)o=r.writeInt16BE(e[n],o)}else if(Ce(e)){r=Buffer.allocUnsafe(1+2*t),o=r.writeUInt8(n.Uint16Array,o);for(let n=0;n<t;n++)o=r.writeUInt16BE(e[n],o)}else if(Fe(e)){r=Buffer.allocUnsafe(1+4*t),o=r.writeUInt8(n.Int32Array,o);for(let n=0;n<t;n++)o=r.writeInt32BE(e[n],o)}else if(Oe(e)){r=Buffer.allocUnsafe(1+4*t),o=r.writeUInt8(n.Uint32Array,o);for(let n=0;n<t;n++)o=r.writeUInt32BE(e[n],o)}else if(we(e)){r=Buffer.allocUnsafe(1+4*t),o=r.writeUInt8(n.Float32Array,o);for(let n=0;n<t;n++)o=r.writeFloatBE(e[n],o)}else if(_e(e)){r=Buffer.allocUnsafe(1+8*t),o=r.writeUInt8(n.Float64Array,o);for(let n=0;n<t;n++)o=r.writeDoubleBE(e[n],o)}else if(De(e)){r=Buffer.allocUnsafe(1+8*t),o=r.writeUInt8(n.BigInt64Array,o);for(let n=0;n<t;n++)o=r.writeDoubleBE(e[n],o)}else{if(!xe(e))throw new Error("Unable to determine the array type to bufferize.");r=Buffer.allocUnsafe(1+8*t),o=r.writeUInt8(n.BigUint64Array,o);for(let n=0;n<t;n++)o=r.writeDoubleBE(e[n],o)}return r}},count:Number,dynamic:Boolean,itemSize:Number,name:String,needsUpdate:Boolean,normalized:Boolean,updateRange:r,uuid:String,version:Number},{_id:!1,id:!1})}(e),Ie},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Core/BufferGeometry
 * @desc Export the ThreeJs BufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferAttribute Schemas/Core/BufferAttribute}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Ee=void 0,Ge=void 0;function Le(e){return Ee||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Vector3,i=Ae.getSchemaFrom(e);Ee=new t({uuid:String,name:String,type:String,index:i,attributes:{position:i,normal:i,color:i,uv:i},groups:n,boundingBox:{min:o,max:o},boundingSphere:{center:o,radius:Number},drawRange:n},{collection:"geometries",discriminatorKey:"type"})}(e),Ee}function Pe(e){Ge=e.model("BufferGeometries",Le(e)),Ge.discriminator("BufferGeometry",new e.Schema({}))}const je={getSchemaFrom:Le,getModelFrom:function(e){return Ge||Pe(e),Ge},registerModelTo:function(e){return Ge||Pe(e),e}};var Ve=Object.freeze({__proto__:null,BufferGeometry:je});
/**
 * @module Schemas/Curves/Curve
 * @desc Export the ThreeJs Curve Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let $e=void 0,Ue=void 0;function Re(e){return $e||function(e){const t=e.Schema;$e=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{collection:"curves",discriminatorKey:"type"})}(e),$e}function ke(e){Ue=e.model("Curves",Re(e)),Ue.discriminator("Curve",new e.Schema({}))}var He={name:"Curve",getSchemaFrom:Re,getModelFrom:function(e){return Ue||ke(e),Ue},registerModelTo:function(e){return Ue||ke(e),e}},ze={Curve:He};
/**
 * @module Schemas/Core/CurvePath
 * @desc Export the ThreeJs CurvePath Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 * @augments module:Schemas/Curves/Curve
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Curve:Ye}=ze;let Qe=void 0,We=void 0;function Xe(e){return Qe||function(e){const t=e.Schema,r=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});Qe=new t({curves:[r],autoClose:{type:Boolean,default:!1}})}(e),Qe}function Ze(e){const t=Ye.getModelFrom(e);We=t.discriminator("CurvePath",Xe(e))}var Je={name:"CurvePath",getSchemaFrom:Xe,getModelFrom:function(e){return We||Ze(e),We},registerModelTo:function(e){return We||Ze(e),e}};
/**
 * @module Schemas/Core/Face3
 * @desc Export the ThreeJs Face3 Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let qe=void 0;var Ke={name:"Face3",getSchemaFrom:function(e){return qe||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Vector3;qe=new t({a:Number,b:Number,c:Number,normal:o,vertexNormals:[Number],color:n,vertexColors:[Number],materialIndex:Number},{_id:!1,id:!1})}(e),qe},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Core/Geometry
 * @desc Export the ThreeJs Geometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Face3 Schemas/Core/Face3}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let et=void 0,tt=void 0;function rt(e){return et||function(e){const t=Ke.getSchemaFrom(e),r=e.Schema,n=r.Types.Vector3;et=new r({uuid:String,name:String,type:String,vertices:[n],colors:[Number],faces:[t],faceVertexUvs:[[Number]],morphTargets:[Number],morphNormals:[Number],skinWeights:[Number],skinIndices:[Number],lineDistances:[Number],boundingBox:{min:n,max:n},boundingSphere:{center:n,radius:Number},elementsNeedUpdate:Boolean,verticesNeedUpdate:Boolean,uvsNeedUpdate:Boolean,normalsNeedUpdate:Boolean,colorsNeedUpdate:Boolean,lineDistancesNeedUpdate:Boolean,groupsNeedUpdate:Boolean},{collection:"geometries",discriminatorKey:"type"})}(e),et}function nt(e){tt=e.model("Geometries",rt(e)),tt.discriminator("Geometry",new e.Schema({}))}const ot={name:"Geometry",getSchemaFrom:rt,getModelFrom:function(e){return tt||nt(e),tt},registerModelTo:function(e){return tt||nt(e),e}};var it=Object.freeze({__proto__:null,Geometry:ot});
/**
 * @module Schemas/Core/Path
 * @desc Export the ThreeJs Path Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:at}=ze;let ct=void 0,st=void 0;function dt(e){return ct||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});ct=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r})}(e),ct}function ut(e){const t=at.getModelFrom(e);st=t.discriminator("Path",dt(e))}var mt={name:"Path",getSchemaFrom:dt,getModelFrom:function(e){return st||ut(e),st},registerModelTo:function(e){return st||ut(e),e}};
/**
 * @module Schemas/Core/Shape
 * @desc Export the ThreeJs Shape Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:lt}=ze;let ft=void 0,ht=void 0;function gt(e){return ft||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),o=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1});ft=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[o]})}(e),ft}function pt(e){const t=lt.getModelFrom(e);ht=t.discriminator("Shape",gt(e))}var St={name:"Shape",getSchemaFrom:gt,getModelFrom:function(e){return ht||pt(e),ht},registerModelTo:function(e){return ht||pt(e),e}};
/**
 * @module Schemas/Curves/ArcCurve
 * @desc Export the ThreeJs ArcCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:yt}=ze;let vt=void 0,Mt=void 0;function bt(e){return vt||function(e){const t=e.Schema;vt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),vt}function Tt(e){const t=yt.getModelFrom(e);Mt=t.discriminator("ArcCurve",bt(e))}var Ft={name:"ArcCurve",getSchemaFrom:bt,getModelFrom:function(e){return Mt||Tt(e),Mt},registerModelTo:function(e){return Mt||Tt(e),e}};
/**
 * @module Schemas/Curves/CatmullRomCurve3
 * @desc Export the ThreeJs CatmullRomCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:wt}=ze;let _t=void 0,Nt=void 0;function Bt(e){return _t||function(e){const t=e.Schema,r=t.Types.Vector3;_t=new t({points:[r],closed:Boolean,curveType:String,tension:Number})}(e),_t}function Ct(e){const t=wt.getModelFrom(e);Nt=t.discriminator("CatmullRomCurve3",Bt(e))}var Ot={name:"CatmullRomCurve3",getSchemaFrom:Bt,getModelFrom:function(e){return Nt||Ct(e),Nt},registerModelTo:function(e){return Nt||Ct(e),e}};
/**
 * @module Schemas/Curves/CubicBezierCurve
 * @desc Export the ThreeJs CubicBezierCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Dt}=ze;let xt=void 0,It=void 0;function At(e){return xt||function(e){const t=e.Schema,r=t.Types.Vector2;xt=new t({v0:r,v1:r,v2:r,v3:r})}(e),xt}function Et(e){const t=Dt.getModelFrom(e);It=t.discriminator("CubicBezierCurve",At(e))}var Gt={name:"CubicBezierCurve",getSchemaFrom:At,getModelFrom:function(e){return It||Et(e),It},registerModelTo:function(e){return It||Et(e),e}};
/**
 * @module Schemas/Curves/CubicBezierCurve3
 * @desc Export the ThreeJs CubicBezierCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Lt}=ze;let Pt=void 0,jt=void 0;function Vt(e){return Pt||function(e){const t=e.Schema,r=t.Types.Vector3;Pt=new t({v0:r,v1:r,v2:r,v3:r})}(e),Pt}function $t(e){const t=Lt.getModelFrom(e);jt=t.discriminator("CubicBezierCurve3",Vt(e))}var Ut={name:"CubicBezierCurve3",getSchemaFrom:Vt,getModelFrom:function(e){return jt||$t(e),jt},registerModelTo:function(e){return jt||$t(e),e}};
/**
 * @module Schemas/Curves/CurveExtras
 * @desc Export the ThreeJs CurveExtras Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Rt}=ze;let kt=void 0,Ht=void 0;function zt(e){return kt||function(e){const t=e.Schema;kt=new t({})}(e),kt}function Yt(e){const t=Rt.getModelFrom(e);Ht=t.discriminator("CurveExtras",zt(e))}var Qt={name:"CurveExtras",getSchemaFrom:zt,getModelFrom:function(e){return Ht||Yt(e),Ht},registerModelTo:function(e){return Ht||Yt(e),e}};
/**
 * @module Schemas/Curves/EllipseCurve
 * @desc Export the ThreeJs EllipseCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Wt}=ze;let Xt=void 0,Zt=void 0;function Jt(e){return Xt||function(e){const t=e.Schema;Xt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),Xt}function qt(e){const t=Wt.getModelFrom(e);Zt=t.discriminator("EllipseCurve",Jt(e))}var Kt={name:"EllipseCurve",getSchemaFrom:Jt,getModelFrom:function(e){return Zt||qt(e),Zt},registerModelTo:function(e){return Zt||qt(e),e}};
/**
 * @module Schemas/Curves/LineCurve
 * @desc Export the ThreeJs LineCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:er}=ze;let tr=void 0,rr=void 0;function nr(e){return tr||function(e){const t=e.Schema,r=t.Types.Vector2;tr=new t({v0:r,v1:r})}(e),tr}function or(e){const t=er.getModelFrom(e);rr=t.discriminator("LineCurve",nr(e))}var ir={name:"LineCurve",getSchemaFrom:nr,getModelFrom:function(e){return rr||or(e),rr},registerModelTo:function(e){return rr||or(e),e}};
/**
 * @module Schemas/Curves/LineCurve3
 * @desc Export the ThreeJs LineCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:ar}=ze;let cr=void 0,sr=void 0;function dr(e){return cr||function(e){const t=e.Schema,r=t.Types.Vector3;cr=new t({v0:r,v1:r})}(e),cr}function ur(e){const t=ar.getModelFrom(e);sr=t.discriminator("LineCurve3",dr(e))}var mr={name:"LineCurve3",getSchemaFrom:dr,getModelFrom:function(e){return sr||ur(e),sr},registerModelTo:function(e){return sr||ur(e),e}};
/**
 * @module Schemas/Curves/NURBSCurve
 * @desc Export the ThreeJs NURBSCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:lr}=ze;let fr=void 0,hr=void 0;function gr(e){return fr||function(e){const t=e.Schema;fr=new t({})}(e),fr}function pr(e){const t=lr.getModelFrom(e);hr=t.discriminator("NURBSCurve",gr(e))}var Sr={name:"NURBSCurve",getSchemaFrom:gr,getModelFrom:function(e){return hr||pr(e),hr},registerModelTo:function(e){return hr||pr(e),e}};
/**
 * @module Schemas/Curves/NURBSSurface
 * @desc Export the ThreeJs NURBSSurface Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:yr}=ze;let vr=void 0,Mr=void 0;function br(e){return vr||function(e){const t=e.Schema;vr=new t({})}(e),vr}function Tr(e){const t=yr.getModelFrom(e);Mr=t.discriminator("NURBSSurface",br(e))}var Fr={name:"NURBSSurface",getSchemaFrom:br,getModelFrom:function(e){return Mr||Tr(e),Mr},registerModelTo:function(e){return Mr||Tr(e),e}};
/**
 * @module Schemas/Curves/QuadraticBezierCurve
 * @desc Export the ThreeJs QuadraticBezierCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:wr}=ze;let _r=void 0,Nr=void 0;function Br(e){return _r||function(e){const t=e.Schema,r=t.Types.Vector2;_r=new t({v0:r,v1:r,v2:r})}(e),_r}function Cr(e){const t=wr.getModelFrom(e);Nr=t.discriminator("QuadraticBezierCurve",Br(e))}var Or={name:"QuadraticBezierCurve",getSchemaFrom:Br,getModelFrom:function(e){return Nr||Cr(e),Nr},registerModelTo:function(e){return Nr||Cr(e),e}};
/**
 * @module Schemas/Curves/QuadraticBezierCurve3
 * @desc Export the ThreeJs QuadraticBezierCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Dr}=ze;let xr=void 0,Ir=void 0;function Ar(e){return xr||function(e){const t=e.Schema,r=t.Types.Vector3;xr=new t({v0:r,v1:r,v2:r})}(e),xr}function Er(e){const t=Dr.getModelFrom(e);Ir=t.discriminator("QuadraticBezierCurve3",Ar(e))}var Gr={name:"QuadraticBezierCurve3",getSchemaFrom:Ar,getModelFrom:function(e){return Ir||Er(e),Ir},registerModelTo:function(e){return Ir||Er(e),e}};
/**
 * @module Schemas/Curves/SplineCurve
 * @desc Export the ThreeJs SplineCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Lr}=ze;let Pr=void 0,jr=void 0;function Vr(e){return Pr||function(e){const t=e.Schema,r=t.Types.Vector3;Pr=new t({points:[r]})}(e),Pr}function $r(e){const t=Lr.getModelFrom(e);jr=t.discriminator("SplineCurve",Vr(e))}var Ur={name:"SplineCurve",getSchemaFrom:Vr,getModelFrom:function(e){return jr||$r(e),jr},registerModelTo:function(e){return jr||$r(e),e}};
/**
 * @module Schemas/Geometries/BoxBufferGeometry
 * @desc Export the ThreeJs BoxBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Rr}=Ve;let kr=void 0,Hr=void 0;function zr(e){return kr||function(e){const t=e.Schema;kr=new t({})}(e),kr}function Yr(e){const t=Rr.getModelFrom(e);Hr=t.discriminator("BoxBufferGeometry",zr(e))}var Qr={name:"BoxBufferGeometry",getSchemaFrom:zr,getModelFrom:function(e){return Hr||Yr(e),Hr},registerModelTo:function(e){return Hr||Yr(e),e}};
/**
 * @module Schemas/Geometries/BoxGeometry
 * @desc Export the ThreeJs BoxGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Wr}=it;let Xr=void 0,Zr=void 0;function Jr(e){return Xr||function(e){const t=e.Schema;Xr=new t({})}(e),Xr}function qr(e){const t=Wr.getModelFrom(e);Zr=t.discriminator("BoxGeometry",Jr(e))}var Kr={name:"BoxGeometry",getSchemaFrom:Jr,getModelFrom:function(e){return Zr||qr(e),Zr},registerModelTo:function(e){return Zr||qr(e),e}};
/**
 * @module Schemas/Geometries/CircleBufferGeometry
 * @desc Export the ThreeJs CircleBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:en}=Ve;let tn=void 0,rn=void 0;function nn(e){return tn||function(e){const t=e.Schema;tn=new t({})}(e),tn}function on(e){const t=en.getModelFrom(e);rn=t.discriminator("CircleBufferGeometry",nn(e))}var an={name:"CircleBufferGeometry",getSchemaFrom:nn,getModelFrom:function(e){return rn||on(e),rn},registerModelTo:function(e){return rn||on(e),e}};
/**
 * @module Schemas/Geometries/CircleGeometry
 * @desc Export the ThreeJs CircleGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:cn}=it;let sn=void 0,dn=void 0;function un(e){return sn||function(e){const t=e.Schema;sn=new t({})}(e),sn}function mn(e){const t=cn.getModelFrom(e);dn=t.discriminator("CircleGeometry",un(e))}var ln={name:"CircleGeometry",getSchemaFrom:un,getModelFrom:function(e){return dn||mn(e),dn},registerModelTo:function(e){return dn||mn(e),e}};
/**
 * @module Schemas/Geometries/ConeBufferGeometry
 * @desc Export the ThreeJs ConeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:fn}=Ve;let hn=void 0,gn=void 0;function pn(e){return hn||function(e){const t=e.Schema;hn=new t({})}(e),hn}function Sn(e){const t=fn.getModelFrom(e);gn=t.discriminator("ConeBufferGeometry",pn(e))}var yn={name:"ConeBufferGeometry",getSchemaFrom:pn,getModelFrom:function(e){return gn||Sn(e),gn},registerModelTo:function(e){return gn||Sn(e),e}};
/**
 * @module Schemas/Geometries/ConeGeometry
 * @desc Export the ThreeJs ConeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:vn}=it;let Mn=void 0,bn=void 0;function Tn(e){return Mn||function(e){const t=e.Schema;Mn=new t({})}(e),Mn}function Fn(e){const t=vn.getModelFrom(e);bn=t.discriminator("ConeGeometry",Tn(e))}var wn={name:"ConeGeometry",getSchemaFrom:Tn,getModelFrom:function(e){return bn||Fn(e),bn},registerModelTo:function(e){return bn||Fn(e),e}};
/**
 * @module Schemas/Geometries/ConvexGeometry
 * @desc Export the ThreeJs ConvexGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:_n}=it;let Nn=void 0,Bn=void 0;function Cn(e){return Nn||function(e){const t=e.Schema;Nn=new t({})}(e),Nn}function On(e){const t=_n.getModelFrom(e);Bn=t.discriminator("ConvexGeometry",Cn(e))}var Dn={name:"ConvexGeometry",getSchemaFrom:Cn,getModelFrom:function(e){return Bn||On(e),Bn},registerModelTo:function(e){return Bn||On(e),e}};
/**
 * @module Schemas/Geometries/CylinderBufferGeometry
 * @desc Export the ThreeJs CylinderBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:xn}=Ve;let In=void 0,An=void 0;function En(e){return In||function(e){const t=e.Schema;In=new t({})}(e),In}function Gn(e){const t=xn.getModelFrom(e);An=t.discriminator("CylinderBufferGeometry",En(e))}var Ln={name:"CylinderBufferGeometry",getSchemaFrom:En,getModelFrom:function(e){return An||Gn(e),An},registerModelTo:function(e){return An||Gn(e),e}};
/**
 * @module Schemas/Geometries/CylinderGeometry
 * @desc Export the ThreeJs CylinderGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Pn}=it;let jn=void 0,Vn=void 0;function $n(e){return jn||function(e){const t=e.Schema;jn=new t({})}(e),jn}function Un(e){const t=Pn.getModelFrom(e);Vn=t.discriminator("CylinderGeometry",$n(e))}var Rn={name:"CylinderGeometry",getSchemaFrom:$n,getModelFrom:function(e){return Vn||Un(e),Vn},registerModelTo:function(e){return Vn||Un(e),e}};
/**
 * @module Schemas/Geometries/DecalGeometry
 * @desc Export the ThreeJs DecalGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:kn}=it;let Hn=void 0,zn=void 0;function Yn(e){return Hn||function(e){const t=e.Schema;Hn=new t({})}(e),Hn}function Qn(e){const t=kn.getModelFrom(e);zn=t.discriminator("DecalGeometry",Yn(e))}var Wn={name:"DecalGeometry",getSchemaFrom:Yn,getModelFrom:function(e){return zn||Qn(e),zn},registerModelTo:function(e){return zn||Qn(e),e}};
/**
 * @module Schemas/Geometries/DodecahedronGeometry
 * @desc Export the ThreeJs DodecahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Xn}=it;let Zn=void 0,Jn=void 0;function qn(e){return Zn||function(e){const t=e.Schema;Zn=new t({})}(e),Zn}function Kn(e){const t=Xn.getModelFrom(e);Jn=t.discriminator("DodecahedronGeometry",qn(e))}var eo={name:"DodecahedronGeometry",getSchemaFrom:qn,getModelFrom:function(e){return Jn||Kn(e),Jn},registerModelTo:function(e){return Jn||Kn(e),e}};
/**
 * @module Schemas/Geometries/EdgesGeometry
 * @desc Export the ThreeJs EdgesGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:to}=it;let ro=void 0,no=void 0;function oo(e){return ro||function(e){const t=e.Schema;ro=new t({})}(e),ro}function io(e){const t=to.getModelFrom(e);no=t.discriminator("EdgesGeometry",oo(e))}var ao={name:"EdgesGeometry",getSchemaFrom:oo,getModelFrom:function(e){return no||io(e),no},registerModelTo:function(e){return no||io(e),e}};
/**
 * @module Schemas/Geometries/ExtrudeBufferGeometry
 * @desc Export the ThreeJs ExtrudeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:co}=Ve;let so=void 0,uo=void 0;function mo(e){return so||function(e){const t=e.Schema;so=new t({})}(e),so}function lo(e){const t=co.getModelFrom(e);uo=t.discriminator("ExtrudeBufferGeometry",mo(e))}var fo={name:"ExtrudeBufferGeometry",getSchemaFrom:mo,getModelFrom:function(e){return uo||lo(e),uo},registerModelTo:function(e){return uo||lo(e),e}};
/**
 * @module Schemas/Geometries/ExtrudeGeometry
 * @desc Export the ThreeJs ExtrudeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ho}=it;let go=void 0,po=void 0;function So(e){return go||function(e){const t=e.Schema;go=new t({})}(e),go}function yo(e){const t=ho.getModelFrom(e);po=t.discriminator("ExtrudeGeometry",So(e))}var vo={name:"ExtrudeGeometry",getSchemaFrom:So,getModelFrom:function(e){return po||yo(e),po},registerModelTo:function(e){return po||yo(e),e}};
/**
 * @module Schemas/Geometries/IcosahedronBufferGeometry
 * @desc Export the ThreeJs IcosahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Mo}=Ve;let bo=void 0,To=void 0;function Fo(e){return bo||function(e){const t=e.Schema;bo=new t({})}(e),bo}function wo(e){const t=Mo.getModelFrom(e);To=t.discriminator("IcosahedronBufferGeometry",Fo(e))}var _o={name:"IcosahedronBufferGeometry",getSchemaFrom:Fo,getModelFrom:function(e){return To||wo(e),To},registerModelTo:function(e){return To||wo(e),e}};
/**
 * @module Schemas/Geometries/IcosahedronGeometry
 * @desc Export the ThreeJs IcosahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:No}=it;let Bo=void 0,Co=void 0;function Oo(e){return Bo||function(e){const t=e.Schema;Bo=new t({})}(e),Bo}function Do(e){const t=No.getModelFrom(e);Co=t.discriminator("IcosahedronGeometry",Oo(e))}var xo={name:"IcosahedronGeometry",getSchemaFrom:Oo,getModelFrom:function(e){return Co||Do(e),Co},registerModelTo:function(e){return Co||Do(e),e}};
/**
 * @module Schemas/Geometries/InstancedBufferGeometry
 * @desc Export the ThreeJs InstancedBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Io}=Ve;let Ao=void 0,Eo=void 0;function Go(e){return Ao||function(e){const t=e.Schema;Ao=new t({})}(e),Ao}function Lo(e){const t=Io.getModelFrom(e);Eo=t.discriminator("InstancedBufferGeometry",Go(e))}var Po={name:"InstancedBufferGeometry",getSchemaFrom:Go,getModelFrom:function(e){return Eo||Lo(e),Eo},registerModelTo:function(e){return Eo||Lo(e),e}};
/**
 * @module Schemas/Geometries/LatheBufferGeometry
 * @desc Export the ThreeJs LatheBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:jo}=Ve;let Vo=void 0,$o=void 0;function Uo(e){return Vo||function(e){const t=e.Schema;Vo=new t({})}(e),Vo}function Ro(e){const t=jo.getModelFrom(e);$o=t.discriminator("LatheBufferGeometry",Uo(e))}var ko={name:"LatheBufferGeometry",getSchemaFrom:Uo,getModelFrom:function(e){return $o||Ro(e),$o},registerModelTo:function(e){return $o||Ro(e),e}};
/**
 * @module Schemas/Geometries/LatheGeometry
 * @desc Export the ThreeJs LatheGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ho}=it;let zo=void 0,Yo=void 0;function Qo(e){return zo||function(e){const t=e.Schema;zo=new t({})}(e),zo}function Wo(e){const t=Ho.getModelFrom(e);Yo=t.discriminator("LatheGeometry",Qo(e))}var Xo={name:"LatheGeometry",getSchemaFrom:Qo,getModelFrom:function(e){return Yo||Wo(e),Yo},registerModelTo:function(e){return Yo||Wo(e),e}};
/**
 * @module Schemas/Geometries/OctahedronBufferGeometry
 * @desc Export the ThreeJs OctahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Zo}=Ve;let Jo=void 0,qo=void 0;function Ko(e){return Jo||function(e){const t=e.Schema;Jo=new t({})}(e),Jo}function ei(e){const t=Zo.getModelFrom(e);qo=t.discriminator("OctahedronBufferGeometry",Ko(e))}var ti={name:"OctahedronBufferGeometry",getSchemaFrom:Ko,getModelFrom:function(e){return qo||ei(e),qo},registerModelTo:function(e){return qo||ei(e),e}};
/**
 * @module Schemas/Geometries/OctahedronGeometry
 * @desc Export the ThreeJs OctahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ri}=it;let ni=void 0,oi=void 0;function ii(e){return ni||function(e){const t=e.Schema;ni=new t({})}(e),ni}function ai(e){const t=ri.getModelFrom(e);oi=t.discriminator("OctahedronGeometry",ii(e))}var ci={name:"OctahedronGeometry",getSchemaFrom:ii,getModelFrom:function(e){return oi||ai(e),oi},registerModelTo:function(e){return oi||ai(e),e}};
/**
 * @module Schemas/Geometries/ParametricBufferGeometry
 * @desc Export the ThreeJs ParametricBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:si}=Ve;let di=void 0,ui=void 0;function mi(e){return di||function(e){const t=e.Schema;di=new t({})}(e),di}function li(e){const t=si.getModelFrom(e);ui=t.discriminator("ParametricBufferGeometry",mi(e))}var fi={name:"ParametricBufferGeometry",getSchemaFrom:mi,getModelFrom:function(e){return ui||li(e),ui},registerModelTo:function(e){return ui||li(e),e}};
/**
 * @module Schemas/Geometries/ParametricGeometry
 * @desc Export the ThreeJs ParametricGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:hi}=it;let gi=void 0,pi=void 0;function Si(e){return gi||function(e){const t=e.Schema;gi=new t({})}(e),gi}function yi(e){const t=hi.getModelFrom(e);pi=t.discriminator("ParametricGeometry",Si(e))}var vi={name:"ParametricGeometry",getSchemaFrom:Si,getModelFrom:function(e){return pi||yi(e),pi},registerModelTo:function(e){return pi||yi(e),e}};
/**
 * @module Schemas/Geometries/PlaneBufferGeometry
 * @desc Export the ThreeJs PlaneBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Mi}=Ve;let bi=void 0,Ti=void 0;function Fi(e){return bi||function(e){const t=e.Schema;bi=new t({})}(e),bi}function wi(e){const t=Mi.getModelFrom(e);Ti=t.discriminator("PlaneBufferGeometry",Fi(e))}var _i={name:"PlaneBufferGeometry",getSchemaFrom:Fi,getModelFrom:function(e){return Ti||wi(e),Ti},registerModelTo:function(e){return Ti||wi(e),e}};
/**
 * @module Schemas/Geometries/PlaneGeometry
 * @desc Export the ThreeJs PlaneGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ni}=it;let Bi=void 0,Ci=void 0;function Oi(e){return Bi||function(e){const t=e.Schema;Bi=new t({})}(e),Bi}function Di(e){const t=Ni.getModelFrom(e);Ci=t.discriminator("PlaneGeometry",Oi(e))}var xi={name:"PlaneGeometry",getSchemaFrom:Oi,getModelFrom:function(e){return Ci||Di(e),Ci},registerModelTo:function(e){return Ci||Di(e),e}};
/**
 * @module Schemas/Geometries/PolyhedronBufferGeometry
 * @desc Export the ThreeJs PolyhedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ii}=Ve;let Ai=void 0,Ei=void 0;function Gi(e){return Ai||function(e){const t=e.Schema;Ai=new t({})}(e),Ai}function Li(e){const t=Ii.getModelFrom(e);Ei=t.discriminator("PolyhedronBufferGeometry",Gi(e))}var Pi={name:"PolyhedronBufferGeometry",getSchemaFrom:Gi,getModelFrom:function(e){return Ei||Li(e),Ei},registerModelTo:function(e){return Ei||Li(e),e}};
/**
 * @module Schemas/Geometries/PolyhedronGeometry
 * @desc Export the ThreeJs PolyhedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ji}=it;let Vi=void 0,$i=void 0;function Ui(e){return Vi||function(e){const t=e.Schema;Vi=new t({})}(e),Vi}function Ri(e){const t=ji.getModelFrom(e);$i=t.discriminator("PolyhedronGeometry",Ui(e))}var ki={name:"PolyhedronGeometry",getSchemaFrom:Ui,getModelFrom:function(e){return $i||Ri(e),$i},registerModelTo:function(e){return $i||Ri(e),e}};
/**
 * @module Schemas/Geometries/RingBufferGeometry
 * @desc Export the ThreeJs RingBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Hi}=Ve;let zi=void 0,Yi=void 0;function Qi(e){return zi||function(e){const t=e.Schema;zi=new t({})}(e),zi}function Wi(e){const t=Hi.getModelFrom(e);Yi=t.discriminator("RingBufferGeometry",Qi(e))}var Xi={name:"RingBufferGeometry",getSchemaFrom:Qi,getModelFrom:function(e){return Yi||Wi(e),Yi},registerModelTo:function(e){return Yi||Wi(e),e}};
/**
 * @module Schemas/Geometries/RingGeometry
 * @desc Export the ThreeJs RingGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Zi}=it;let Ji=void 0,qi=void 0;function Ki(e){return Ji||function(e){const t=e.Schema;Ji=new t({})}(e),Ji}function ea(e){const t=Zi.getModelFrom(e);qi=t.discriminator("RingGeometry",Ki(e))}var ta={name:"RingGeometry",getSchemaFrom:Ki,getModelFrom:function(e){return qi||ea(e),qi},registerModelTo:function(e){return qi||ea(e),e}};
/**
 * @module Schemas/Geometries/ShapeBufferGeometry
 * @desc Export the ThreeJs ShapeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:ra}=Ve;let na=void 0,oa=void 0;function ia(e){return na||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),o=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1}),i=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[o]},{id:!1,_id:!1});na=new t({shapes:[i],curveSegments:Number})}(e),na}function aa(e){const t=ra.getModelFrom(e);oa=t.discriminator("ShapeBufferGeometry",ia(e))}var ca={name:"ShapeBufferGeometry",getSchemaFrom:ia,getModelFrom:function(e){return oa||aa(e),oa},registerModelTo:function(e){return oa||aa(e),e}};
/**
 * @module Schemas/Geometries/ShapeGeometry
 * @desc Export the ThreeJs ShapeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:sa}=it;let da=void 0,ua=void 0;function ma(e){return da||function(e){const t=e.Schema;da=new t({})}(e),da}function la(e){const t=sa.getModelFrom(e);ua=t.discriminator("ShapeGeometry",ma(e))}var fa={name:"ShapeGeometry",getSchemaFrom:ma,getModelFrom:function(e){return ua||la(e),ua},registerModelTo:function(e){return ua||la(e),e}};
/**
 * @module Schemas/Geometries/SphereBufferGeometry
 * @desc Export the ThreeJs SphereBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:ha}=Ve;let ga=void 0,pa=void 0;function Sa(e){return ga||function(e){const t=e.Schema;ga=new t({})}(e),ga}function ya(e){const t=ha.getModelFrom(e);pa=t.discriminator("SphereBufferGeometry",Sa(e))}var va={name:"SphereBufferGeometry",getSchemaFrom:Sa,getModelFrom:function(e){return pa||ya(e),pa},registerModelTo:function(e){return pa||ya(e),e}};
/**
 * @module Schemas/Geometries/SphereGeometry
 * @desc Export the ThreeJs SphereGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ma}=it;let ba=void 0,Ta=void 0;function Fa(e){return ba||function(e){const t=e.Schema;ba=new t({})}(e),ba}function wa(e){const t=Ma.getModelFrom(e);Ta=t.discriminator("SphereGeometry",Fa(e))}var _a={name:"SphereGeometry",getSchemaFrom:Fa,getModelFrom:function(e){return Ta||wa(e),Ta},registerModelTo:function(e){return Ta||wa(e),e}};
/**
 * @module Schemas/Geometries/TeapotBufferGeometry
 * @desc Export the ThreeJs TeapotBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Na}=Ve;let Ba=void 0,Ca=void 0;function Oa(e){return Ba||function(e){const t=e.Schema;Ba=new t({})}(e),Ba}function Da(e){const t=Na.getModelFrom(e);Ca=t.discriminator("TeapotBufferGeometry",Oa(e))}var xa={name:"TeapotBufferGeometry",getSchemaFrom:Oa,getModelFrom:function(e){return Ca||Da(e),Ca},registerModelTo:function(e){return Ca||Da(e),e}};
/**
 * @module Schemas/Geometries/TetrahedronBufferGeometry
 * @desc Export the ThreeJs TetrahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ia}=Ve;let Aa=void 0,Ea=void 0;function Ga(e){return Aa||function(e){const t=e.Schema;Aa=new t({})}(e),Aa}function La(e){const t=Ia.getModelFrom(e);Ea=t.discriminator("TetrahedronBufferGeometry",Ga(e))}var Pa={name:"TetrahedronBufferGeometry",getSchemaFrom:Ga,getModelFrom:function(e){return Ea||La(e),Ea},registerModelTo:function(e){return Ea||La(e),e}};
/**
 * @module Schemas/Geometries/TetrahedronGeometry
 * @desc Export the ThreeJs TetrahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ja}=it;let Va=void 0,$a=void 0;function Ua(e){return Va||function(e){const t=e.Schema;Va=new t({})}(e),Va}function Ra(e){const t=ja.getModelFrom(e);$a=t.discriminator("TetrahedronGeometry",Ua(e))}var ka={name:"TetrahedronGeometry",getSchemaFrom:Ua,getModelFrom:function(e){return $a||Ra(e),$a},registerModelTo:function(e){return $a||Ra(e),e}};
/**
 * @module Schemas/Geometries/TextBufferGeometry
 * @desc Export the ThreeJs TextBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ha}=Ve;let za=void 0,Ya=void 0;function Qa(e){return za||function(e){const t=e.Schema;za=new t({})}(e),za}function Wa(e){const t=Ha.getModelFrom(e);Ya=t.discriminator("TextBufferGeometry",Qa(e))}var Xa={name:"TextBufferGeometry",getSchemaFrom:Qa,getModelFrom:function(e){return Ya||Wa(e),Ya},registerModelTo:function(e){return Ya||Wa(e),e}};
/**
 * @module Schemas/Geometries/TextGeometry
 * @desc Export the ThreeJs TextGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Za}=it;let Ja=void 0,qa=void 0;function Ka(e){return Ja||function(e){const t=e.Schema;Ja=new t({})}(e),Ja}function ec(e){const t=Za.getModelFrom(e);qa=t.discriminator("TextGeometry",Ka(e))}var tc={name:"TextGeometry",getSchemaFrom:Ka,getModelFrom:function(e){return qa||ec(e),qa},registerModelTo:function(e){return qa||ec(e),e}};
/**
 * @module Schemas/Geometries/TorusBufferGeometry
 * @desc Export the ThreeJs TorusBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:rc}=Ve;let nc=void 0,oc=void 0;function ic(e){return nc||function(e){const t=e.Schema;nc=new t({})}(e),nc}function ac(e){const t=rc.getModelFrom(e);oc=t.discriminator("TorusBufferGeometry",ic(e))}var cc={name:"TorusBufferGeometry",getSchemaFrom:ic,getModelFrom:function(e){return oc||ac(e),oc},registerModelTo:function(e){return oc||ac(e),e}};
/**
 * @module Schemas/Geometries/TorusGeometry
 * @desc Export the ThreeJs TorusGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:sc}=it;let dc=void 0,uc=void 0;function mc(e){return dc||function(e){const t=e.Schema;dc=new t({})}(e),dc}function lc(e){const t=sc.getModelFrom(e);uc=t.discriminator("TorusGeometry",mc(e))}var fc={name:"TorusGeometry",getSchemaFrom:mc,getModelFrom:function(e){return uc||lc(e),uc},registerModelTo:function(e){return uc||lc(e),e}};
/**
 * @module Schemas/Geometries/TorusKnotBufferGeometry
 * @desc Export the ThreeJs TorusKnotBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:hc}=Ve;let gc=void 0,pc=void 0;function Sc(e){return gc||function(e){const t=e.Schema;gc=new t({})}(e),gc}function yc(e){const t=hc.getModelFrom(e);pc=t.discriminator("TorusKnotBufferGeometry",Sc(e))}var vc={name:"TorusKnotBufferGeometry",getSchemaFrom:Sc,getModelFrom:function(e){return pc||yc(e),pc},registerModelTo:function(e){return pc||yc(e),e}};
/**
 * @module Schemas/Geometries/TorusKnotGeometry
 * @desc Export the ThreeJs TorusKnotGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Mc}=it;let bc=void 0,Tc=void 0;function Fc(e){return bc||function(e){const t=e.Schema;bc=new t({})}(e),bc}function wc(e){const t=Mc.getModelFrom(e);Tc=t.discriminator("TorusKnotGeometry",Fc(e))}var _c={name:"TorusKnotGeometry",getSchemaFrom:Fc,getModelFrom:function(e){return Tc||wc(e),Tc},registerModelTo:function(e){return Tc||wc(e),e}};
/**
 * @module Schemas/Geometries/TubeBufferGeometry
 * @desc Export the ThreeJs TubeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Nc}=Ve;let Bc=void 0,Cc=void 0;function Oc(e){return Bc||function(e){const t=e.Schema;Bc=new t({})}(e),Bc}function Dc(e){const t=Nc.getModelFrom(e);Cc=t.discriminator("TubeBufferGeometry",Oc(e))}var xc={name:"TubeBufferGeometry",getSchemaFrom:Oc,getModelFrom:function(e){return Cc||Dc(e),Cc},registerModelTo:function(e){return Cc||Dc(e),e}};
/**
 * @module Schemas/Geometries/TubeGeometry
 * @desc Export the ThreeJs TubeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ic}=it;let Ac=void 0,Ec=void 0;function Gc(e){return Ac||function(e){const t=e.Schema;Ac=new t({})}(e),Ac}function Lc(e){const t=Ic.getModelFrom(e);Ec=t.discriminator("TubeGeometry",Gc(e))}var Pc={name:"TubeGeometry",getSchemaFrom:Gc,getModelFrom:function(e){return Ec||Lc(e),Ec},registerModelTo:function(e){return Ec||Lc(e),e}};
/**
 * @module Schemas/Geometries/WireframeGeometry
 * @desc Export the ThreeJs WireframeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:jc}=it;let Vc=void 0,$c=void 0;function Uc(e){return Vc||function(e){const t=e.Schema;Vc=new t({})}(e),Vc}function Rc(e){const t=jc.getModelFrom(e);$c=t.discriminator("WireframeGeometry",Uc(e))}var kc={name:"WireframeGeometry",getSchemaFrom:Uc,getModelFrom:function(e){return $c||Rc(e),$c},registerModelTo:function(e){return $c||Rc(e),e}};
/**
 * @module Schemas/Helpers/ArrowHelper
 * @desc Export the ThreeJs ArrowHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Hc}=N;let zc=void 0,Yc=void 0;function Qc(e){return zc||function(e){const t=e.Schema;zc=new t({})}(e),zc}function Wc(e){const t=Hc.getModelFrom(e);Yc=t.discriminator("ArrowHelper",Qc(e))}var Xc={name:"ArrowHelper",getSchemaFrom:Qc,getModelFrom:function(e){return Yc||Wc(e),Yc},registerModelTo:function(e){return Yc||Wc(e),e}};
/**
 * @module Schemas/Helpers/AxesHelper
 * @desc Export the ThreeJs AxesHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Zc}=N;let Jc=void 0,qc=void 0;function Kc(e){return Jc||function(e){const t=e.Schema;Jc=new t({})}(e),Jc}function es(e){const t=Zc.getModelFrom(e);qc=t.discriminator("AxesHelper",Kc(e))}var ts={name:"AxesHelper",getSchemaFrom:Kc,getModelFrom:function(e){return qc||es(e),qc},registerModelTo:function(e){return qc||es(e),e}};
/**
 * @module Schemas/Helpers/Box3Helper
 * @desc Export the ThreeJs Box3Helper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:rs}=N;let ns=void 0,os=void 0;function is(e){return ns||function(e){const t=e.Schema;ns=new t({})}(e),ns}function as(e){const t=rs.getModelFrom(e);os=t.discriminator("Box3Helper",is(e))}var cs={name:"Box3Helper",getSchemaFrom:is,getModelFrom:function(e){return os||as(e),os},registerModelTo:function(e){return os||as(e),e}};
/**
 * @module Schemas/Helpers/BoxHelper
 * @desc Export the ThreeJs BoxHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ss}=N;let ds=void 0,us=void 0;function ms(e){return ds||function(e){const t=e.Schema;ds=new t({})}(e),ds}function ls(e){const t=ss.getModelFrom(e);us=t.discriminator("BoxHelper",ms(e))}var fs={name:"BoxHelper",getSchemaFrom:ms,getModelFrom:function(e){return us||ls(e),us},registerModelTo:function(e){return us||ls(e),e}};
/**
 * @module Schemas/Helpers/CameraHelper
 * @desc Export the ThreeJs CameraHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:hs}=N;let gs=void 0,ps=void 0;function Ss(e){return gs||function(e){const t=e.Schema;gs=new t({})}(e),gs}function ys(e){const t=hs.getModelFrom(e);ps=t.discriminator("CameraHelper",Ss(e))}var vs={name:"CameraHelper",getSchemaFrom:Ss,getModelFrom:function(e){return ps||ys(e),ps},registerModelTo:function(e){return ps||ys(e),e}};
/**
 * @module Schemas/Helpers/DirectionalLightHelper
 * @desc Export the ThreeJs DirectionalLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ms}=N;let bs=void 0,Ts=void 0;function Fs(e){return bs||function(e){const t=e.Schema;bs=new t({})}(e),bs}function ws(e){const t=Ms.getModelFrom(e);Ts=t.discriminator("DirectionalLightHelper",Fs(e))}var _s={name:"DirectionalLightHelper",getSchemaFrom:Fs,getModelFrom:function(e){return Ts||ws(e),Ts},registerModelTo:function(e){return Ts||ws(e),e}};
/**
 * @module Schemas/Helpers/FaceNormalsHelper
 * @desc Export the ThreeJs FaceNormalsHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ns}=N;let Bs=void 0,Cs=void 0;function Os(e){return Bs||function(e){const t=e.Schema;Bs=new t({})}(e),Bs}function Ds(e){const t=Ns.getModelFrom(e);Cs=t.discriminator("FaceNormalsHelper",Os(e))}var xs={name:"FaceNormalsHelper",getSchemaFrom:Os,getModelFrom:function(e){return Cs||Ds(e),Cs},registerModelTo:function(e){return Cs||Ds(e),e}};
/**
 * @module Schemas/Helpers/GridHelper
 * @desc Export the ThreeJs GridHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Is}=N;let As=void 0,Es=void 0;function Gs(e){return As||function(e){const t=e.Schema;As=new t({})}(e),As}function Ls(e){const t=Is.getModelFrom(e);Es=t.discriminator("GridHelper",Gs(e))}var Ps={name:"GridHelper",getSchemaFrom:Gs,getModelFrom:function(e){return Es||Ls(e),Es},registerModelTo:function(e){return Es||Ls(e),e}};
/**
 * @module Schemas/Helpers/HemisphereLightHelper
 * @desc Export the ThreeJs HemisphereLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:js}=N;let Vs=void 0,$s=void 0;function Us(e){return Vs||function(e){const t=e.Schema;Vs=new t({})}(e),Vs}function Rs(e){const t=js.getModelFrom(e);$s=t.discriminator("HemisphereLightHelper",Us(e))}var ks={name:"HemisphereLightHelper",getSchemaFrom:Us,getModelFrom:function(e){return $s||Rs(e),$s},registerModelTo:function(e){return $s||Rs(e),e}};
/**
 * @module Schemas/Helpers/PlaneHelper
 * @desc Export the ThreeJs PlaneHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Hs}=N;let zs=void 0,Ys=void 0;function Qs(e){return zs||function(e){const t=e.Schema;zs=new t({})}(e),zs}function Ws(e){const t=Hs.getModelFrom(e);Ys=t.discriminator("PlaneHelper",Qs(e))}var Xs={name:"PlaneHelper",getSchemaFrom:Qs,getModelFrom:function(e){return Ys||Ws(e),Ys},registerModelTo:function(e){return Ys||Ws(e),e}};
/**
 * @module Schemas/Helpers/PointLightHelper
 * @desc Export the ThreeJs PointLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Zs}=N;let Js=void 0,qs=void 0;function Ks(e){return Js||function(e){const t=e.Schema;Js=new t({})}(e),Js}function ed(e){const t=Zs.getModelFrom(e);qs=t.discriminator("PointLightHelper",Ks(e))}var td={name:"PointLightHelper",getSchemaFrom:Ks,getModelFrom:function(e){return qs||ed(e),qs},registerModelTo:function(e){return qs||ed(e),e}};
/**
 * @module Schemas/Helpers/PolarGridHelper
 * @desc Export the ThreeJs PolarGridHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:rd}=N;let nd=void 0,od=void 0;function id(e){return nd||function(e){const t=e.Schema;nd=new t({})}(e),nd}function ad(e){const t=rd.getModelFrom(e);od=t.discriminator("PolarGridHelper",id(e))}var cd={name:"PolarGridHelper",getSchemaFrom:id,getModelFrom:function(e){return od||ad(e),od},registerModelTo:function(e){return od||ad(e),e}};
/**
 * @module Schemas/Helpers/RectAreaLightHelper
 * @desc Export the ThreeJs RectAreaLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:sd}=N;let dd=void 0,ud=void 0;function md(e){return dd||function(e){const t=e.Schema;dd=new t({})}(e),dd}function ld(e){const t=sd.getModelFrom(e);ud=t.discriminator("RectAreaLightHelper",md(e))}var fd={name:"RectAreaLightHelper",getSchemaFrom:md,getModelFrom:function(e){return ud||ld(e),ud},registerModelTo:function(e){return ud||ld(e),e}};
/**
 * @module Schemas/Helpers/SkeletonHelper
 * @desc Export the ThreeJs SkeletonHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:hd}=N;let gd=void 0,pd=void 0;function Sd(e){return gd||function(e){const t=e.Schema;gd=new t({})}(e),gd}function yd(e){const t=hd.getModelFrom(e);pd=t.discriminator("SkeletonHelper",Sd(e))}var vd={name:"SkeletonHelper",getSchemaFrom:Sd,getModelFrom:function(e){return pd||yd(e),pd},registerModelTo:function(e){return pd||yd(e),e}};
/**
 * @module Schemas/Helpers/SpotLightHelper
 * @desc Export the ThreeJs SpotLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Md}=N;let bd=void 0,Td=void 0;function Fd(e){return bd||function(e){const t=e.Schema;bd=new t({})}(e),bd}function wd(e){const t=Md.getModelFrom(e);Td=t.discriminator("SpotLightHelper",Fd(e))}var _d={name:"SpotLightHelper",getSchemaFrom:Fd,getModelFrom:function(e){return Td||wd(e),Td},registerModelTo:function(e){return Td||wd(e),e}};
/**
 * @module Schemas/Helpers/VertexNormalsHelper
 * @desc Export the ThreeJs VertexNormalsHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Nd}=N;let Bd=void 0,Cd=void 0;function Od(e){return Bd||function(e){const t=e.Schema;Bd=new t({})}(e),Bd}function Dd(e){const t=Nd.getModelFrom(e);Cd=t.discriminator("VertexNormalsHelper",Od(e))}var xd={name:"VertexNormalsHelper",getSchemaFrom:Od,getModelFrom:function(e){return Cd||Dd(e),Cd},registerModelTo:function(e){return Cd||Dd(e),e}};
/**
 * @module Schemas/Lights/AmbientLight
 * @desc Export the ThreeJs AmbientLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Id}=N;let Ad=void 0,Ed=void 0;function Gd(e){return Ad||function(e){const t=e.Schema;Ad=new t({})}(e),Ad}function Ld(e){const t=Id.getModelFrom(e);Ed=t.discriminator("AmbientLight",Gd(e))}var Pd={name:"AmbientLight",getSchemaFrom:Gd,getModelFrom:function(e){return Ed||Ld(e),Ed},registerModelTo:function(e){return Ed||Ld(e),e}};
/**
 * @module Schemas/Lights/DirectionalLight
 * @desc Export the ThreeJs DirectionalLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:jd}=N;let Vd=void 0,$d=void 0;function Ud(e){return Vd||function(e){const t=e.Schema;Vd=new t({})}(e),Vd}function Rd(e){const t=jd.getModelFrom(e);$d=t.discriminator("DirectionalLight",Ud(e))}var kd={name:"DirectionalLight",getSchemaFrom:Ud,getModelFrom:function(e){return $d||Rd(e),$d},registerModelTo:function(e){return $d||Rd(e),e}};
/**
 * @module Schemas/Lights/HemisphereLight
 * @desc Export the ThreeJs HemisphereLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Hd}=N;let zd=void 0,Yd=void 0;function Qd(e){return zd||function(e){const t=e.Schema;zd=new t({})}(e),zd}function Wd(e){const t=Hd.getModelFrom(e);Yd=t.discriminator("HemisphereLight",Qd(e))}var Xd={name:"HemisphereLight",getSchemaFrom:Qd,getModelFrom:function(e){return Yd||Wd(e),Yd},registerModelTo:function(e){return Yd||Wd(e),e}};
/**
 * @module Schemas/Lights/Light
 * @desc Export the ThreeJs Light Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Zd}=N;let Jd=void 0,qd=void 0;function Kd(e){return Jd||function(e){const t=e.Schema;Jd=new t({})}(e),Jd}function eu(e){const t=Zd.getModelFrom(e);qd=t.discriminator("Light",Kd(e))}var tu={name:"Light",getSchemaFrom:Kd,getModelFrom:function(e){return qd||eu(e),qd},registerModelTo:function(e){return qd||eu(e),e}};
/**
 * @module Schemas/Lights/PointLight
 * @desc Export the ThreeJs PointLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ru}=N;let nu=void 0,ou=void 0;function iu(e){return nu||function(e){const t=e.Schema;nu=new t({})}(e),nu}function au(e){const t=ru.getModelFrom(e);ou=t.discriminator("PointLight",iu(e))}var cu={name:"PointLight",getSchemaFrom:iu,getModelFrom:function(e){return ou||au(e),ou},registerModelTo:function(e){return ou||au(e),e}};
/**
 * @module Schemas/Lights/RectAreaLight
 * @desc Export the ThreeJs RectAreaLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:su}=N;let du=void 0,uu=void 0;function mu(e){return du||function(e){const t=e.Schema;du=new t({})}(e),du}function lu(e){const t=su.getModelFrom(e);uu=t.discriminator("RectAreaLight",mu(e))}var fu={name:"RectAreaLight",getSchemaFrom:mu,getModelFrom:function(e){return uu||lu(e),uu},registerModelTo:function(e){return uu||lu(e),e}};
/**
 * @module Schemas/Lights/SpotLight
 * @desc Export the ThreeJs SpotLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:hu}=N;let gu=void 0,pu=void 0;function Su(e){return gu||function(e){const t=e.Schema;gu=new t({})}(e),gu}function yu(e){const t=hu.getModelFrom(e);pu=t.discriminator("SpotLight",Su(e))}var vu={name:"SpotLight",getSchemaFrom:Su,getModelFrom:function(e){return pu||yu(e),pu},registerModelTo:function(e){return pu||yu(e),e}};
/**
 * @module Schemas/Materials/Material
 * @desc Export the ThreeJs Material Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Mu=void 0,bu=void 0;function Tu(e){return Mu||function(e){const t=e.Schema,r=t.Types.Mixed;Mu=new t({uuid:String,name:String,type:String,fog:Boolean,lights:Boolean,blending:Number,side:Number,flatShading:Boolean,vertexColors:Number,opacity:Number,transparent:Boolean,blendSrc:Number,blendDst:Number,blendEquation:Number,blendSrcAlpha:String,blendDstAlpha:String,blendEquationAlpha:String,depthFunc:Number,depthTest:Boolean,depthWrite:Boolean,clippingPlanes:r,clipIntersection:Boolean,clipShadows:Boolean,colorWrite:Boolean,precision:Number,polygonOffset:Boolean,polygonOffsetFactor:Number,polygonOffsetUnits:Number,dithering:Boolean,alphaTest:Number,premultipliedAlpha:Boolean,overdraw:Number,visible:Boolean,userData:r,needsUpdate:Boolean},{collection:"materials",discriminatorKey:"type"})}(e),Mu}function Fu(e){bu=e.model("Materials",Tu(e)),bu.discriminator("Material",new e.Schema({}))}var wu={name:"Material",getSchemaFrom:Tu,getModelFrom:function(e){return bu||Fu(e),bu},registerModelTo:function(e){return bu||Fu(e),e}},_u={Material:wu};
/**
 * @module Schemas/Materials/LineBasicMaterial
 * @desc Export the ThreeJs LineBasicMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Material:Nu}=_u;let Bu=void 0,Cu=void 0;function Ou(e){return Bu||function(e){const t=e.Schema,r=t.Types.Color;Bu=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String})}(e),Bu}function Du(e){const t=Nu.getModelFrom(e);Cu=t.discriminator("LineBasicMaterial",Ou(e))}var xu={name:"LineBasicMaterial",getSchemaFrom:Ou,getModelFrom:function(e){return Cu||Du(e),Cu},registerModelTo:function(e){return Cu||Du(e),e}};
/**
 * @module Schemas/Materials/LineDashedMaterial
 * @desc Export the ThreeJs LineDashedMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Iu}=_u;let Au=void 0,Eu=void 0;function Gu(e){return Au||function(e){const t=e.Schema,r=t.Types.Color;Au=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String,dashSize:Number,gapSize:Number,scale:Number})}(e),Au}function Lu(e){const t=Iu.getModelFrom(e);Eu=t.discriminator("LineDashedMaterial",Gu(e))}var Pu={name:"LineDashedMaterial",getSchemaFrom:Gu,getModelFrom:function(e){return Eu||Lu(e),Eu},registerModelTo:function(e){return Eu||Lu(e),e}};
/**
 * @module Schemas/Materials/MeshBasicMaterial
 * @desc Export the ThreeJs MeshBasicMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:ju}=_u;let Vu=void 0,$u=void 0;function Uu(e){return Vu||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color;Vu=new t({color:o,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,light:Boolean})}(e),Vu}function Ru(e){const t=ju.getModelFrom(e);$u=t.discriminator("MeshBasicMaterial",Uu(e))}var ku={name:"MeshBasicMaterial",getSchemaFrom:Uu,getModelFrom:function(e){return $u||Ru(e),$u},registerModelTo:function(e){return $u||Ru(e),e}};
/**
 * @module Schemas/Materials/MeshDepthMaterial
 * @desc Export the ThreeJs MeshDepthMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Hu}=_u;let zu=void 0,Yu=void 0;function Qu(e){return zu||function(e){const t=e.Schema,r=t.Types.Mixed;zu=new t({depthPacking:Number,skinning:Boolean,morphTargets:Boolean,map:r,alphaMap:r,displacementMap:r,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean})}(e),zu}function Wu(e){const t=Hu.getModelFrom(e);Yu=t.discriminator("MeshDepthMaterial",Qu(e))}var Xu={name:"MeshDepthMaterial",getSchemaFrom:Qu,getModelFrom:function(e){return Yu||Wu(e),Yu},registerModelTo:function(e){return Yu||Wu(e),e}};
/**
 * @module Schemas/Materials/MeshLambertMaterial
 * @desc Export the ThreeJs MeshLambertMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Zu}=_u;let Ju=void 0,qu=void 0;function Ku(e){return Ju||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;Ju=new t({color:n,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,emissive:n,emissiveIntensity:Number,emissiveMap:o,specularMap:o,alphaMap:o,envMap:o,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),Ju}function em(e){const t=Zu.getModelFrom(e);qu=t.discriminator("MeshLambertMaterial",Ku(e))}var tm={name:"MeshLambertMaterial",getSchemaFrom:Ku,getModelFrom:function(e){return qu||em(e),qu},registerModelTo:function(e){return qu||em(e),e}};
/**
 * @module Schemas/Materials/MeshNormalMaterial
 * @desc Export the ThreeJs MeshNormalMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:rm}=_u;let nm=void 0,om=void 0;function im(e){return nm||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Vector2;nm=new t({bumpMap:n,bumpScale:Number,normalMap:n,normalScale:o,displacementMap:n,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),nm}function am(e){const t=rm.getModelFrom(e);om=t.discriminator("MeshNormalMaterial",im(e))}var cm={name:"MeshNormalMaterial",getSchemaFrom:im,getModelFrom:function(e){return om||am(e),om},registerModelTo:function(e){return om||am(e),e}};
/**
 * @module Schemas/Materials/MeshPhongMaterial
 * @desc Export the ThreeJs MeshPhongMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:sm}=_u;let dm=void 0,um=void 0;function mm(e){return dm||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,i=r.Vector2;dm=new t({color:o,specular:o,shininess:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:i,displacementMap:n,displacementScale:Number,displacementBias:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),dm}function lm(e){const t=sm.getModelFrom(e);um=t.discriminator("MeshPhongMaterial",mm(e))}var fm={name:"MeshPhongMaterial",getSchemaFrom:mm,getModelFrom:function(e){return um||lm(e),um},registerModelTo:function(e){return um||lm(e),e}};
/**
 * @module Schemas/Materials/MeshPhysicalMaterial
 * @desc Export the ThreeJs MeshPhysicalMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:hm}=_u;let gm=void 0,pm=void 0;function Sm(e){return gm||function(e){const t=e.Schema;gm=new t({reflectivity:Number,clearCoat:Number,clearCoatRoughness:Number})}(e),gm}function ym(e){const t=hm.getModelFrom(e);pm=t.discriminator("MeshPhysicalMaterial",Sm(e))}var vm={name:"MeshPhysicalMaterial",getSchemaFrom:Sm,getModelFrom:function(e){return pm||ym(e),pm},registerModelTo:function(e){return pm||ym(e),e}};
/**
 * @module Schemas/Materials/MeshStandardMaterial
 * @desc Export the ThreeJs MeshStandardMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Mm}=_u;let bm=void 0,Tm=void 0;function Fm(e){return bm||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,i=r.Vector2;bm=new t({color:o,roughness:Number,metalness:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:i,displacementMap:n,displacementScale:Number,displacementBias:Number,roughnessMap:n,metalnessMap:n,alphaMap:n,envMap:n,envMapIntensity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),bm}function wm(e){const t=Mm.getModelFrom(e);Tm=t.discriminator("MeshStandardMaterial",Fm(e))}var _m={name:"MeshStandardMaterial",getSchemaFrom:Fm,getModelFrom:function(e){return Tm||wm(e),Tm},registerModelTo:function(e){return Tm||wm(e),e}};
/**
 * @module Schemas/Materials/MeshToonMaterial
 * @desc Export the ThreeJs MeshToonMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Nm}=_u;let Bm=void 0,Cm=void 0;function Om(e){return Bm||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,i=r.Vector2;Bm=new t({color:o,specular:o,shininess:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:i,displacementMap:n,displacementScale:Number,displacementBias:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,gradientMap:n})}(e),Bm}function Dm(e){const t=Nm.getModelFrom(e);Cm=t.discriminator("MeshToonMaterial",Om(e))}var xm={name:"MeshToonMaterial",getSchemaFrom:Om,getModelFrom:function(e){return Cm||Dm(e),Cm},registerModelTo:function(e){return Cm||Dm(e),e}};
/**
 * @module Schemas/Materials/PointsMaterial
 * @desc Export the ThreeJs PointsMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Im}=_u;let Am=void 0,Em=void 0;function Gm(e){return Am||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;Am=new t({color:n,map:o,size:Number,sizeAttenuation:Boolean,lights:Boolean})}(e),Am}function Lm(e){const t=Im.getModelFrom(e);Em=t.discriminator("PointsMaterial",Gm(e))}var Pm={name:"PointsMaterial",getSchemaFrom:Gm,getModelFrom:function(e){return Em||Lm(e),Em},registerModelTo:function(e){return Em||Lm(e),e}};
/**
 * @module Schemas/Materials/RawShaderMaterial
 * @desc Export the ThreeJs RawShaderMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:jm}=_u;let Vm=void 0,$m=void 0;function Um(e){return Vm||function(e){const t=e.Schema,r=t.Types.Mixed;Vm=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),Vm}function Rm(e){const t=jm.getModelFrom(e);$m=t.discriminator("RawShaderMaterial",Um(e))}var km={name:"RawShaderMaterial",getSchemaFrom:Um,getModelFrom:function(e){return $m||Rm(e),$m},registerModelTo:function(e){return $m||Rm(e),e}};
/**
 * @module Schemas/Materials/ShaderMaterial
 * @desc Export the ThreeJs ShaderMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Hm}=_u;let zm=void 0,Ym=void 0;function Qm(e){return zm||function(e){const t=e.Schema,r=t.Types.Mixed;zm=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),zm}function Wm(e){const t=Hm.getModelFrom(e);Ym=t.discriminator("ShaderMaterial",Qm(e))}var Xm={name:"ShaderMaterial",getSchemaFrom:Qm,getModelFrom:function(e){return Ym||Wm(e),Ym},registerModelTo:function(e){return Ym||Wm(e),e}};
/**
 * @module Schemas/Materials/ShadowMaterial
 * @desc Export the ThreeJs ShadowMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Zm}=_u;let Jm=void 0,qm=void 0;function Km(e){return Jm||function(e){const t=e.Schema,r=t.Types.Color;Jm=new t({color:r,opacity:Number,lights:Boolean,transparent:Boolean})}(e),Jm}function el(e){const t=Zm.getModelFrom(e);qm=t.discriminator("ShadowMaterial",Km(e))}var tl={name:"ShadowMaterial",getSchemaFrom:Km,getModelFrom:function(e){return qm||el(e),qm},registerModelTo:function(e){return qm||el(e),e}};
/**
 * @module Schemas/Materials/SpriteMaterial
 * @desc Export the ThreeJs SpriteMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:rl}=_u;let nl=void 0,ol=void 0;function il(e){return nl||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;nl=new t({color:n,map:o,rotation:Number,fog:Boolean,lights:Boolean})}(e),nl}function al(e){const t=rl.getModelFrom(e);ol=t.discriminator("SpriteMaterial",il(e))}var cl={name:"SpriteMaterial",getSchemaFrom:il,getModelFrom:function(e){return ol||al(e),ol},registerModelTo:function(e){return ol||al(e),e}};
/**
 * @module Schemas/Math/Box2
 * @desc Export the ThreeJs Box2 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let sl=void 0;var dl={name:"Box2",getSchemaFrom:function(e){return sl||function(e){const t=e.Schema,r=t.Types.Vector2;sl=new t({min:r,max:r},{_id:!1,id:!1})}(e),sl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Box3
 * @desc Export the ThreeJs Box3 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let ul=void 0;var ml={name:"Box3",getSchemaFrom:function(e){return ul||function(e){const t=e.Schema,r=t.Types.Vector3;ul=new t({min:r,max:r},{_id:!1,id:!1})}(e),ul},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Line3
 * @desc Export the ThreeJs Line3 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let ll=void 0;var fl={name:"Line3",getSchemaFrom:function(e){return ll||function(e){const t=e.Schema,r=t.Types.Vector3;ll=new t({start:r,end:r},{_id:!1,id:!1})}(e),ll},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Plane
 * @desc Export the ThreeJs Plane Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let hl=void 0;var gl={name:"Plane",getSchemaFrom:function(e){return hl||function(e){const t=e.Schema,r=t.Types.Vector3;hl=new t({normal:r,constant:Number},{_id:!1,id:!1})}(e),hl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Ray
 * @desc Export the ThreeJs Ray Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let pl=void 0;var Sl={name:"Ray",getSchemaFrom:function(e){return pl||function(e){const t=e.Schema,r=t.Types.Vector3;pl=new t({origin:r,direction:r},{_id:!1,id:!1})}(e),pl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Sphere
 * @desc Export the ThreeJs Sphere Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let yl=void 0;var vl={name:"Sphere",getSchemaFrom:function(e){return yl||function(e){const t=e.Schema,r=t.Types.Vector3;yl=new t({center:r,radius:Number},{_id:!1,id:!1})}(e),yl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Spherical
 * @desc Export the ThreeJs Spherical Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Ml=void 0;var bl={name:"Spherical",getSchemaFrom:function(e){return Ml||function(e){const t=e.Schema;Ml=new t({radius:Number,phi:Number,theta:Number},{_id:!1,id:!1})}(e),Ml},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Triangle
 * @desc Export the ThreeJs Triangle Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Tl=void 0;var Fl={name:"Triangle",getSchemaFrom:function(e){return Tl||function(e){const t=e.Schema,r=t.Types.Vector3;Tl=new t({a:r,b:r,c:r},{_id:!1,id:!1})}(e),Tl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Objects/Bone
 * @desc Export the ThreeJs Bone Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:wl}=N;let _l=void 0,Nl=void 0;function Bl(e){return _l||function(e){const t=e.Schema;_l=new t({})}(e),_l}function Cl(e){const t=wl.getModelFrom(e);Nl=t.discriminator("Bone",Bl(e))}var Ol={name:"Bone",getSchemaFrom:Bl,getModelFrom:function(e){return Nl||Cl(e),Nl},registerModelTo:function(e){return Nl||Cl(e),e}};
/**
 * @module Schemas/Objects/Group
 * @desc Export the ThreeJs Group Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Dl=void 0,xl=void 0;function Il(e){return Dl||function(e){const t=e.Schema;Dl=new t({})}(e),Dl}function Al(e){const t=_.getModelFrom(e);xl=t.discriminator("Group",Il(e))}const El={name:"Group",getSchemaFrom:Il,getModelFrom:function(e){return xl||Al(e),xl},registerModelTo:function(e){return xl||Al(e),e}},{Object3D:Gl}=N;
/**
 * @module Schemas/Objects/ImmediateRenderObject
 * @desc Export the ThreeJs ImmediateRenderObject Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Ll=void 0,Pl=void 0;function jl(e){return Ll||function(e){const t=e.Schema;Ll=new t({})}(e),Ll}function Vl(e){const t=Gl.getModelFrom(e);Pl=t.discriminator("ImmediateRenderObject",jl(e))}var $l={name:"ImmediateRenderObject",getSchemaFrom:jl,getModelFrom:function(e){return Pl||Vl(e),Pl},registerModelTo:function(e){return Pl||Vl(e),e}};
/**
 * @module Schemas/Objects/LensFlare
 * @desc Export the ThreeJs LensFlare Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ul}=N;let Rl=void 0,kl=void 0;function Hl(e){return Rl||function(e){const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Color,i=r.Vector3;Rl=new t({lensFlares:[{texture:n,size:Number,distance:Number,x:Number,y:Number,z:Number,scale:Number,rotation:Number,opacity:Number,color:o,blending:Number}],positionScreen:i})}(e),Rl}function zl(e){const t=Ul.getModelFrom(e);kl=t.discriminator("LensFlare",Hl(e))}var Yl={name:"LensFlare",getSchemaFrom:Hl,getModelFrom:function(e){return kl||zl(e),kl},registerModelTo:function(e){return kl||zl(e),e}};
/**
 * @module Schemas/Objects/Line
 * @desc Export the ThreeJs Line Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ql}=N;let Wl=void 0,Xl=void 0;function Zl(e){return Wl||function(e){const t=e.Schema,r=t.Types.ObjectId;Wl=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),Wl}function Jl(e){const t=Ql.getModelFrom(e);Xl=t.discriminator("Line",Zl(e))}var ql={name:"Line",getSchemaFrom:Zl,getModelFrom:function(e){return Xl||Jl(e),Xl},registerModelTo:function(e){return Xl||Jl(e),e}};
/**
 * @module Schemas/Objects/LineLoop
 * @desc Export the ThreeJs LineLoop Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Kl}=N;let ef=void 0,tf=void 0;function rf(e){return ef||function(e){const t=e.Schema,r=t.Types.ObjectId;ef=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),ef}function nf(e){const t=Kl.getModelFrom(e);tf=t.discriminator("LineLoop",rf(e))}var of={name:"LineLoop",getSchemaFrom:rf,getModelFrom:function(e){return tf||nf(e),tf},registerModelTo:function(e){return tf||nf(e),e}};
/**
 * @module Schemas/Objects/LineSegments
 * @desc Export the ThreeJs LineSegments Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:af}=N;let cf=void 0,sf=void 0;function df(e){return cf||function(e){const t=e.Schema,r=t.Types.ObjectId;cf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),cf}function uf(e){const t=af.getModelFrom(e);sf=t.discriminator("LineSegments",df(e))}var mf={name:"LineSegments",getSchemaFrom:df,getModelFrom:function(e){return sf||uf(e),sf},registerModelTo:function(e){return sf||uf(e),e}};
/**
 * @module Schemas/Objects/LOD
 * @desc Export the ThreeJs LOD Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:lf}=N;let ff=void 0,hf=void 0;function gf(e){return ff||function(e){const t=e.Schema,r=t.Types.Mixed;ff=new t({levels:[r]})}(e),ff}function pf(e){const t=lf.getModelFrom(e);hf=t.discriminator("LOD",gf(e))}var Sf={name:"LOD",getSchemaFrom:gf,getModelFrom:function(e){return hf||pf(e),hf},registerModelTo:function(e){return hf||pf(e),e}};
/**
 * @module Schemas/Objects/Mesh
 * @desc Export the ThreeJs Mesh Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:yf}=N;let vf=void 0,Mf=void 0;function bf(e){return vf||function(e){const t=e.Schema,r=t.Types.ObjectId;vf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number})}(e),vf}function Tf(e){const t=yf.getModelFrom(e);Mf=t.discriminator("Mesh",bf(e))}var Ff={name:"Mesh",getSchemaFrom:bf,getModelFrom:function(e){return Mf||Tf(e),Mf},registerModelTo:function(e){return Mf||Tf(e),e}};
/**
 * @module Schemas/Objects/Points
 * @desc Export the ThreeJs Points Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:wf}=N;let _f=void 0,Nf=void 0;function Bf(e){return _f||function(e){const t=e.Schema,r=t.Types.ObjectId;_f=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"PointsMaterial"}],drawMode:Number})}(e),_f}function Cf(e){const t=wf.getModelFrom(e);Nf=t.discriminator("Points",Bf(e))}var Of={name:"Points",getSchemaFrom:Bf,getModelFrom:function(e){return Nf||Cf(e),Nf},registerModelTo:function(e){return Nf||Cf(e),e}};
/**
 * @module Schemas/Objects/Skeleton
 * @desc Export the ThreeJs Skeleton Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Df}=N;let xf=void 0,If=void 0;function Af(e){return xf||function(e){const t=e.Schema,r=t.Types.ObjectId;xf=new t({bones:[r],boneMatrices:[Number]})}(e),xf}function Ef(e){const t=Df.getModelFrom(e);If=t.discriminator("Skeleton",Af(e))}var Gf={name:"Skeleton",getSchemaFrom:Af,getModelFrom:function(e){return If||Ef(e),If},registerModelTo:function(e){return If||Ef(e),e}};
/**
 * @module Schemas/Objects/SkinnedMesh
 * @desc Export the ThreeJs SkinnedMesh Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Lf}=N;let Pf=void 0,jf=void 0;function Vf(e){return Pf||function(e){const t=e.Schema,r=t.Types.ObjectId;Pf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number,bindMode:String,bindMatrix:[Number],bindMatrixInverse:[Number]})}(e),Pf}function $f(e){const t=Lf.getModelFrom(e);jf=t.discriminator("SkinnedMesh",Vf(e))}var Uf={name:"SkinnedMesh",getSchemaFrom:Vf,getModelFrom:function(e){return jf||$f(e),jf},registerModelTo:function(e){return jf||$f(e),e}};
/**
 * @module Schemas/Objects/Sprite
 * @desc Export the ThreeJs Sprite Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Rf}=N;let kf=void 0,Hf=void 0;function zf(e){return kf||function(e){const t=e.Schema,r=t.Types.ObjectId;kf=new t({material:[{type:r,ref:"SpriteMaterial"}]})}(e),kf}function Yf(e){const t=Rf.getModelFrom(e);Hf=t.discriminator("Sprite",zf(e))}var Qf={name:"Sprite",getSchemaFrom:zf,getModelFrom:function(e){return Hf||Yf(e),Hf},registerModelTo:function(e){return Hf||Yf(e),e}};
/**
 * @module Schemas/Scenes/Fog
 * @desc Export the ThreeJs Fog Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Scenes/Scene Schemas/Scenes/Scene}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Wf=void 0;var Xf={name:"Fog",getSchemaFrom:function(e){return Wf||function(e){const t=e.Schema;Wf=new t({coordinates:{x:Number,y:Number,z:Number},orientation:{x:Number,y:Number,z:Number},thumbnail:Buffer,path:String},{_id:!1,id:!1})}(e),Wf},getModelFrom:()=>null,registerModelTo:e=>e},Zf={Fog:Xf};
/**
 * @module Schemas/Scenes/FogExp2
 * @desc Export the ThreeJs FogExp2 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 * @requires {@link module:Schemas/Scenes/Fog Schemas/Scenes/Fog}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Object3D:Jf}=N,{Fog:qf}=Zf;let Kf=void 0,eh=void 0;function th(e){return Kf||function(e){const t=qf.getSchemaFrom(e),r=e.Schema,n=r.Types.Color;Kf=new r({background:n,fog:t,overrideMaterial:String,autoUpdate:Boolean})}(e),Kf}function rh(e){const t=Jf.getModelFrom(e);eh=t.discriminator("Scene",th(e))}var nh={name:"Scene",getSchemaFrom:th,getModelFrom:function(e){return eh||rh(e),eh},registerModelTo:function(e){return eh||rh(e),e}};
/**
 * @module Schemas/Textures/Texture
 * @desc Export the ThreeJs Texture Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let oh=void 0,ih=void 0;function ah(e){return oh||function(e){const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Vector2,i=r.Matrix3;oh=new t({uuid:String,name:String,image:n,mipmaps:[],mapping:Number,wrapS:Number,wrapT:Number,magFilter:Number,minFilter:Number,anisotropy:Number,format:Number,type:Number,offset:o,repeat:o,center:o,rotation:Number,matrixAutoUpdate:Boolean,matrix:i,generateMipmaps:Boolean,premultiplyAlpha:Boolean,flipY:Boolean,unpackAlignment:Number,encoding:Number,version:Number},{collection:"textures",discriminatorKey:"type"})}(e),oh}function ch(e){ih=e.model("Textures",ah(e)),ih.discriminator("Texture",new e.Schema({}))}var sh={name:"Texture",getSchemaFrom:ah,getModelFrom:function(e){return ih||ch(e),ih},registerModelTo:function(e){return ih||ch(e),e}},dh={Texture:sh};
/**
 * @module Schemas/Textures/CanvasTexture
 * @desc Export the ThreeJs CanvasTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Texture:uh}=dh;let mh=void 0,lh=void 0;function fh(e){return mh||function(e){const t=e.Schema;mh=new t({needsUpdate:Boolean})}(e),mh}function hh(e){const t=uh.getModelFrom(e);lh=t.discriminator("CanvasTexture",fh(e))}var gh={name:"CanvasTexture",getSchemaFrom:fh,getModelFrom:function(e){return lh||hh(e),lh},registerModelTo:function(e){return lh||hh(e),e}};
/**
 * @module Schemas/Textures/CompressedTexture
 * @desc Export the ThreeJs CompressedTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:ph}=dh;let Sh=void 0,yh=void 0;function vh(e){return Sh||function(e){const t=e.Schema;Sh=new t({})}(e),Sh}function Mh(e){const t=ph.getModelFrom(e);yh=t.discriminator("CompressedTexture",vh(e))}var bh={name:"CompressedTexture",getSchemaFrom:vh,getModelFrom:function(e){return yh||Mh(e),yh},registerModelTo:function(e){return yh||Mh(e),e}};
/**
 * @module Schemas/Textures/CubeTexture
 * @desc Export the ThreeJs CubeTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Th}=dh;let Fh=void 0,wh=void 0;function _h(e){return Fh||function(e){const t=e.Schema;Fh=new t({})}(e),Fh}function Nh(e){const t=Th.getModelFrom(e);wh=t.discriminator("CubeTexture",_h(e))}var Bh={name:"CubeTexture",getSchemaFrom:_h,getModelFrom:function(e){return wh||Nh(e),wh},registerModelTo:function(e){return wh||Nh(e),e}};
/**
 * @module Schemas/Textures/DataTexture
 * @desc Export the ThreeJs DataTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Ch}=dh;let Oh=void 0,Dh=void 0;function xh(e){return Oh||function(e){const t=e.Schema;Oh=new t({})}(e),Oh}function Ih(e){const t=Ch.getModelFrom(e);Dh=t.discriminator("DataTexture",xh(e))}var Ah={name:"DataTexture",getSchemaFrom:xh,getModelFrom:function(e){return Dh||Ih(e),Dh},registerModelTo:function(e){return Dh||Ih(e),e}};
/**
 * @module Schemas/Textures/DepthTexture
 * @desc Export the ThreeJs DepthTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Eh}=dh;let Gh=void 0,Lh=void 0;function Ph(e){return Gh||function(e){const t=e.Schema;Gh=new t({})}(e),Gh}function jh(e){const t=Eh.getModelFrom(e);Lh=t.discriminator("DepthTexture",Ph(e))}var Vh={name:"DepthTexture",getSchemaFrom:Ph,getModelFrom:function(e){return Lh||jh(e),Lh},registerModelTo:function(e){return Lh||jh(e),e}};
/**
 * @module Schemas/Textures/VideoTexture
 * @desc Export the ThreeJs VideoTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:$h}=dh;let Uh=void 0,Rh=void 0;function kh(e){return Uh||function(e){const t=e.Schema;Uh=new t({})}(e),Uh}function Hh(e){const t=$h.getModelFrom(e);Rh=t.discriminator("VideoTexture",kh(e))}var zh={name:"VideoTexture",getSchemaFrom:kh,getModelFrom:function(e){return Rh||Hh(e),Rh},registerModelTo:function(e){return Rh||Hh(e),e}};
/**
 * @module Types/Color
 * @desc Export the three js Color type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
/**
 * @module MongoDBThreePlugin
 * @desc Three way to register Types and Schema
 * using cjs module under types and schemas folder.
 * using FunctionRegistrator for type and add to plugin using .addType( myFunctionRegistrator ), extending class AbstractMongooseRegistrator for Schema and add to plugin using .addSchema(
 * MySchemaRegistrator ) using direct registration importing mongoose in the file (care to the loading order ! An no output about what is registered.)
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [MIT]{@link https://opensource.org/licenses/MIT}
 */
var Yh=(new r.TMongoDBPlugin).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Color")}cast(t){if(n.isNotDefined(t))throw new e.SchemaType.CastError(`Color: ${t} is null or undefined`);if(n.isNotObject(t)&&!t.isColor)throw new e.SchemaType.CastError(`Color: ${t} is not a object or Three.Color instance`);if(!("r"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain r property`);if(n.isNotNumber(t.r))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("g"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain g property`);if(n.isNotNumber(t.g))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("b"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain b property`);if(n.isNotNumber(t.b))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);return{r:t.r,g:t.g,b:t.b}}}return t.COLOR_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Color=t,e}
/**
 * @module Types/Euler
 * @desc Export the three js Euler type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Euler")}cast(t){if(n.isNotDefined(t))throw new e.SchemaType.CastError(`Euler: ${t} is null or undefined`);if(n.isNotObject(t)&&!t.isEuler)throw new e.SchemaType.CastError(`Euler: ${t} is not a object or Euler instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain x property`);if(n.isNotNumber(t.x))throw new e.SchemaType.CastError(`Euler: ${t} expected x to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain y property`);if(n.isNotNumber(t.y))throw new e.SchemaType.CastError(`Euler: ${t} expected y to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain z property`);if(n.isNotNumber(t.z))throw new e.SchemaType.CastError(`Euler: ${t} expected z to be a number`);if(!("order"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain order property`);if(n.isNotString(t.order))throw new e.SchemaType.CastError(`Euler: ${t} expected order to be a string`);if(!["XYZ","YZX","ZXY","XZY","YXZ","ZYX"].includes(t.order.toUpperCase()))throw new e.SchemaType.CastError(`Euler: ${t} expected order to be a string in ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX']`);return{x:t.x,y:t.y,z:t.z,order:t.order.toUpperCase()}}}return t.EULER_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Euler=t,e}
/**
 * @module Types/Matrix3
 * @desc Export the three js Matrix3 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Matrix3")}cast(t){if(n.isNotDefined(t))throw new e.SchemaType.CastError(`Matrix3: ${t} is null or undefined`);if(n.isNotArray(t)&&!t.isMatrix3)throw new e.SchemaType.CastError(`Matrix3: ${t} is not an array or Matrix3 instance`);let r=void 0;r=t.isMatrix3?t.toArray():t;const o=r.length;if(9!==o)throw new e.SchemaType.CastError(`Matrix3: ${t} does not contain the right number of values. Expect 9 values and found ${o}`);for(let i=0,a=void 0;i<o;i++){if(a=r[i],n.isNotNumber(a))throw new e.SchemaType.CastError(`Matrix3: ${t} does not seem to contain right values. Expect values in range 0 and 1.`);if(n.isNaN(a))throw new e.SchemaType.CastError(`Matrix3: ${t} does not seem to contain right values. Expect values in range 0 and 1.`)}return r}}return t.MATRIX3_BSON_TYPE=s.BSON_DATA_ARRAY,e.Schema.Types.Matrix3=t,e}
/**
 * @module Types/Matrix4
 * @desc Export the three js Matrix4 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Matrix4")}cast(t){if(n.isNotDefined(t))throw new e.SchemaType.CastError(`Matrix4: ${t} is null or undefined`);if(n.isNotArray(t)&&!t.isMatrix4)throw new e.SchemaType.CastError(`Matrix4: ${t} is not an array or Matrix4 instance`);let r=void 0;r=t.isMatrix4?t.toArray():t;const o=r.length;if(16!==o)throw new e.SchemaType.CastError(`Matrix4: ${t} does not contain the right number of values. Expect 9 values and found ${o}`);for(let i=0,a=void 0;i<o;i++){if(a=r[i],n.isNotNumber(a))throw new e.SchemaType.CastError(`Matrix4: ${t} does not seem to contain right values. Expect values in range 0 and 1.`);if(n.isNaN(a))throw new e.SchemaType.CastError(`Matrix4: ${t} does not seem to contain right values. Expect values in range 0 and 1.`)}return r}}return t.MATRIX4_BSON_TYPE=s.BSON_DATA_ARRAY,e.Schema.Types.Matrix4=t,e}
/**
 * @module Types/Quaternion
 * @desc Export the three js Quaternion type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Quaternion")}cast(t){if(n.isNotDefined(t))throw new e.SchemaType.CastError(`Quaternion: ${t} is null or undefined`);if(n.isNotObject(t)&&!t.isQuaternion)throw new e.SchemaType.CastError(`Quaternion: ${t} is not a object or Quaternion instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain x property`);if(n.isNotNumber(t.x))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain y property`);if(n.isNotNumber(t.y))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain z property`);if(n.isNotNumber(t.z))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("w"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain w property`);if(n.isNotNumber(t.w))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z,w:t.w}}}return t.QUATERNION_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Quaternion=t,e}
/**
 * @module Types/Vector2
 * @desc Export the three js Vector2 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector2")}cast(t){if(n.isNotDefined(t))throw new e.SchemaType.CastError(`Vector2: ${t} is null or undefined`);if(n.isNotObject(t)&&!t.isVector2)throw new e.SchemaType.CastError(`Vector2: ${t} is not a object or Vector2 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector2: ${t} does not contain x property`);if(n.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector2: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector2: ${t} does not contain y property`);if(n.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector2: ${t} expected to be a number`);return{x:t.x,y:t.y}}}return t.VECTOR2_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Vector2=t,e}
/**
 * @module Types/Vector3
 * @desc Export the three js Vector3 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector3")}cast(t){if(n.isNotDefined(t))throw new e.SchemaType.CastError(`Vector3: ${t} is null or undefined`);if(n.isNotObject(t)&&!t.isVector3)throw new e.SchemaType.CastError(`Vector3: ${t} is not a object or Vector3 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain x property`);if(n.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain y property`);if(n.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain z property`);if(n.isNotNumber(t.z))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z}}}return t.VECTOR3_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Vector3=t,e}
/**
 * @module Types/Vector4
 * @desc Export the three js Vector4 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector4")}cast(t){if(n.isNotDefined(t))throw new e.SchemaType.CastError(`Vector4: ${t} is null or undefined`);if(n.isNotObject(t)&&!t.isVector4)throw new e.SchemaType.CastError(`Vector4: ${t} is not a object or Vector4 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain x property`);if(n.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain y property`);if(n.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain z property`);if(n.isNotNumber(t.z))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("w"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain w property`);if(n.isNotNumber(t.w))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z,w:t.w}}}return t.VECTOR4_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Vector4=t,e})).addSchema(I).addSchema(j).addSchema(H).addSchema(Z).addSchema(re).addSchema(se).addSchema(he).addSchema(Me).addSchema(Ae).addSchema(je).addSchema(Je).addSchema(Ke).addSchema(ot).addSchema(_).addSchema(mt).addSchema(St).addSchema(Ft).addSchema(Ot).addSchema(Gt).addSchema(Ut).addSchema(He).addSchema(Qt).addSchema(Kt).addSchema(ir).addSchema(mr).addSchema(Sr).addSchema(Fr).addSchema(Or).addSchema(Gr).addSchema(Ur).addSchema(Qr).addSchema(Kr).addSchema(an).addSchema(ln).addSchema(yn).addSchema(wn).addSchema(Dn).addSchema(Ln).addSchema(Rn).addSchema(Wn).addSchema(eo).addSchema(ao).addSchema(fo).addSchema(vo).addSchema(_o).addSchema(xo).addSchema(Po).addSchema(ko).addSchema(Xo).addSchema(ti).addSchema(ci).addSchema(fi).addSchema(vi).addSchema(_i).addSchema(xi).addSchema(Pi).addSchema(ki).addSchema(Xi).addSchema(ta).addSchema(ca).addSchema(fa).addSchema(va).addSchema(_a).addSchema(xa).addSchema(Pa).addSchema(ka).addSchema(Xa).addSchema(tc).addSchema(cc).addSchema(fc).addSchema(vc).addSchema(_c).addSchema(xc).addSchema(Pc).addSchema(kc).addSchema(Xc).addSchema(ts).addSchema(cs).addSchema(fs).addSchema(vs).addSchema(_s).addSchema(xs).addSchema(Ps).addSchema(ks).addSchema(Xs).addSchema(td).addSchema(cd).addSchema(fd).addSchema(vd).addSchema(_d).addSchema(xd).addSchema(Pd).addSchema(kd).addSchema(Xd).addSchema(tu).addSchema(cu).addSchema(fu).addSchema(vu).addSchema(fm).addSchema(xu).addSchema(Pu).addSchema(wu).addSchema(ku).addSchema(Xu).addSchema(tm).addSchema(cm).addSchema(vm).addSchema(_m).addSchema(xm).addSchema(Pm).addSchema(km).addSchema(Xm).addSchema(tl).addSchema(cl).addSchema(dl).addSchema(ml).addSchema(fl).addSchema(gl).addSchema(Sl).addSchema(vl).addSchema(bl).addSchema(Fl).addSchema(Ol).addSchema(El).addSchema($l).addSchema(Yl).addSchema(ql).addSchema(of).addSchema(mf).addSchema(Sf).addSchema(Ff).addSchema(Of).addSchema(Gf).addSchema(Uf).addSchema(Qf).addSchema(Xf).addSchema(nh).addSchema(gh).addSchema(bh).addSchema(Bh).addSchema(Ah).addSchema(Vh).addSchema(sh).addSchema(zh).addController(d).addDescriptor({route:"/objects",controller:{name:"TObjects3DController",options:{schemaName:"Objects3D"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addController(r.TMongooseController).addDescriptor({route:"/curves",controller:{name:"TMongooseController",options:{schemaName:"Curves"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/geometries",controller:{name:"TMongooseController",options:{schemaName:"Geometries"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/materials",controller:{name:"TMongooseController",options:{schemaName:"Materials"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/textures",controller:{name:"TMongooseController",options:{schemaName:"Textures"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addController(t.TAbstractConverterManager).addDescriptor({route:"/uploads",controller:{name:"TAbstractConverterManager",options:{useNext:!0,converters:{JsonToThree:new p,ShpToThree:new b,DbfToThree:new h,FbxToThree:new g,ColladaToThree:new u,StlToThree:new T,TdsToThree:new F,MtlToThree:new S,ObjToThree:new y},rules:[{on:".json",use:"JsonToThree"},{on:".dae",use:"ColladaToThree"},{on:".fbx",use:"FbxToThree"},{on:".stl",use:"StlToThree"},{on:".3ds",use:"TdsToThree"},{on:".shp",use:"ShpToThree"},{on:".dbf",use:"DbfToThree"},{on:[".shp",".dbf"],use:["ShpToThree","DbfToThree"]},{on:".mtl",use:"MtlToThree"},{on:".obj",use:"ObjToThree"},{on:[".mtl",".obj"],use:["MtlToThree","ObjToThree"]}],inserter:w},can:{processFiles:{on:"post",over:"/"}}}});module.exports=Yh;
