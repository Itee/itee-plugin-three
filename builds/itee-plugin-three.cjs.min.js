"use strict";var e,t=require("itee-database"),r=require("itee-mongodb"),o=require("three-full"),n=require("itee-client"),i=require("itee-utils"),a=require("itee-validators"),c=(e=a)&&"object"==typeof e&&"default"in e?e.default:e,s=require("bson");
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class d extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{const t=new o.ColladaLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * From:
 * https://www.clicketyclick.dk/databases/xbase/format/db2_dbf.html#DBII_DBF_STRUCT
 * http://web.archive.org/web/20150323061445/http://ulisse.elettra.trieste.it/services/doc/dbase/DBFstruct.htm
 * http://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm
 *
 * @class Todo...
 * @classdesc Todo...
 * @example Todo...
 *
 */const u=i.toEnum({FoxPro:48,FoxPro_Autoincrement:49,dBASE_II:2,FoxPro_Var:50,dBASE_III_plus:3,dBASE_III_plus_memo:131,dBASE_IV_SQL_table:67,dBASE_IV_SQL_system:99,dBASE_IV_memo:139,dBASE_IV_memo_SQL_table:203,FoxBase:251,dBase_v_7:4,FoxPro_2_x:245,HiPerSix_memo:229}),m=i.toEnum({Binary:"B",Character:"C",Date:"D",Numeric:"N",Logical:"L",Memo:"M",Timestamp:"@",Long:"I",Autoincrement:"+",Float:"F",Double:"O",OLE:"G"});class l{get manager(){return this._manager}set manager(e){this._manager=e}setManager(e){return this.manager=e,this}get logger(){return this._logger}set logger(e){this._logger=e}setLogger(e){return this.logger=e,this}get reader(){return this._reader}set reader(e){this._reader=e}setReader(e){return this.reader=e,this}constructor(e={}){const t={manager:o.DefaultLoadingManager,logger:n.DefaultLogger,reader:new n.TBinaryReader,...e};this.manager=t.manager,this.logger=t.logger,this.reader=t.reader}load(e,t,r,n){const i=this,a=new o.FileLoader(i.manager);a.setResponseType("arraybuffer"),a.load(e,e=>{t(i.parse(e))},r,n)}parse(e){this.reader.setEndianess(n.Endianness.Big).setBuffer(e);const t=this.reader.getInt8();if(!this._isValidVersion(t))return this.logger.error("DBFLoader: Invalid version number: "+t),null;const r=this._parseHeader(t);return{header:r,datas:this._parseDatas(t,r)}}_isValidVersion(e){return u.includes(e)}_parseHeader(e){let t={};switch(e){case u.FoxPro:case u.FoxPro_Autoincrement:case u.FoxPro_Var:case u.dBASE_II:t=this._parseHeaderV2();break;case u.dBASE_III_plus:case u.dBASE_III_plus_memo:t=this._parseHeaderV2_5();break;case u.dBASE_IV_memo:case u.dBASE_IV_memo_SQL_table:case u.dBASE_IV_SQL_system:case u.dBASE_IV_SQL_table:t=this._parseHeaderV3();break;case u.dBase_v_7:case u.FoxPro_2_x:case u.HiPerSix_memo:t=this._parseHeaderV4();break;default:throw new RangeError("Invalid version parameter: "+e)}return this.reader.getUint8()!==l.Terminator&&this.logger.error("DBFLoader: Invalid terminator after field descriptors !!!"),t}_parseHeaderV2(){const e=this.reader.getInt16(),t=this.reader.getInt8()+l.YearOffset,r=this.reader.getInt8(),o=this.reader.getInt8(),n=this.reader.getInt16();let i=[],a=void 0,c=void 0,s=void 0,d=void 0,u=void 0;for(let t=0;t<e;t++)a=this.reader.getString(11),c=this.reader.getChar(),s=this.reader.getUint8(),d=this.reader.getInt16(),u=this.reader.getInt8(),i.push({name:a,type:c,length:s,memoryAddress:d,decimalCount:u});return{numberOfRecords:e,year:t,month:r,day:o,lengthOfEachRecords:n,fields:i}}_parseHeaderV2_5(){const e=this.reader.getInt8()+l.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(n.Endianness.Little);const o=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(n.Endianness.Big),this.reader.skipOffsetOf(20);let c=[],s=void 0,d=void 0,u=void 0,m=void 0,f=void 0,h=void 0,g=void 0;for(let e=0;e<o;e++)s=this.reader.getString(11),d=this.reader.getChar(),m=this.reader.getInt32(),u=this.reader.getUint8(),f=this.reader.getUint8(),this.reader.skipOffsetOf(2),h=this.reader.getInt8(),this.reader.skipOffsetOf(2),g=this.reader.getInt8(),this.reader.skipOffsetOf(1),c.push({name:s,type:d,length:u,memoryAddress:m,decimalCount:f,workAreaId:h,MDXFlag:g});return{year:e,month:t,day:r,numberOfRecords:o,numberOfByteInHeader:i,numberOfByteInRecord:a,fields:c}}_parseHeaderV3(){const e=this.reader.getInt8()+l.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(n.Endianness.Little);const o=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(n.Endianness.Big),this.reader.skipOffsetOf(2);const c=this.reader.getInt8(),s=this.reader.getInt8();this.reader.skipOffsetOf(12);const d=this.reader.getInt8(),u=this.reader.getInt8();this.reader.skipOffsetOf(2);let m=[],f=void 0,h=void 0,g=void 0,p=void 0,v=void 0,S=void 0;for(;this.reader.getOffset()<i-1;)f=this.reader.getString(11),h=this.reader.getChar(),this.reader.skipOffsetOf(4),g=this.reader.getUint8(),p=this.reader.getUint8(),this.reader.skipOffsetOf(2),v=this.reader.getInt8(),this.reader.skipOffsetOf(10),S=this.reader.getInt8(),m.push({name:f,type:h,length:g,decimalCount:p,workAreaId:v,MDXFieldFlag:S});return{year:e,month:t,day:r,numberOfRecords:o,numberOfByteInHeader:i,numberOfByteInRecord:a,incompleteTransactionFlag:c,encryptionFlag:s,MDXFlag:d,languageDriverId:u,fields:m}}_parseHeaderV4(){const e=this.reader.getInt8()+l.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(n.Endianness.Little);const o=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(n.Endianness.Big),this.reader.skipOffsetOf(2);const c=this.reader.getInt8(),s=this.reader.getInt8();this.reader.skipOffsetOf(12);const d=this.reader.getInt8(),u=this.reader.getInt8();this.reader.skipOffsetOf(2);const m=this.reader.getString(32);this.reader.skipOffsetOf(4);let f=[],h=void 0,g=void 0,p=void 0,v=void 0,S=void 0,M=void 0;for(let e=0;e<o;e++)h=this.reader.getString(32),g=this.reader.getChar(),p=this.reader.getUint8(),v=this.reader.getUint8(),this.reader.skipOffsetOf(2),S=this.reader.getInt8(),this.reader.skipOffsetOf(2),M=this.reader.getInt32(),this.reader.skipOffsetOf(4),f.push({name:h,type:g,length:p,decimalCount:v,MDXFieldFlag:S,nextAutoincrementValue:M});return{year:e,month:t,day:r,numberOfRecords:o,numberOfByteInHeader:i,numberOfByteInRecord:a,incompleteTransactionFlag:c,encryptionFlag:s,MDXFlag:d,languageDriverId:u,languageDriverName:m,fields:f}}_parseDatas(e,t){const r=t.numberOfRecords,o=t.fields;let n=[],i=null,a=null;for(let e=0;e<r;e++){i={},i.deleted=this.reader.getUint8()===l.DeletedRecord;for(let e=0,t=o.length;e<t;e++)switch(a=o[e],a.type){case m.Binary:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case m.Numeric:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case m.Character:case m.Date:i[a.name]=this.reader.getString(a.length);break;case m.Logical:{const e=this.reader.getChar().toLowerCase();i[a.name]="t"===e||"y"===e||"f"!==e&&"n"!==e&&null}break;case m.Memo:i[a.name]=this.reader.getString(a.length);break;case m.Timestamp:break;case m.Long:case m.Autoincrement:i[a.name]=this.reader.getInt32();break;case m.Float:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case m.Double:i[a.name]=this.reader.getFloat64();break;case m.OLE:i[a.name]=this.reader.getString(a.length);break;default:throw new RangeError("Invalid data type parameter: "+a.type)}n.push(i)}return n}_parseFieldProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt16(),o=this.reader.getInt16(),n=this.reader.getInt16(),i=this.reader.getInt16(),a=this.reader.getInt16(),c=this.reader.getInt16();let s=[];for(let t=0;t<e;t++)s.push(this._getStandardProperties());let d=[];for(let e=0;e<r;e++)d.push(this._getCustomProperties());let u=[];for(let e=0;e<n;e++)u.push(this._getReferentialIntegrityProperties());return{numberOfStandardProperties:e,startOfStandardPropertiesDescriptor:t,numberOfCustomProperties:r,startOfCustomPropertiesDescriptor:o,numberOfReferentialIntegrityProperties:n,startOfReferentialIntegrityDescriptor:i,startOfData:a,sizeOfPropertiesStructure:c,standardProperties:s,customProperties:d,referentialIntegrityProperties:u}}_getStandardProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8(),o=this.reader.getInt8(),n=this.reader.getInt8();this.reader.skipOffsetOf(4);return{generationalNumber:e,tableFieldOffset:t,propertyDescribed:r,type:o,isConstraint:n,offsetFromStart:this.reader.getInt16(),widthOfDatabaseField:this.reader.getInt16()}}_getCustomProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8();this.reader.skipOffsetOf(1);return{generationalNumber:e,tableFieldOffset:t,type:r,offsetFromStartOfName:this.reader.getInt16(),lengthOfName:this.reader.getInt16(),offsetFromStartOfData:this.reader.getInt16(),lengthOfData:this.reader.getInt16()}}_getReferentialIntegrityProperties(){return{databaseState:this.reader.getInt8(),sequentialNumberRule:this.reader.getInt16(),offsetOfTheRIRuleName:this.reader.getInt16(),sizeOfTheRIRuleName:this.reader.getInt16(),offsetOfNameOfForeignTable:this.reader.getInt16(),sizeOfNameOfForeignTable:this.reader.getInt16(),stateBehaviour:this.reader.getInt8(),numberOfFieldsInLinkingKey:this.reader.getInt16(),offsetOfLocalTableTagName:this.reader.getInt16(),sizeOfTheLocalTableTagName:this.reader.getInt16(),offsetOfForeignTableTagName:this.reader.getInt16(),sizeOfTheForeignTableTagName:this.reader.getInt16()}}}l.Terminator=13,l.DeletedRecord=26,l.YearOffset=1900;
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class f extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,n){super._convert(e,t,r,o,n);try{const t=new l;r(t.parse(e))}catch(e){n(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class h extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{const t=new o.FBXLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class g extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{const t=new o.ObjectLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class p extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.String})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{const t=new o.MTLLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class v extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{const t=new o.OBJLoader2;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * This class allow to split any geometries type during runtime.
 * Keeping normals and Uvs. It is really usefull to see inside mesh like building.
 *
 * Constructor parameter:
 *
 * size - the size of the square view
 *
 * @class Todo...
 * @classdesc Todo...
 * @example Todo...
 *
 */const S=i.toEnum({NullShape:0,Point:1,Polyline:3,Polygon:5,MultiPoint:8,PointZ:11,PolyLineZ:13,PolygonZ:15,MultiPointZ:18,PointM:21,PolylineM:23,PolygonM:25,MultiPointM:28,MultiPatch:31});class M{get globalOffset(){return this._globalOffset}set globalOffset(e){this._globalOffset=e}setGlobalOffset(e){return this.globalOffset=e,this}get worldAxis(){return this._worldAxis}set worldAxis(e){this._worldAxis=e}setWorldAxis(e){return this.worldAxis=e,this}get manager(){return this._manager}set manager(e){this._manager=e}setManager(e){return this.manager=e,this}get logger(){return this._logger}set logger(e){this._logger=e}setLogger(e){return this.logger=e,this}get reader(){return this._reader}set reader(e){this._reader=e}setReader(e){return this.reader=e,this}constructor(e={}){const t={manager:o.DefaultLoadingManager,logger:n.DefaultLogger,reader:new n.TBinaryReader,globalOffset:new o.Vector3(0,0,0),worldAxis:{from:"zUp",to:"zForward"},...e};this.manager=t.manager,this.logger=t.logger,this.reader=t.reader,this.globalOffset=t.globalOffset,this.worldAxis=t.worldAxis}load(e,t,r,n){const i=this,a=new o.FileLoader(i.manager);a.setResponseType("arraybuffer"),a.load(e,e=>{t(i.parse(e))},r,n)}parse(e){this._reader.setEndianess(n.Endianness.Big).setBuffer(e);const t=this._parseHeader();if(t.fileCode!==M.FileCode)return this.logger.error("SHPLoader: Invalide Shape file code !"),null;if(t.fileLength<M.MinFileLength)return this.logger.error("SHPLoader: Shape file have an incorrect length !"),null;if(!Object.values(S).includes(t.shapeType))return this.logger.error("SHPLoader: Shape file have an incorrect shape type !"),null;t.version<M.MinVersion&&this.logger.warn("SHPLoader: Version of shape file below than 1000 could be incorrectly parsed !");const r=this._parseDatas(t);return this._convertToObjects(r)}_parseHeader(){const e=this._reader.getInt32();this._reader.skipOffsetOf(20);const t=this._reader.getInt32();this._reader.setEndianess(n.Endianness.Little);const r=this._reader.getInt32(),o=this._reader.getInt32(),i=this._reader.getInt32(),a=this._reader.getInt32();return{fileCode:e,fileLength:t,version:r,shapeType:o,boundingBox:{xMin:i,xMax:this._reader.getInt32(),yMin:a,yMax:this._reader.getInt32(),zMin:this._reader.getInt32(),zMax:this._reader.getInt32(),mMin:this._reader.getInt32(),mMax:this._reader.getInt32()}}}_parseDatas(e){this._reader.skipOffsetTo(100);let t=[],r=void 0,o=void 0,i=void 0;for(;!this._reader.isEndOfFile();)switch(r=this._parseRecordHeader(),o=this._reader.getOffset()+2*r.contentLength,this._reader.setEndianess(n.Endianness.Little),e.shapeType){case S.NullShape:this._reader.skipOffsetTo(o);break;case S.Point:case S.PointZ:case S.PointM:for(;this._reader.getOffset()<o;)i=this._parsePoint(),i&&t.push(i);break;case S.Polyline:case S.PolyLineZ:case S.PolylineM:for(;this._reader.getOffset()<o;)i=this._parsePolyLine(),i&&t.push(i);break;case S.Polygon:case S.PolygonZ:case S.PolygonM:for(;this._reader.getOffset()<o;)i=this._parsePolyLine(),i&&t.push(i);break;case S.MultiPoint:case S.MultiPointZ:case S.MultiPointM:for(;this._reader.getOffset()<o;)i=this._parseMultiPoint(),i&&t.push(i);break;case S.MultiPatch:for(;this._reader.getOffset()<o;)i=this._parseMultiPatch(),i&&t.push(i);break;default:this.logger.error("SHPLoader: Invalid switch parameter: "+e.shapeType)}return t}_parseRecordHeader(){this._reader.setEndianess(n.Endianness.Big);return{recordNumber:this._reader.getInt32(),contentLength:this._reader.getInt32()}}_parseNull(){return this._reader.getInt32(),null}_parsePoint(){const e=this._reader.getInt32();if(e===S.NullShape)return null;return{shapeType:e,x:this._reader.getFloat64(),y:this._reader.getFloat64()}}_parsePolyLine(){const e=this._reader.getInt32();if(e===S.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),o=this._reader.getInt32(),n=new Array(r);for(let e=0;e<r;e++)n[e]=this._reader.getInt32();const i=new Array(o);for(let e=0;e<o;e++)i[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};return{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:o,parts:n,points:i}}_parsePolygon(){const e=this._reader.getInt32();if(e===S.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),o=this._reader.getInt32();let n=new Array(r);for(let e=0;e<r;e++)n[e]=this._reader.getInt32();let a=new Array(o);for(let e=0;e<o;e++)a[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};const c=[],s=[];return n.forEach((e,t)=>{const r=a.slice(e,n[t+1]);i.ringClockwise(r)?c.push(r):s.push(r)}),s.forEach(e=>{c.some(t=>{if(i.ringContainsSome(t[0],e))return t.push(e),!0})||c.push([e])}),{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:o,parts:n,polygons:c}}_parseMultiPoint(){const e=this._reader.getInt32();if(e===S.NullShape)return null;const t={xMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMin:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),o=new Array(r);for(let e=0;e<r;e++)o.push([this._reader.getFloat64(),this._reader.getFloat64()]);return{shapeType:e,boundingBox:t,numberOfPoints:r,points:o}}_parseMultiPatch(){const e=this._reader.getInt32();return e===S.NullShape?null:{shapeType:e}}_convertToObjects(e){let t=[];for(let t=0,o=e.length;t<o;t++){let o=e[t];o.shapeType!==S.Polygon&&o.shapeType!==S.PolygonZ&&o.shapeType!==S.PolygonM||(o.points&&Array.isArray(o.points[0])?r(o.points):n(o.points))}function r(e){for(let t=0,o=e.length;t<o;t++){let o=e[t];o?Array.isArray(o[0])?r(o):n(o):this.logger.log("no array, oups !")}}function n(e){t.push(new o.Shape(e))}return t}}M.FileCode=9994,M.MinFileLength=100,M.MinVersion=1e3;
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class y extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,n){super._convert(e,t,r,o,n);try{const t=new M;r(t.parse(e))}catch(e){n(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class b extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{const t=new o.STLLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class F extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{const t=new o.TDSLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class w extends t.TAbstractDataInserter{constructor(e={}){const t={logger:n.DefaultLogger,...e};super(t),this.logger=t.logger,this.mergeStrategy="add"}static _arrayify(e){let t=[];return a.isDefined(e)&&(t=a.isArray(e)?e:[e]),t}async _save(e,t,r,o,n){const i=w._arrayify(e);if(a.isEmptyArray(i))return void n("No data to save in database. Abort insert !");const c=i.map(e=>e.name);this.logger.log("ThreeToMongoDB: Saving "+c),t.mergeStrategy&&(this.mergeStrategy=t.mergeStrategy);try{const e=t.parentId;let o=null,c=null;if(a.isDefined(e)){const r=await this._readOneDocument("Objects3D",{_id:e});if(a.isNull(r))return void n(`Unable to retrieve parent with id (${t.parentId}). Abort insert !`);if("add"===this.mergeStrategy)o=await this._parseObjects(i,e),c=a.isDefined(o)?o.filter(e=>e).map(e=>e._id):[],await this._updateDocument(r,{$addToSet:{children:c}});else if("replace"===this.mergeStrategy){const t=await this._readManyDocument("Objects3D",{parent:e}),n=i.map(e=>e.uuid),s=t.filter(e=>!n.includes(e.uuid));await this._removeChildrenDocuments(s),o=await this._parseObjects(i,e),c=a.isDefined(o)?o.filter(e=>e).map(e=>e._id):[],await this._updateDocument(r,{$set:{children:c}})}}else o=await this._parseObjects(i,null),c=a.isDefined(o)?o.filter(e=>e).map(e=>e._id):[];this.logger.log("ThreeToMongoDB: Saved "+c),r()}catch(e){n(e)}}async _parseObjects(e=[],t=null){const r=w._arrayify(e);if(a.isEmptyArray(r))return null;const o=[];for(let e=0,n=r.length;e<n;e++)o.push(this._parseObject(r[e],t));return Promise.all(o)}async _parseObject(e,t=null){if(a.isNotDefined(e))return null;const r=e.type,o=e.name,n=e.geometry,i=w._arrayify(e.children),c=w._arrayify(e.material);if(a.isDefined(n)&&a.isEmptyArray(i))if(n.isGeometry){const e=n.vertices;if(a.isNotDefined(e)||a.isEmptyArray(e))return this.logger.error(`Leaf object ${o} have a geometry that doesn't contain vertices ! Skip it.`),null}else{if(!n.isBufferGeometry)return this.logger.error(`Object ${o} contain an unknown/unmanaged geometry of type ${n.type} ! Skip it.`),null;{const e=n.attributes;if(a.isNotDefined(e))return this.logger.error(`Buffer geometry of ${o} doesn't contain attributes ! Skip it.`),null;const t=e.position;if(a.isNotDefined(t)||0===t.count)return this.logger.error(`Leaf object ${o} have a buffer geometry that doesn't contain position attribute ! Skip it.`),null}}let s=null;if(w.AvailableLineTypes.includes(r)){if(a.isNotDefined(n))return this.logger.error(`Missing geometry for object ${e.name} of type ${r}. Only Sprite can contains material without geometry ! Skip it.`),null;s=w.AvailableLineMaterialTypes}else if(w.AvailablePointTypes.includes(r)){if(a.isNotDefined(n))return this.logger.error(`Missing geometry for object ${e.name} of type ${r}. Only Sprite can contains material without geometry ! Skip it.`),null;s=w.AvailablePointMaterialTypes}else w.AvailableSpriteTypes.includes(r)&&(s=w.AvailableSpriteMaterialTypes);if(s)for(let e=0,t=c.length;e<t;e++){const t=c[e].type;if(!s.includes(t))return this.logger.error(`Object ${o} of type ${r}, contain an invalid material of type ${t} ! Skip it.`),null}const d=await this._getOrCreateDocuments(n),u=a.isDefined(d)?d.filter(e=>e).map(e=>e._id).pop():null,m=await this._getOrCreateDocuments(c),l=a.isDefined(m)?m.filter(e=>e).map(e=>e._id):[];let f=await this._readOneDocument(r,{uuid:e.uuid,parent:t});if(a.isDefined(f))if("add"===this.mergeStrategy){const e=await this._parseObjects(i,f._id),t=a.isDefined(e)?e.filter(e=>e).map(e=>e._id):[];await this._updateDocument(f,{$addToSet:{children:t}})}else if("replace"===this.mergeStrategy){const e=await this._readManyDocument("Objects3D",{parent:f._id}),t=i.map(e=>e.uuid),r=e.filter(e=>!t.includes(e.uuid));await this._removeChildrenDocuments(r);const o=await this._parseObjects(i,f._id),n=a.isDefined(o)?o.filter(e=>e).map(e=>e._id):[];await this._updateDocument(f,{$set:{children:n,geometry:u,material:l}})}else this.logger.error("Unknown/Unmanaged merge srategy "+this.mergeStrategy);else{e.parent=t,e.children=[],e.geometry=u,e.material=l,f=await this._createDocument(e);const r=await this._parseObjects(i,f._id),o=a.isDefined(r)?r.filter(e=>e).map(e=>e._id):[];await this._updateDocument(f,{$set:{children:o,geometry:u,material:l}})}return f}async _getOrCreateDocuments(e=[]){const t=w._arrayify(e);if(a.isEmptyArray(t))return null;const r=[];for(let e=0,o=t.length;e<o;e++)r.push(this._getOrCreateDocument(t[e]));return Promise.all(r)}async _getOrCreateDocument(e){if(a.isNotDefined(e))return null;let t=await this._readOneDocument(e.type,{uuid:e.uuid});return t=a.isDefined(t)?await this._updateDocument(t,e):await this._createDocument(e),t}async _createDocuments(e=[]){const t=w._arrayify(e);if(a.isEmptyArray(t))return null;const r=[];for(let e=0,o=t.length;e<o;e++)r.push(this._createDocument(t[e]));return Promise.all(r)}async _createDocument(e){if(a.isNotDefined(e))return null;const t=this._driver.model(e.type);return(await t(e).save())._doc}async _readOneDocument(e,t){if(a.isNotDefined(e)||a.isNotDefined(t))return null;const r=await this._driver.model(e).findOne(t).exec();return a.isDefined(r)?r._doc:null}async _readManyDocument(e,t){if(a.isNotDefined(e)||a.isNotDefined(t))return null;return(await this._driver.model(e).find(t).exec()).map(e=>e._doc)}async _updateDocuments(e=[],t,r){const o=w._arrayify(e);if(a.isEmptyArray(o))return null;const n=[];for(let e=0,i=o.length;e<i;e++)n.push(this._updateDocument(o[e],t,r));return Promise.all(n)}async _updateDocument(e,t,r){return a.isNotDefined(e)?null:await this._driver.model(e.type).findByIdAndUpdate(e._id,t,r).exec()}async _deleteDocuments(e=[]){const t=w._arrayify(e);if(a.isEmptyArray(t))return null;const r=[];for(let e=0,o=t.length;e<o;e++)r.push(this._deleteDocument(t[e]));return Promise.all(r)}async _deleteDocument(e){return a.isNotDefined(e)?null:await this._driver.model(e.type).findByIdAndDelete(e._id).exec()}async _removeChildrenDocuments(e){let t=[];for(let r=e.length-1;r>=0;r--)t.push(this._removeChildDocument(e[r]));return Promise.all(t)}async _removeChildDocument(e){const t=await this._readManyDocument("Objects3D",{parent:e._id});await this._removeChildrenDocuments(t),await this._removeOrphanGeometryWithId(e.geometry),await this._removeOrphanMaterialsWithIds(e.material||[]),await this._deleteDocument(e)}async _removeOrphanGeometryWithId(e){if(a.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{geometry:e})).length>1)return;const t=await this._readOneDocument("Geometries",{_id:e});await this._deleteDocument(t)}async _removeOrphanMaterialsWithIds(e){const t=[];for(let r=0,o=e.length;r<o;r++)t.push(this._removeOrphanMaterialWithId(e[r]));return Promise.all(t)}async _removeOrphanMaterialWithId(e){if((await this._readManyDocument("Objects3D",{material:e})).length>1)return;const t=await this._readOneDocument("Materials",{_id:e});await this._deleteDocument(t)}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Object3D
 *
 * @description Todo...
 */
function T(){}w.AvailableCurveTypes=["Curve","ArcCurve","CatmullRomCurve3","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","CurvePath","Path","Shape"],w.AvailableLineTypes=["Line","LineLoop","LineSegments"],w.AvailableLineMaterialTypes=["LineBasicMaterial","LineDashedMaterial"],w.AvailablePointTypes=["Points"],w.AvailablePointMaterialTypes=["PointsMaterial"],w.AvailableSpriteTypes=["Sprite"],w.AvailableSpriteMaterialTypes=["SpriteMaterial"],T.getSchemaFrom=e=>(T._schema||T._createSchema(e),T._schema),T._createSchema=e=>{const t=e.Schema,r=t.Types,o=r.ObjectId,n=r.Mixed,i=r.Vector3,a=r.Quaternion,c=r.Matrix4,s=r.Euler;T._schema=new t({uuid:String,name:String,type:String,parent:o,children:[o],up:i,position:i,rotation:s,quaternion:a,scale:{type:i,default:{x:1,y:1,z:1}},modelViewMatrix:c,normalMatrix:c,matrix:c,matrixWorld:c,matrixAutoUpdate:Boolean,matrixWorldNeedsUpdate:Boolean,layers:{type:Number,set:e=>e.mask},visible:Boolean,castShadow:Boolean,receiveShadow:Boolean,frustumCulled:Boolean,renderOrder:Boolean,userData:{type:n,set:e=>function e(t){let r={};for(let o in t){if(!Object.prototype.hasOwnProperty.call(t,o))continue;let n=t[o];n.constructor===Object&&(n=e(n)),r[o.replace(/\./g,"")]=n}return r}(e)}},{collection:"objects",discriminatorKey:"type"})},T.getModelFrom=e=>(T._model||T._createModel(e),T._model),T._createModel=e=>{T._model=e.model("Objects3D",T.getSchemaFrom(e)),T._model.discriminator("Object3D",new e.Schema({}))},T.registerModelTo=e=>(T._model||T._createModel(e),e),T._schema=null,T._model=null;var _=Object.freeze({__proto__:null,Object3D:T});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:N}=_;let B=void 0,O=void 0;function I(e){return B||function(e){const t=e.Schema;B=new t({})}(e),B}function x(e){const t=N.getModelFrom(e);O=t.discriminator("Audio",I(e))}var D={getSchemaFrom:I,getModelFrom:function(e){return O||x(e),O},registerModelTo:function(e){return O||x(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:C}=_;let E=void 0,A=void 0;function j(e){return E||function(e){const t=e.Schema;E=new t({})}(e),E}function L(e){const t=C.getModelFrom(e);A=t.discriminator("AudioListener",j(e))}var P={getSchemaFrom:j,getModelFrom:function(e){return A||L(e),A},registerModelTo:function(e){return A||L(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:G}=_;let V=void 0,$=void 0;function U(e){return V||function(e){const t=e.Schema;V=new t({})}(e),V}function k(e){const t=G.getModelFrom(e);$=t.discriminator("PositionalAudio",U(e))}var R={getSchemaFrom:U,getModelFrom:function(e){return $||k(e),$},registerModelTo:function(e){return $||k(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:z}=_;let H=void 0,Q=void 0;function Y(e){return H||function(e){const t=e.Schema;H=new t({})}(e),H}function Z(e){const t=z.getModelFrom(e);Q=t.discriminator("ArrayCamera",Y(e))}var X={getSchemaFrom:Y,getModelFrom:function(e){return Q||Z(e),Q},registerModelTo:function(e){return Q||Z(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:W}=_;let q=void 0,K=void 0;function J(e){return q||function(e){const t=e.Schema;q=new t({})}(e),q}function ee(e){const t=W.getModelFrom(e);K=t.discriminator("Camera",J(e))}var te={getSchemaFrom:J,getModelFrom:function(e){return K||ee(e),K},registerModelTo:function(e){return K||ee(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:re}=_;let oe=void 0,ne=void 0;function ie(e){return oe||function(e){const t=e.Schema;oe=new t({})}(e),oe}function ae(e){const t=re.getModelFrom(e);ne=t.discriminator("CubeCamera",ie(e))}var ce={getSchemaFrom:ie,getModelFrom:function(e){return ne||ae(e),ne},registerModelTo:function(e){return ne||ae(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:se}=_;let de=void 0,ue=void 0;function me(e){return de||function(e){const t=e.Schema;de=new t({})}(e),de}function le(e){const t=se.getModelFrom(e);ue=t.discriminator("OrthographicCamera",me(e))}var fe={getSchemaFrom:me,getModelFrom:function(e){return ue||le(e),ue},registerModelTo:function(e){return ue||le(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:he}=_;let ge=void 0,pe=void 0;function ve(e){return ge||function(e){const t=e.Schema;ge=new t({})}(e),ge}function Se(e){const t=he.getModelFrom(e);pe=t.discriminator("PerspectiveCamera",ve(e))}var Me={getSchemaFrom:ve,getModelFrom:function(e){return pe||Se(e),pe},registerModelTo:function(e){return pe||Se(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Geometry
 *
 * @description Todo...
 */const{isInt8Array:ye,isInt16Array:be,isInt32Array:Fe,isFloat32Array:we,isFloat64Array:Te,isUint8Array:_e,isUint8ClampedArray:Ne,isUint16Array:Be,isUint32Array:Oe,isBigInt64Array:Ie,isBigUint64Array:xe}=c;let De=void 0;var Ce={getSchemaFrom:function(e){return De||function(e){const t=e.Schema,r=t.Types.Mixed,o={Int8Array:0,Uint8Array:1,Uint8ClampedArray:2,Int16Array:3,Uint16Array:4,Int32Array:5,Uint32Array:6,Float32Array:7,Float64Array:8,BigInt64Array:9,BigUint64Array:10};De=new t({array:{type:Buffer,set:e=>{const t=e.length;let r=null,n=0;if(ye(e)){r=Buffer.allocUnsafe(1+1*t),n=r.writeUInt8(o.Int8Array,n);for(let o=0;o<t;o++)n=r.writeInt8(e[o],n)}else if(_e(e)){r=Buffer.allocUnsafe(1+1*t),n=r.writeUInt8(o.Uint8Array,n);for(let o=0;o<t;o++)n=r.writeUInt8(e[o],n)}else if(Ne(e)){r=Buffer.allocUnsafe(1+1*t),n=r.writeUInt8(o.Uint8ClampedArray,n);for(let o=0;o<t;o++)n=r.writeUInt8(e[o],n)}else if(be(e)){r=Buffer.allocUnsafe(1+2*t),n=r.writeUInt8(o.Int16Array,n);for(let o=0;o<t;o++)n=r.writeInt16BE(e[o],n)}else if(Be(e)){r=Buffer.allocUnsafe(1+2*t),n=r.writeUInt8(o.Uint16Array,n);for(let o=0;o<t;o++)n=r.writeUInt16BE(e[o],n)}else if(Fe(e)){r=Buffer.allocUnsafe(1+4*t),n=r.writeUInt8(o.Int32Array,n);for(let o=0;o<t;o++)n=r.writeInt32BE(e[o],n)}else if(Oe(e)){r=Buffer.allocUnsafe(1+4*t),n=r.writeUInt8(o.Uint32Array,n);for(let o=0;o<t;o++)n=r.writeUInt32BE(e[o],n)}else if(we(e)){r=Buffer.allocUnsafe(1+4*t),n=r.writeUInt8(o.Float32Array,n);for(let o=0;o<t;o++)n=r.writeFloatBE(e[o],n)}else if(Te(e)){r=Buffer.allocUnsafe(1+8*t),n=r.writeUInt8(o.Float64Array,n);for(let o=0;o<t;o++)n=r.writeDoubleBE(e[o],n)}else if(Ie(e)){r=Buffer.allocUnsafe(1+8*t),n=r.writeUInt8(o.BigInt64Array,n);for(let o=0;o<t;o++)n=r.writeDoubleBE(e[o],n)}else{if(!xe(e))throw new Error("Unable to determine the array type to bufferize.");r=Buffer.allocUnsafe(1+8*t),n=r.writeUInt8(o.BigUint64Array,n);for(let o=0;o<t;o++)n=r.writeDoubleBE(e[o],n)}return r}},count:Number,dynamic:Boolean,itemSize:Number,name:String,needsUpdate:Boolean,normalized:Boolean,updateRange:r,uuid:String,version:Number},{_id:!1,id:!1})}(e),De},getModelFrom:()=>null,registerModelTo:e=>e},Ee={BufferAttribute:Ce};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/BufferGeometry
 *
 * @description Todo...
 */
const{BufferAttribute:Ae}=Ee;let je=void 0,Le=void 0;function Pe(e){return je||function(e){const t=e.Schema,r=t.Types,o=r.Mixed,n=r.Vector3,i=Ae.getSchemaFrom(e);je=new t({uuid:String,name:String,type:String,index:i,attributes:{position:i,normal:i,color:i,uv:i},groups:o,boundingBox:{min:n,max:n},boundingSphere:{center:n,radius:Number},drawRange:o},{collection:"geometries",discriminatorKey:"type"})}(e),je}function Ge(e){Le=e.model("BufferGeometries",Pe(e)),Le.discriminator("BufferGeometry",new e.Schema({}))}var Ve={getSchemaFrom:Pe,getModelFrom:function(e){return Le||Ge(e),Le},registerModelTo:function(e){return Le||Ge(e),e}},$e={BufferGeometry:Ve};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Geometry
 *
 * @description Todo...
 */
let Ue=void 0,ke=void 0;function Re(e){return Ue||function(e){const t=e.Schema;Ue=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{collection:"curves",discriminatorKey:"type"})}(e),Ue}function ze(e){ke=e.model("Curves",Re(e)),ke.discriminator("Curve",new e.Schema({}))}var He={getSchemaFrom:Re,getModelFrom:function(e){return ke||ze(e),ke},registerModelTo:function(e){return ke||ze(e),e}},Qe={Curve:He};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
const{Curve:Ye}=Qe;let Ze=void 0,Xe=void 0;function We(e){return Ze||function(e){const t=e.Schema,r=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});Ze=new t({curves:[r],autoClose:{type:Boolean,default:!1}})}(e),Ze}function qe(e){const t=Ye.getModelFrom(e);Xe=t.discriminator("CurvePath",We(e))}var Ke={getSchemaFrom:We,getModelFrom:function(e){return Xe||qe(e),Xe},registerModelTo:function(e){return Xe||qe(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Face3
 *
 * @description Todo...
 */let Je=void 0;var et={getSchemaFrom:function(e){return Je||function(e){const t=e.Schema,r=t.Types,o=r.Color,n=r.Vector3;Je=new t({a:Number,b:Number,c:Number,normal:n,vertexNormals:[Number],color:o,vertexColors:[Number],materialIndex:Number},{_id:!1,id:!1})}(e),Je},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Geometry
 *
 * @description Todo...
 */let tt=void 0,rt=void 0;function ot(e){return tt||function(e){const t=et.getSchemaFrom(e),r=e.Schema,o=r.Types.Vector3;tt=new r({uuid:String,name:String,type:String,vertices:[o],colors:[Number],faces:[t],faceVertexUvs:[[Number]],morphTargets:[Number],morphNormals:[Number],skinWeights:[Number],skinIndices:[Number],lineDistances:[Number],boundingBox:{min:o,max:o},boundingSphere:{center:o,radius:Number},elementsNeedUpdate:Boolean,verticesNeedUpdate:Boolean,uvsNeedUpdate:Boolean,normalsNeedUpdate:Boolean,colorsNeedUpdate:Boolean,lineDistancesNeedUpdate:Boolean,groupsNeedUpdate:Boolean},{collection:"geometries",discriminatorKey:"type"})}(e),tt}function nt(e){rt=e.model("Geometries",ot(e)),rt.discriminator("Geometry",new e.Schema({}))}const it={getSchemaFrom:ot,getModelFrom:function(e){return rt||nt(e),rt},registerModelTo:function(e){return rt||nt(e),e}};var at=Object.freeze({__proto__:null,Geometry:it});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:ct}=Qe;let st=void 0,dt=void 0;function ut(e){return st||function(e){const t=e.Schema,r=t.Types.Vector2,o=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});st=new t({curves:[o],autoClose:{type:Boolean,default:!1},currentPoint:r})}(e),st}function mt(e){const t=ct.getModelFrom(e);dt=t.discriminator("Path",ut(e))}var lt={getSchemaFrom:ut,getModelFrom:function(e){return dt||mt(e),dt},registerModelTo:function(e){return dt||mt(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:ft}=Qe;let ht=void 0,gt=void 0;function pt(e){return ht||function(e){const t=e.Schema,r=t.Types.Vector2,o=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),n=new t({curves:[o],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1});ht=new t({curves:[o],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[n]})}(e),ht}function vt(e){const t=ft.getModelFrom(e);gt=t.discriminator("Shape",pt(e))}var St={getSchemaFrom:pt,getModelFrom:function(e){return gt||vt(e),gt},registerModelTo:function(e){return gt||vt(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Mt}=Qe;let yt=void 0,bt=void 0;function Ft(e){return yt||function(e){const t=e.Schema;yt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),yt}function wt(e){const t=Mt.getModelFrom(e);bt=t.discriminator("ArcCurve",Ft(e))}var Tt={getSchemaFrom:Ft,getModelFrom:function(e){return bt||wt(e),bt},registerModelTo:function(e){return bt||wt(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:_t}=Qe;let Nt=void 0,Bt=void 0;function Ot(e){return Nt||function(e){const t=e.Schema,r=t.Types.Vector3;Nt=new t({points:[r],closed:Boolean,curveType:String,tension:Number})}(e),Nt}function It(e){const t=_t.getModelFrom(e);Bt=t.discriminator("CatmullRomCurve3",Ot(e))}var xt={getSchemaFrom:Ot,getModelFrom:function(e){return Bt||It(e),Bt},registerModelTo:function(e){return Bt||It(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Dt}=Qe;let Ct=void 0,Et=void 0;function At(e){return Ct||function(e){const t=e.Schema,r=t.Types.Vector2;Ct=new t({v0:r,v1:r,v2:r,v3:r})}(e),Ct}function jt(e){const t=Dt.getModelFrom(e);Et=t.discriminator("CubicBezierCurve",At(e))}var Lt={getSchemaFrom:At,getModelFrom:function(e){return Et||jt(e),Et},registerModelTo:function(e){return Et||jt(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Pt}=Qe;let Gt=void 0,Vt=void 0;function $t(e){return Gt||function(e){const t=e.Schema,r=t.Types.Vector3;Gt=new t({v0:r,v1:r,v2:r,v3:r})}(e),Gt}function Ut(e){const t=Pt.getModelFrom(e);Vt=t.discriminator("CubicBezierCurve3",$t(e))}var kt={getSchemaFrom:$t,getModelFrom:function(e){return Vt||Ut(e),Vt},registerModelTo:function(e){return Vt||Ut(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Rt}=Qe;let zt=void 0,Ht=void 0;function Qt(e){return zt||function(e){const t=e.Schema;zt=new t({})}(e),zt}function Yt(e){const t=Rt.getModelFrom(e);Ht=t.discriminator("CurveExtras",Qt(e))}var Zt={getSchemaFrom:Qt,getModelFrom:function(e){return Ht||Yt(e),Ht},registerModelTo:function(e){return Ht||Yt(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Xt}=Qe;let Wt=void 0,qt=void 0;function Kt(e){return Wt||function(e){const t=e.Schema;Wt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),Wt}function Jt(e){const t=Xt.getModelFrom(e);qt=t.discriminator("EllipseCurve",Kt(e))}var er={getSchemaFrom:Kt,getModelFrom:function(e){return qt||Jt(e),qt},registerModelTo:function(e){return qt||Jt(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:tr}=Qe;let rr=void 0,or=void 0;function nr(e){return rr||function(e){const t=e.Schema,r=t.Types.Vector2;rr=new t({v0:r,v1:r})}(e),rr}function ir(e){const t=tr.getModelFrom(e);or=t.discriminator("LineCurve",nr(e))}var ar={getSchemaFrom:nr,getModelFrom:function(e){return or||ir(e),or},registerModelTo:function(e){return or||ir(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:cr}=Qe;let sr=void 0,dr=void 0;function ur(e){return sr||function(e){const t=e.Schema,r=t.Types.Vector3;sr=new t({v0:r,v1:r})}(e),sr}function mr(e){const t=cr.getModelFrom(e);dr=t.discriminator("LineCurve3",ur(e))}var lr={getSchemaFrom:ur,getModelFrom:function(e){return dr||mr(e),dr},registerModelTo:function(e){return dr||mr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:fr}=Qe;let hr=void 0,gr=void 0;function pr(e){return hr||function(e){const t=e.Schema;hr=new t({})}(e),hr}function vr(e){const t=fr.getModelFrom(e);gr=t.discriminator("NURBSCurve",pr(e))}var Sr={getSchemaFrom:pr,getModelFrom:function(e){return gr||vr(e),gr},registerModelTo:function(e){return gr||vr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Mr}=Qe;let yr=void 0,br=void 0;function Fr(e){return yr||function(e){const t=e.Schema;yr=new t({})}(e),yr}function wr(e){const t=Mr.getModelFrom(e);br=t.discriminator("NURBSSurface",Fr(e))}var Tr={getSchemaFrom:Fr,getModelFrom:function(e){return br||wr(e),br},registerModelTo:function(e){return br||wr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:_r}=Qe;let Nr=void 0,Br=void 0;function Or(e){return Nr||function(e){const t=e.Schema,r=t.Types.Vector2;Nr=new t({v0:r,v1:r,v2:r})}(e),Nr}function Ir(e){const t=_r.getModelFrom(e);Br=t.discriminator("QuadraticBezierCurve",Or(e))}var xr={getSchemaFrom:Or,getModelFrom:function(e){return Br||Ir(e),Br},registerModelTo:function(e){return Br||Ir(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Dr}=Qe;let Cr=void 0,Er=void 0;function Ar(e){return Cr||function(e){const t=e.Schema,r=t.Types.Vector3;Cr=new t({v0:r,v1:r,v2:r})}(e),Cr}function jr(e){const t=Dr.getModelFrom(e);Er=t.discriminator("QuadraticBezierCurve3",Ar(e))}var Lr={getSchemaFrom:Ar,getModelFrom:function(e){return Er||jr(e),Er},registerModelTo:function(e){return Er||jr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Pr}=Qe;let Gr=void 0,Vr=void 0;function $r(e){return Gr||function(e){const t=e.Schema,r=t.Types.Vector3;Gr=new t({points:[r]})}(e),Gr}function Ur(e){const t=Pr.getModelFrom(e);Vr=t.discriminator("SplineCurve",$r(e))}var kr={getSchemaFrom:$r,getModelFrom:function(e){return Vr||Ur(e),Vr},registerModelTo:function(e){return Vr||Ur(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Rr}=$e;let zr=void 0,Hr=void 0;function Qr(e){return zr||function(e){const t=e.Schema;zr=new t({})}(e),zr}function Yr(e){const t=Rr.getModelFrom(e);Hr=t.discriminator("BoxBufferGeometry",Qr(e))}var Zr={getSchemaFrom:Qr,getModelFrom:function(e){return Hr||Yr(e),Hr},registerModelTo:function(e){return Hr||Yr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Xr}=at;let Wr=void 0,qr=void 0;function Kr(e){return Wr||function(e){const t=e.Schema;Wr=new t({})}(e),Wr}function Jr(e){const t=Xr.getModelFrom(e);qr=t.discriminator("BoxGeometry",Kr(e))}var eo={getSchemaFrom:Kr,getModelFrom:function(e){return qr||Jr(e),qr},registerModelTo:function(e){return qr||Jr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:to}=$e;let ro=void 0,oo=void 0;function no(e){return ro||function(e){const t=e.Schema;ro=new t({})}(e),ro}function io(e){const t=to.getModelFrom(e);oo=t.discriminator("CircleBufferGeometry",no(e))}var ao={getSchemaFrom:no,getModelFrom:function(e){return oo||io(e),oo},registerModelTo:function(e){return oo||io(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:co}=at;let so=void 0,uo=void 0;function mo(e){return so||function(e){const t=e.Schema;so=new t({})}(e),so}function lo(e){const t=co.getModelFrom(e);uo=t.discriminator("CircleGeometry",mo(e))}var fo={getSchemaFrom:mo,getModelFrom:function(e){return uo||lo(e),uo},registerModelTo:function(e){return uo||lo(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:ho}=$e;let go=void 0,po=void 0;function vo(e){return go||function(e){const t=e.Schema;go=new t({})}(e),go}function So(e){const t=ho.getModelFrom(e);po=t.discriminator("ConeBufferGeometry",vo(e))}var Mo={getSchemaFrom:vo,getModelFrom:function(e){return po||So(e),po},registerModelTo:function(e){return po||So(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:yo}=at;let bo=void 0,Fo=void 0;function wo(e){return bo||function(e){const t=e.Schema;bo=new t({})}(e),bo}function To(e){const t=yo.getModelFrom(e);Fo=t.discriminator("ConeGeometry",wo(e))}var _o={getSchemaFrom:wo,getModelFrom:function(e){return Fo||To(e),Fo},registerModelTo:function(e){return Fo||To(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:No}=at;let Bo=void 0,Oo=void 0;function Io(e){return Bo||function(e){const t=e.Schema;Bo=new t({})}(e),Bo}function xo(e){const t=No.getModelFrom(e);Oo=t.discriminator("ConvexGeometry",Io(e))}var Do={getSchemaFrom:Io,getModelFrom:function(e){return Oo||xo(e),Oo},registerModelTo:function(e){return Oo||xo(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Co}=$e;let Eo=void 0,Ao=void 0;function jo(e){return Eo||function(e){const t=e.Schema;Eo=new t({})}(e),Eo}function Lo(e){const t=Co.getModelFrom(e);Ao=t.discriminator("CylinderBufferGeometry",jo(e))}var Po={getSchemaFrom:jo,getModelFrom:function(e){return Ao||Lo(e),Ao},registerModelTo:function(e){return Ao||Lo(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Go}=at;let Vo=void 0,$o=void 0;function Uo(e){return Vo||function(e){const t=e.Schema;Vo=new t({})}(e),Vo}function ko(e){const t=Go.getModelFrom(e);$o=t.discriminator("CylinderGeometry",Uo(e))}var Ro={getSchemaFrom:Uo,getModelFrom:function(e){return $o||ko(e),$o},registerModelTo:function(e){return $o||ko(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:zo}=at;let Ho=void 0,Qo=void 0;function Yo(e){return Ho||function(e){const t=e.Schema;Ho=new t({})}(e),Ho}function Zo(e){const t=zo.getModelFrom(e);Qo=t.discriminator("DecalGeometry",Yo(e))}var Xo={getSchemaFrom:Yo,getModelFrom:function(e){return Qo||Zo(e),Qo},registerModelTo:function(e){return Qo||Zo(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Wo}=at;let qo=void 0,Ko=void 0;function Jo(e){return qo||function(e){const t=e.Schema;qo=new t({})}(e),qo}function en(e){const t=Wo.getModelFrom(e);Ko=t.discriminator("DodecahedronGeometry",Jo(e))}var tn={getSchemaFrom:Jo,getModelFrom:function(e){return Ko||en(e),Ko},registerModelTo:function(e){return Ko||en(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:rn}=at;let on=void 0,nn=void 0;function an(e){return on||function(e){const t=e.Schema;on=new t({})}(e),on}function cn(e){const t=rn.getModelFrom(e);nn=t.discriminator("EdgesGeometry",an(e))}var sn={getSchemaFrom:an,getModelFrom:function(e){return nn||cn(e),nn},registerModelTo:function(e){return nn||cn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:dn}=$e;let un=void 0,mn=void 0;function ln(e){return un||function(e){const t=e.Schema;un=new t({})}(e),un}function fn(e){const t=dn.getModelFrom(e);mn=t.discriminator("ExtrudeBufferGeometry",ln(e))}var hn={getSchemaFrom:ln,getModelFrom:function(e){return mn||fn(e),mn},registerModelTo:function(e){return mn||fn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:gn}=at;let pn=void 0,vn=void 0;function Sn(e){return pn||function(e){const t=e.Schema;pn=new t({})}(e),pn}function Mn(e){const t=gn.getModelFrom(e);vn=t.discriminator("ExtrudeGeometry",Sn(e))}var yn={getSchemaFrom:Sn,getModelFrom:function(e){return vn||Mn(e),vn},registerModelTo:function(e){return vn||Mn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:bn}=$e;let Fn=void 0,wn=void 0;function Tn(e){return Fn||function(e){const t=e.Schema;Fn=new t({})}(e),Fn}function _n(e){const t=bn.getModelFrom(e);wn=t.discriminator("IcosahedronBufferGeometry",Tn(e))}var Nn={getSchemaFrom:Tn,getModelFrom:function(e){return wn||_n(e),wn},registerModelTo:function(e){return wn||_n(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Bn}=at;let On=void 0,In=void 0;function xn(e){return On||function(e){const t=e.Schema;On=new t({})}(e),On}function Dn(e){const t=Bn.getModelFrom(e);In=t.discriminator("IcosahedronGeometry",xn(e))}var Cn={getSchemaFrom:xn,getModelFrom:function(e){return In||Dn(e),In},registerModelTo:function(e){return In||Dn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:En}=$e;let An=void 0,jn=void 0;function Ln(e){return An||function(e){const t=e.Schema;An=new t({})}(e),An}function Pn(e){const t=En.getModelFrom(e);jn=t.discriminator("InstancedBufferGeometry",Ln(e))}var Gn={getSchemaFrom:Ln,getModelFrom:function(e){return jn||Pn(e),jn},registerModelTo:function(e){return jn||Pn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Vn}=$e;let $n=void 0,Un=void 0;function kn(e){return $n||function(e){const t=e.Schema;$n=new t({})}(e),$n}function Rn(e){const t=Vn.getModelFrom(e);Un=t.discriminator("LatheBufferGeometry",kn(e))}var zn={getSchemaFrom:kn,getModelFrom:function(e){return Un||Rn(e),Un},registerModelTo:function(e){return Un||Rn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Hn}=at;let Qn=void 0,Yn=void 0;function Zn(e){return Qn||function(e){const t=e.Schema;Qn=new t({})}(e),Qn}function Xn(e){const t=Hn.getModelFrom(e);Yn=t.discriminator("LatheGeometry",Zn(e))}var Wn={getSchemaFrom:Zn,getModelFrom:function(e){return Yn||Xn(e),Yn},registerModelTo:function(e){return Yn||Xn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:qn}=$e;let Kn=void 0,Jn=void 0;function ei(e){return Kn||function(e){const t=e.Schema;Kn=new t({})}(e),Kn}function ti(e){const t=qn.getModelFrom(e);Jn=t.discriminator("OctahedronBufferGeometry",ei(e))}var ri={getSchemaFrom:ei,getModelFrom:function(e){return Jn||ti(e),Jn},registerModelTo:function(e){return Jn||ti(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:oi}=at;let ni=void 0,ii=void 0;function ai(e){return ni||function(e){const t=e.Schema;ni=new t({})}(e),ni}function ci(e){const t=oi.getModelFrom(e);ii=t.discriminator("OctahedronGeometry",ai(e))}var si={getSchemaFrom:ai,getModelFrom:function(e){return ii||ci(e),ii},registerModelTo:function(e){return ii||ci(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:di}=$e;let ui=void 0,mi=void 0;function li(e){return ui||function(e){const t=e.Schema;ui=new t({})}(e),ui}function fi(e){const t=di.getModelFrom(e);mi=t.discriminator("ParametricBufferGeometry",li(e))}var hi={getSchemaFrom:li,getModelFrom:function(e){return mi||fi(e),mi},registerModelTo:function(e){return mi||fi(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:gi}=at;let pi=void 0,vi=void 0;function Si(e){return pi||function(e){const t=e.Schema;pi=new t({})}(e),pi}function Mi(e){const t=gi.getModelFrom(e);vi=t.discriminator("ParametricGeometry",Si(e))}var yi={getSchemaFrom:Si,getModelFrom:function(e){return vi||Mi(e),vi},registerModelTo:function(e){return vi||Mi(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:bi}=$e;let Fi=void 0,wi=void 0;function Ti(e){return Fi||function(e){const t=e.Schema;Fi=new t({})}(e),Fi}function _i(e){const t=bi.getModelFrom(e);wi=t.discriminator("PlaneBufferGeometry",Ti(e))}var Ni={getSchemaFrom:Ti,getModelFrom:function(e){return wi||_i(e),wi},registerModelTo:function(e){return wi||_i(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Bi}=at;let Oi=void 0,Ii=void 0;function xi(e){return Oi||function(e){const t=e.Schema;Oi=new t({})}(e),Oi}function Di(e){const t=Bi.getModelFrom(e);Ii=t.discriminator("PlaneGeometry",xi(e))}var Ci={getSchemaFrom:xi,getModelFrom:function(e){return Ii||Di(e),Ii},registerModelTo:function(e){return Ii||Di(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Ei}=$e;let Ai=void 0,ji=void 0;function Li(e){return Ai||function(e){const t=e.Schema;Ai=new t({})}(e),Ai}function Pi(e){const t=Ei.getModelFrom(e);ji=t.discriminator("PolyhedronBufferGeometry",Li(e))}var Gi={getSchemaFrom:Li,getModelFrom:function(e){return ji||Pi(e),ji},registerModelTo:function(e){return ji||Pi(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Vi}=at;let $i=void 0,Ui=void 0;function ki(e){return $i||function(e){const t=e.Schema;$i=new t({})}(e),$i}function Ri(e){const t=Vi.getModelFrom(e);Ui=t.discriminator("PolyhedronGeometry",ki(e))}var zi={getSchemaFrom:ki,getModelFrom:function(e){return Ui||Ri(e),Ui},registerModelTo:function(e){return Ui||Ri(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Hi}=$e;let Qi=void 0,Yi=void 0;function Zi(e){return Qi||function(e){const t=e.Schema;Qi=new t({})}(e),Qi}function Xi(e){const t=Hi.getModelFrom(e);Yi=t.discriminator("RingBufferGeometry",Zi(e))}var Wi={getSchemaFrom:Zi,getModelFrom:function(e){return Yi||Xi(e),Yi},registerModelTo:function(e){return Yi||Xi(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:qi}=at;let Ki=void 0,Ji=void 0;function ea(e){return Ki||function(e){const t=e.Schema;Ki=new t({})}(e),Ki}function ta(e){const t=qi.getModelFrom(e);Ji=t.discriminator("RingGeometry",ea(e))}var ra={getSchemaFrom:ea,getModelFrom:function(e){return Ji||ta(e),Ji},registerModelTo:function(e){return Ji||ta(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:oa}=$e;let na=void 0,ia=void 0;function aa(e){return na||function(e){const t=e.Schema,r=t.Types.Vector2,o=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),n=new t({curves:[o],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1}),i=new t({curves:[o],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[n]},{id:!1,_id:!1});na=new t({shapes:[i],curveSegments:Number})}(e),na}function ca(e){const t=oa.getModelFrom(e);ia=t.discriminator("ShapeBufferGeometry",aa(e))}var sa={getSchemaFrom:aa,getModelFrom:function(e){return ia||ca(e),ia},registerModelTo:function(e){return ia||ca(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:da}=at;let ua=void 0,ma=void 0;function la(e){return ua||function(e){const t=e.Schema;ua=new t({})}(e),ua}function fa(e){const t=da.getModelFrom(e);ma=t.discriminator("ShapeGeometry",la(e))}var ha={getSchemaFrom:la,getModelFrom:function(e){return ma||fa(e),ma},registerModelTo:function(e){return ma||fa(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:ga}=$e;let pa=void 0,va=void 0;function Sa(e){return pa||function(e){const t=e.Schema;pa=new t({})}(e),pa}function Ma(e){const t=ga.getModelFrom(e);va=t.discriminator("SphereBufferGeometry",Sa(e))}var ya={getSchemaFrom:Sa,getModelFrom:function(e){return va||Ma(e),va},registerModelTo:function(e){return va||Ma(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:ba}=at;let Fa=void 0,wa=void 0;function Ta(e){return Fa||function(e){const t=e.Schema;Fa=new t({})}(e),Fa}function _a(e){const t=ba.getModelFrom(e);wa=t.discriminator("SphereGeometry",Ta(e))}var Na={getSchemaFrom:Ta,getModelFrom:function(e){return wa||_a(e),wa},registerModelTo:function(e){return wa||_a(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Ba}=$e;let Oa=void 0,Ia=void 0;function xa(e){return Oa||function(e){const t=e.Schema;Oa=new t({})}(e),Oa}function Da(e){const t=Ba.getModelFrom(e);Ia=t.discriminator("TeapotBufferGeometry",xa(e))}var Ca={getSchemaFrom:xa,getModelFrom:function(e){return Ia||Da(e),Ia},registerModelTo:function(e){return Ia||Da(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Ea}=$e;let Aa=void 0,ja=void 0;function La(e){return Aa||function(e){const t=e.Schema;Aa=new t({})}(e),Aa}function Pa(e){const t=Ea.getModelFrom(e);ja=t.discriminator("TetrahedronBufferGeometry",La(e))}var Ga={getSchemaFrom:La,getModelFrom:function(e){return ja||Pa(e),ja},registerModelTo:function(e){return ja||Pa(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Va}=at;let $a=void 0,Ua=void 0;function ka(e){return $a||function(e){const t=e.Schema;$a=new t({})}(e),$a}function Ra(e){const t=Va.getModelFrom(e);Ua=t.discriminator("TetrahedronGeometry",ka(e))}var za={getSchemaFrom:ka,getModelFrom:function(e){return Ua||Ra(e),Ua},registerModelTo:function(e){return Ua||Ra(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Ha}=$e;let Qa=void 0,Ya=void 0;function Za(e){return Qa||function(e){const t=e.Schema;Qa=new t({})}(e),Qa}function Xa(e){const t=Ha.getModelFrom(e);Ya=t.discriminator("TextBufferGeometry",Za(e))}var Wa={getSchemaFrom:Za,getModelFrom:function(e){return Ya||Xa(e),Ya},registerModelTo:function(e){return Ya||Xa(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:qa}=at;let Ka=void 0,Ja=void 0;function ec(e){return Ka||function(e){const t=e.Schema;Ka=new t({})}(e),Ka}function tc(e){const t=qa.getModelFrom(e);Ja=t.discriminator("TextGeometry",ec(e))}var rc={getSchemaFrom:ec,getModelFrom:function(e){return Ja||tc(e),Ja},registerModelTo:function(e){return Ja||tc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:oc}=$e;let nc=void 0,ic=void 0;function ac(e){return nc||function(e){const t=e.Schema;nc=new t({})}(e),nc}function cc(e){const t=oc.getModelFrom(e);ic=t.discriminator("TorusBufferGeometry",ac(e))}var sc={getSchemaFrom:ac,getModelFrom:function(e){return ic||cc(e),ic},registerModelTo:function(e){return ic||cc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:dc}=at;let uc=void 0,mc=void 0;function lc(e){return uc||function(e){const t=e.Schema;uc=new t({})}(e),uc}function fc(e){const t=dc.getModelFrom(e);mc=t.discriminator("TorusGeometry",lc(e))}var hc={getSchemaFrom:lc,getModelFrom:function(e){return mc||fc(e),mc},registerModelTo:function(e){return mc||fc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:gc}=$e;let pc=void 0,vc=void 0;function Sc(e){return pc||function(e){const t=e.Schema;pc=new t({})}(e),pc}function Mc(e){const t=gc.getModelFrom(e);vc=t.discriminator("TorusKnotBufferGeometry",Sc(e))}var yc={getSchemaFrom:Sc,getModelFrom:function(e){return vc||Mc(e),vc},registerModelTo:function(e){return vc||Mc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:bc}=at;let Fc=void 0,wc=void 0;function Tc(e){return Fc||function(e){const t=e.Schema;Fc=new t({})}(e),Fc}function _c(e){const t=bc.getModelFrom(e);wc=t.discriminator("TorusKnotGeometry",Tc(e))}var Nc={getSchemaFrom:Tc,getModelFrom:function(e){return wc||_c(e),wc},registerModelTo:function(e){return wc||_c(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Bc}=$e;let Oc=void 0,Ic=void 0;function xc(e){return Oc||function(e){const t=e.Schema;Oc=new t({})}(e),Oc}function Dc(e){const t=Bc.getModelFrom(e);Ic=t.discriminator("TubeBufferGeometry",xc(e))}var Cc={getSchemaFrom:xc,getModelFrom:function(e){return Ic||Dc(e),Ic},registerModelTo:function(e){return Ic||Dc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Ec}=at;let Ac=void 0,jc=void 0;function Lc(e){return Ac||function(e){const t=e.Schema;Ac=new t({})}(e),Ac}function Pc(e){const t=Ec.getModelFrom(e);jc=t.discriminator("TubeGeometry",Lc(e))}var Gc={getSchemaFrom:Lc,getModelFrom:function(e){return jc||Pc(e),jc},registerModelTo:function(e){return jc||Pc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Vc}=at;let $c=void 0,Uc=void 0;function kc(e){return $c||function(e){const t=e.Schema;$c=new t({})}(e),$c}function Rc(e){const t=Vc.getModelFrom(e);Uc=t.discriminator("WireframeGeometry",kc(e))}var zc={getSchemaFrom:kc,getModelFrom:function(e){return Uc||Rc(e),Uc},registerModelTo:function(e){return Uc||Rc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Hc}=_;let Qc=void 0,Yc=void 0;function Zc(e){return Qc||function(e){const t=e.Schema;Qc=new t({})}(e),Qc}function Xc(e){const t=Hc.getModelFrom(e);Yc=t.discriminator("ArrowHelper",Zc(e))}var Wc={getSchemaFrom:Zc,getModelFrom:function(e){return Yc||Xc(e),Yc},registerModelTo:function(e){return Yc||Xc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:qc}=_;let Kc=void 0,Jc=void 0;function es(e){return Kc||function(e){const t=e.Schema;Kc=new t({})}(e),Kc}function ts(e){const t=qc.getModelFrom(e);Jc=t.discriminator("AxesHelper",es(e))}var rs={getSchemaFrom:es,getModelFrom:function(e){return Jc||ts(e),Jc},registerModelTo:function(e){return Jc||ts(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:os}=_;let ns=void 0,is=void 0;function as(e){return ns||function(e){const t=e.Schema;ns=new t({})}(e),ns}function cs(e){const t=os.getModelFrom(e);is=t.discriminator("Box3Helper",as(e))}var ss={getSchemaFrom:as,getModelFrom:function(e){return is||cs(e),is},registerModelTo:function(e){return is||cs(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:ds}=_;let us=void 0,ms=void 0;function ls(e){return us||function(e){const t=e.Schema;us=new t({})}(e),us}function fs(e){const t=ds.getModelFrom(e);ms=t.discriminator("BoxHelper",ls(e))}var hs={getSchemaFrom:ls,getModelFrom:function(e){return ms||fs(e),ms},registerModelTo:function(e){return ms||fs(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:gs}=_;let ps=void 0,vs=void 0;function Ss(e){return ps||function(e){const t=e.Schema;ps=new t({})}(e),ps}function Ms(e){const t=gs.getModelFrom(e);vs=t.discriminator("CameraHelper",Ss(e))}var ys={getSchemaFrom:Ss,getModelFrom:function(e){return vs||Ms(e),vs},registerModelTo:function(e){return vs||Ms(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:bs}=_;let Fs=void 0,ws=void 0;function Ts(e){return Fs||function(e){const t=e.Schema;Fs=new t({})}(e),Fs}function _s(e){const t=bs.getModelFrom(e);ws=t.discriminator("DirectionalLightHelper",Ts(e))}var Ns={getSchemaFrom:Ts,getModelFrom:function(e){return ws||_s(e),ws},registerModelTo:function(e){return ws||_s(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Bs}=_;let Os=void 0,Is=void 0;function xs(e){return Os||function(e){const t=e.Schema;Os=new t({})}(e),Os}function Ds(e){const t=Bs.getModelFrom(e);Is=t.discriminator("FaceNormalsHelper",xs(e))}var Cs={getSchemaFrom:xs,getModelFrom:function(e){return Is||Ds(e),Is},registerModelTo:function(e){return Is||Ds(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Es}=_;let As=void 0,js=void 0;function Ls(e){return As||function(e){const t=e.Schema;As=new t({})}(e),As}function Ps(e){const t=Es.getModelFrom(e);js=t.discriminator("GridHelper",Ls(e))}var Gs={getSchemaFrom:Ls,getModelFrom:function(e){return js||Ps(e),js},registerModelTo:function(e){return js||Ps(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Vs}=_;let $s=void 0,Us=void 0;function ks(e){return $s||function(e){const t=e.Schema;$s=new t({})}(e),$s}function Rs(e){const t=Vs.getModelFrom(e);Us=t.discriminator("HemisphereLightHelper",ks(e))}var zs={getSchemaFrom:ks,getModelFrom:function(e){return Us||Rs(e),Us},registerModelTo:function(e){return Us||Rs(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Hs}=_;let Qs=void 0,Ys=void 0;function Zs(e){return Qs||function(e){const t=e.Schema;Qs=new t({})}(e),Qs}function Xs(e){const t=Hs.getModelFrom(e);Ys=t.discriminator("PlaneHelper",Zs(e))}var Ws={getSchemaFrom:Zs,getModelFrom:function(e){return Ys||Xs(e),Ys},registerModelTo:function(e){return Ys||Xs(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:qs}=_;let Ks=void 0,Js=void 0;function ed(e){return Ks||function(e){const t=e.Schema;Ks=new t({})}(e),Ks}function td(e){const t=qs.getModelFrom(e);Js=t.discriminator("PointLightHelper",ed(e))}var rd={getSchemaFrom:ed,getModelFrom:function(e){return Js||td(e),Js},registerModelTo:function(e){return Js||td(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:od}=_;let nd=void 0,id=void 0;function ad(e){return nd||function(e){const t=e.Schema;nd=new t({})}(e),nd}function cd(e){const t=od.getModelFrom(e);id=t.discriminator("PolarGridHelper",ad(e))}var sd={getSchemaFrom:ad,getModelFrom:function(e){return id||cd(e),id},registerModelTo:function(e){return id||cd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:dd}=_;let ud=void 0,md=void 0;function ld(e){return ud||function(e){const t=e.Schema;ud=new t({})}(e),ud}function fd(e){const t=dd.getModelFrom(e);md=t.discriminator("RectAreaLightHelper",ld(e))}var hd={getSchemaFrom:ld,getModelFrom:function(e){return md||fd(e),md},registerModelTo:function(e){return md||fd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:gd}=_;let pd=void 0,vd=void 0;function Sd(e){return pd||function(e){const t=e.Schema;pd=new t({})}(e),pd}function Md(e){const t=gd.getModelFrom(e);vd=t.discriminator("SkeletonHelper",Sd(e))}var yd={getSchemaFrom:Sd,getModelFrom:function(e){return vd||Md(e),vd},registerModelTo:function(e){return vd||Md(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:bd}=_;let Fd=void 0,wd=void 0;function Td(e){return Fd||function(e){const t=e.Schema;Fd=new t({})}(e),Fd}function _d(e){const t=bd.getModelFrom(e);wd=t.discriminator("SpotLightHelper",Td(e))}var Nd={getSchemaFrom:Td,getModelFrom:function(e){return wd||_d(e),wd},registerModelTo:function(e){return wd||_d(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Bd}=_;let Od=void 0,Id=void 0;function xd(e){return Od||function(e){const t=e.Schema;Od=new t({})}(e),Od}function Dd(e){const t=Bd.getModelFrom(e);Id=t.discriminator("VertexNormalsHelper",xd(e))}var Cd={getSchemaFrom:xd,getModelFrom:function(e){return Id||Dd(e),Id},registerModelTo:function(e){return Id||Dd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Ed}=_;let Ad=void 0,jd=void 0;function Ld(e){return Ad||function(e){const t=e.Schema;Ad=new t({})}(e),Ad}function Pd(e){const t=Ed.getModelFrom(e);jd=t.discriminator("AmbientLight",Ld(e))}var Gd={getSchemaFrom:Ld,getModelFrom:function(e){return jd||Pd(e),jd},registerModelTo:function(e){return jd||Pd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Vd}=_;let $d=void 0,Ud=void 0;function kd(e){return $d||function(e){const t=e.Schema;$d=new t({})}(e),$d}function Rd(e){const t=Vd.getModelFrom(e);Ud=t.discriminator("DirectionalLight",kd(e))}var zd={getSchemaFrom:kd,getModelFrom:function(e){return Ud||Rd(e),Ud},registerModelTo:function(e){return Ud||Rd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Hd}=_;let Qd=void 0,Yd=void 0;function Zd(e){return Qd||function(e){const t=e.Schema;Qd=new t({})}(e),Qd}function Xd(e){const t=Hd.getModelFrom(e);Yd=t.discriminator("HemisphereLight",Zd(e))}var Wd={getSchemaFrom:Zd,getModelFrom:function(e){return Yd||Xd(e),Yd},registerModelTo:function(e){return Yd||Xd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:qd}=_;let Kd=void 0,Jd=void 0;function eu(e){return Kd||function(e){const t=e.Schema;Kd=new t({})}(e),Kd}function tu(e){const t=qd.getModelFrom(e);Jd=t.discriminator("Light",eu(e))}var ru={getSchemaFrom:eu,getModelFrom:function(e){return Jd||tu(e),Jd},registerModelTo:function(e){return Jd||tu(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:ou}=_;let nu=void 0,iu=void 0;function au(e){return nu||function(e){const t=e.Schema;nu=new t({})}(e),nu}function cu(e){const t=ou.getModelFrom(e);iu=t.discriminator("PointLight",au(e))}var su={getSchemaFrom:au,getModelFrom:function(e){return iu||cu(e),iu},registerModelTo:function(e){return iu||cu(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:du}=_;let uu=void 0,mu=void 0;function lu(e){return uu||function(e){const t=e.Schema;uu=new t({})}(e),uu}function fu(e){const t=du.getModelFrom(e);mu=t.discriminator("RectAreaLight",lu(e))}var hu={getSchemaFrom:lu,getModelFrom:function(e){return mu||fu(e),mu},registerModelTo:function(e){return mu||fu(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:gu}=_;let pu=void 0,vu=void 0;function Su(e){return pu||function(e){const t=e.Schema;pu=new t({})}(e),pu}function Mu(e){const t=gu.getModelFrom(e);vu=t.discriminator("SpotLight",Su(e))}var yu={getSchemaFrom:Su,getModelFrom:function(e){return vu||Mu(e),vu},registerModelTo:function(e){return vu||Mu(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Material
 *
 * @description Todo...
 */let bu=void 0,Fu=void 0;function wu(e){return bu||function(e){const t=e.Schema,r=t.Types.Mixed;bu=new t({uuid:String,name:String,type:String,fog:Boolean,lights:Boolean,blending:Number,side:Number,flatShading:Boolean,vertexColors:Number,opacity:Number,transparent:Boolean,blendSrc:Number,blendDst:Number,blendEquation:Number,blendSrcAlpha:String,blendDstAlpha:String,blendEquationAlpha:String,depthFunc:Number,depthTest:Boolean,depthWrite:Boolean,clippingPlanes:r,clipIntersection:Boolean,clipShadows:Boolean,colorWrite:Boolean,precision:Number,polygonOffset:Boolean,polygonOffsetFactor:Number,polygonOffsetUnits:Number,dithering:Boolean,alphaTest:Number,premultipliedAlpha:Boolean,overdraw:Number,visible:Boolean,userData:r,needsUpdate:Boolean},{collection:"materials",discriminatorKey:"type"})}(e),bu}function Tu(e){Fu=e.model("Materials",wu(e)),Fu.discriminator("Material",new e.Schema({}))}var _u={getSchemaFrom:wu,getModelFrom:function(e){return Fu||Tu(e),Fu},registerModelTo:function(e){return Fu||Tu(e),e}},Nu={Material:_u};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
const{Material:Bu}=Nu;let Ou=void 0,Iu=void 0;function xu(e){return Ou||function(e){const t=e.Schema,r=t.Types.Color;Ou=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String})}(e),Ou}function Du(e){const t=Bu.getModelFrom(e);Iu=t.discriminator("LineBasicMaterial",xu(e))}var Cu={getSchemaFrom:xu,getModelFrom:function(e){return Iu||Du(e),Iu},registerModelTo:function(e){return Iu||Du(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Eu}=Nu;let Au=void 0,ju=void 0;function Lu(e){return Au||function(e){const t=e.Schema,r=t.Types.Color;Au=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String,dashSize:Number,gapSize:Number,scale:Number})}(e),Au}function Pu(e){const t=Eu.getModelFrom(e);ju=t.discriminator("LineDashedMaterial",Lu(e))}var Gu={getSchemaFrom:Lu,getModelFrom:function(e){return ju||Pu(e),ju},registerModelTo:function(e){return ju||Pu(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Vu}=Nu;let $u=void 0,Uu=void 0;function ku(e){return $u||function(e){const t=e.Schema,r=t.Types,o=r.Mixed,n=r.Color;$u=new t({color:n,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,specularMap:o,alphaMap:o,envMap:o,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,light:Boolean})}(e),$u}function Ru(e){const t=Vu.getModelFrom(e);Uu=t.discriminator("MeshBasicMaterial",ku(e))}var zu={getSchemaFrom:ku,getModelFrom:function(e){return Uu||Ru(e),Uu},registerModelTo:function(e){return Uu||Ru(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Hu}=Nu;let Qu=void 0,Yu=void 0;function Zu(e){return Qu||function(e){const t=e.Schema,r=t.Types.Mixed;Qu=new t({depthPacking:Number,skinning:Boolean,morphTargets:Boolean,map:r,alphaMap:r,displacementMap:r,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean})}(e),Qu}function Xu(e){const t=Hu.getModelFrom(e);Yu=t.discriminator("MeshDepthMaterial",Zu(e))}var Wu={getSchemaFrom:Zu,getModelFrom:function(e){return Yu||Xu(e),Yu},registerModelTo:function(e){return Yu||Xu(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:qu}=Nu;let Ku=void 0,Ju=void 0;function em(e){return Ku||function(e){const t=e.Schema,r=t.Types,o=r.Color,n=r.Mixed;Ku=new t({color:o,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),Ku}function tm(e){const t=qu.getModelFrom(e);Ju=t.discriminator("MeshLambertMaterial",em(e))}var rm={getSchemaFrom:em,getModelFrom:function(e){return Ju||tm(e),Ju},registerModelTo:function(e){return Ju||tm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:om}=Nu;let nm=void 0,im=void 0;function am(e){return nm||function(e){const t=e.Schema,r=t.Types,o=r.Mixed,n=r.Vector2;nm=new t({bumpMap:o,bumpScale:Number,normalMap:o,normalScale:n,displacementMap:o,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),nm}function cm(e){const t=om.getModelFrom(e);im=t.discriminator("MeshNormalMaterial",am(e))}var sm={getSchemaFrom:am,getModelFrom:function(e){return im||cm(e),im},registerModelTo:function(e){return im||cm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:dm}=Nu;let um=void 0,mm=void 0;function lm(e){return um||function(e){const t=e.Schema,r=t.Types,o=r.Mixed,n=r.Color,i=r.Vector2;um=new t({color:n,specular:n,shininess:Number,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,emissive:n,emissiveIntensity:Number,emissiveMap:o,bumpMap:o,bumpScale:Number,normalMap:o,normalScale:i,displacementMap:o,displacementScale:Number,displacementBias:Number,specularMap:o,alphaMap:o,envMap:o,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),um}function fm(e){const t=dm.getModelFrom(e);mm=t.discriminator("MeshPhongMaterial",lm(e))}var hm={getSchemaFrom:lm,getModelFrom:function(e){return mm||fm(e),mm},registerModelTo:function(e){return mm||fm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:gm}=Nu;let pm=void 0,vm=void 0;function Sm(e){return pm||function(e){const t=e.Schema;pm=new t({reflectivity:Number,clearCoat:Number,clearCoatRoughness:Number})}(e),pm}function Mm(e){const t=gm.getModelFrom(e);vm=t.discriminator("MeshPhysicalMaterial",Sm(e))}var ym={getSchemaFrom:Sm,getModelFrom:function(e){return vm||Mm(e),vm},registerModelTo:function(e){return vm||Mm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:bm}=Nu;let Fm=void 0,wm=void 0;function Tm(e){return Fm||function(e){const t=e.Schema,r=t.Types,o=r.Mixed,n=r.Color,i=r.Vector2;Fm=new t({color:n,roughness:Number,metalness:Number,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,emissive:n,emissiveIntensity:Number,emissiveMap:o,bumpMap:o,bumpScale:Number,normalMap:o,normalScale:i,displacementMap:o,displacementScale:Number,displacementBias:Number,roughnessMap:o,metalnessMap:o,alphaMap:o,envMap:o,envMapIntensity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),Fm}function _m(e){const t=bm.getModelFrom(e);wm=t.discriminator("MeshStandardMaterial",Tm(e))}var Nm={getSchemaFrom:Tm,getModelFrom:function(e){return wm||_m(e),wm},registerModelTo:function(e){return wm||_m(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Bm}=Nu;let Om=void 0,Im=void 0;function xm(e){return Om||function(e){const t=e.Schema,r=t.Types,o=r.Mixed,n=r.Color,i=r.Vector2;Om=new t({color:n,specular:n,shininess:Number,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,emissive:n,emissiveIntensity:Number,emissiveMap:o,bumpMap:o,bumpScale:Number,normalMap:o,normalScale:i,displacementMap:o,displacementScale:Number,displacementBias:Number,specularMap:o,alphaMap:o,envMap:o,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,gradientMap:o})}(e),Om}function Dm(e){const t=Bm.getModelFrom(e);Im=t.discriminator("MeshToonMaterial",xm(e))}var Cm={getSchemaFrom:xm,getModelFrom:function(e){return Im||Dm(e),Im},registerModelTo:function(e){return Im||Dm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Em}=Nu;let Am=void 0,jm=void 0;function Lm(e){return Am||function(e){const t=e.Schema,r=t.Types,o=r.Color,n=r.Mixed;Am=new t({color:o,map:n,size:Number,sizeAttenuation:Boolean,lights:Boolean})}(e),Am}function Pm(e){const t=Em.getModelFrom(e);jm=t.discriminator("PointsMaterial",Lm(e))}var Gm={getSchemaFrom:Lm,getModelFrom:function(e){return jm||Pm(e),jm},registerModelTo:function(e){return jm||Pm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Vm}=Nu;let $m=void 0,Um=void 0;function km(e){return $m||function(e){const t=e.Schema,r=t.Types.Mixed;$m=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),$m}function Rm(e){const t=Vm.getModelFrom(e);Um=t.discriminator("RawShaderMaterial",km(e))}var zm={getSchemaFrom:km,getModelFrom:function(e){return Um||Rm(e),Um},registerModelTo:function(e){return Um||Rm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Hm}=Nu;let Qm=void 0,Ym=void 0;function Zm(e){return Qm||function(e){const t=e.Schema,r=t.Types.Mixed;Qm=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),Qm}function Xm(e){const t=Hm.getModelFrom(e);Ym=t.discriminator("ShaderMaterial",Zm(e))}var Wm={getSchemaFrom:Zm,getModelFrom:function(e){return Ym||Xm(e),Ym},registerModelTo:function(e){return Ym||Xm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:qm}=Nu;let Km=void 0,Jm=void 0;function el(e){return Km||function(e){const t=e.Schema,r=t.Types.Color;Km=new t({color:r,opacity:Number,lights:Boolean,transparent:Boolean})}(e),Km}function tl(e){const t=qm.getModelFrom(e);Jm=t.discriminator("ShadowMaterial",el(e))}var rl={getSchemaFrom:el,getModelFrom:function(e){return Jm||tl(e),Jm},registerModelTo:function(e){return Jm||tl(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:ol}=Nu;let nl=void 0,il=void 0;function al(e){return nl||function(e){const t=e.Schema,r=t.Types,o=r.Color,n=r.Mixed;nl=new t({color:o,map:n,rotation:Number,fog:Boolean,lights:Boolean})}(e),nl}function cl(e){const t=ol.getModelFrom(e);il=t.discriminator("SpriteMaterial",al(e))}var sl={getSchemaFrom:al,getModelFrom:function(e){return il||cl(e),il},registerModelTo:function(e){return il||cl(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Core/Box2
 *
 * @description The database counterpart of Three.Box2
 */let dl=void 0;var ul={getSchemaFrom:function(e){return dl||function(e){const t=e.Schema,r=t.Types.Vector2;dl=new t({min:r,max:r},{_id:!1,id:!1})}(e),dl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */let ml=void 0;var ll={getSchemaFrom:function(e){return ml||function(e){const t=e.Schema,r=t.Types.Vector3;ml=new t({min:r,max:r},{_id:!1,id:!1})}(e),ml},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Face3
 *
 * @description Todo...
 */let fl=void 0;var hl={getSchemaFrom:function(e){return fl||function(e){const t=e.Schema,r=t.Types.Vector3;fl=new t({start:r,end:r},{_id:!1,id:!1})}(e),fl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Core/Vector3
 *
 * @description The database counterpart of Three.Vector3
 */let gl=void 0;var pl={getSchemaFrom:function(e){return gl||function(e){const t=e.Schema,r=t.Types.Vector3;gl=new t({normal:r,constant:Number},{_id:!1,id:!1})}(e),gl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Core/Vector3
 *
 * @description The database counterpart of Three.Vector3
 */let vl=void 0;var Sl={getSchemaFrom:function(e){return vl||function(e){const t=e.Schema,r=t.Types.Vector3;vl=new t({origin:r,direction:r},{_id:!1,id:!1})}(e),vl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Core/Vector3
 *
 * @description The database counterpart of Three.Vector3
 */let Ml=void 0;var yl={getSchemaFrom:function(e){return Ml||function(e){const t=e.Schema,r=t.Types.Vector3;Ml=new t({center:r,radius:Number},{_id:!1,id:!1})}(e),Ml},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Core/Vector3
 *
 * @description The database counterpart of Three.Vector3
 */let bl=void 0;var Fl={getSchemaFrom:function(e){return bl||function(e){const t=e.Schema;bl=new t({radius:Number,phi:Number,theta:Number},{_id:!1,id:!1})}(e),bl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Core/Vector3
 *
 * @description The database counterpart of Three.Vector3
 */let wl=void 0;var Tl={getSchemaFrom:function(e){return wl||function(e){const t=e.Schema,r=t.Types.Vector3;wl=new t({a:r,b:r,c:r},{_id:!1,id:!1})}(e),wl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:_l}=_;let Nl=void 0,Bl=void 0;function Ol(e){return Nl||function(e){const t=e.Schema;Nl=new t({})}(e),Nl}function Il(e){const t=_l.getModelFrom(e);Bl=t.discriminator("Bone",Ol(e))}var xl={getSchemaFrom:Ol,getModelFrom:function(e){return Bl||Il(e),Bl},registerModelTo:function(e){return Bl||Il(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */let Dl=void 0,Cl=void 0;function El(e){return Dl||function(e){const t=e.Schema;Dl=new t({})}(e),Dl}function Al(e){const t=T.getModelFrom(e);Cl=t.discriminator("Group",El(e))}const jl={getSchemaFrom:El,getModelFrom:function(e){return Cl||Al(e),Cl},registerModelTo:function(e){return Cl||Al(e),e}},{Object3D:Ll}=_;
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */let Pl=void 0,Gl=void 0;function Vl(e){return Pl||function(e){const t=e.Schema;Pl=new t({})}(e),Pl}function $l(e){const t=Ll.getModelFrom(e);Gl=t.discriminator("ImmediateRenderObject",Vl(e))}var Ul={getSchemaFrom:Vl,getModelFrom:function(e){return Gl||$l(e),Gl},registerModelTo:function(e){return Gl||$l(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:kl}=_;let Rl=void 0,zl=void 0;function Hl(e){return Rl||function(e){const t=e.Schema,r=t.Types,o=r.ObjectId,n=r.Color,i=r.Vector3;Rl=new t({lensFlares:[{texture:o,size:Number,distance:Number,x:Number,y:Number,z:Number,scale:Number,rotation:Number,opacity:Number,color:n,blending:Number}],positionScreen:i})}(e),Rl}function Ql(e){const t=kl.getModelFrom(e);zl=t.discriminator("LensFlare",Hl(e))}var Yl={getSchemaFrom:Hl,getModelFrom:function(e){return zl||Ql(e),zl},registerModelTo:function(e){return zl||Ql(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Zl}=_;let Xl=void 0,Wl=void 0;function ql(e){return Xl||function(e){const t=e.Schema,r=t.Types.ObjectId;Xl=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),Xl}function Kl(e){const t=Zl.getModelFrom(e);Wl=t.discriminator("Line",ql(e))}var Jl={getSchemaFrom:ql,getModelFrom:function(e){return Wl||Kl(e),Wl},registerModelTo:function(e){return Wl||Kl(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:ef}=_;let tf=void 0,rf=void 0;function of(e){return tf||function(e){const t=e.Schema,r=t.Types.ObjectId;tf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),tf}function nf(e){const t=ef.getModelFrom(e);rf=t.discriminator("LineLoop",of(e))}var af={getSchemaFrom:of,getModelFrom:function(e){return rf||nf(e),rf},registerModelTo:function(e){return rf||nf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:cf}=_;let sf=void 0,df=void 0;function uf(e){return sf||function(e){const t=e.Schema,r=t.Types.ObjectId;sf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),sf}function mf(e){const t=cf.getModelFrom(e);df=t.discriminator("LineSegments",uf(e))}var lf={getSchemaFrom:uf,getModelFrom:function(e){return df||mf(e),df},registerModelTo:function(e){return df||mf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:ff}=_;let hf=void 0,gf=void 0;function pf(e){return hf||function(e){const t=e.Schema,r=t.Types.Mixed;hf=new t({levels:[r]})}(e),hf}function vf(e){const t=ff.getModelFrom(e);gf=t.discriminator("LOD",pf(e))}var Sf={getSchemaFrom:pf,getModelFrom:function(e){return gf||vf(e),gf},registerModelTo:function(e){return gf||vf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Mf}=_;let yf=void 0,bf=void 0;function Ff(e){return yf||function(e){const t=e.Schema,r=t.Types.ObjectId;yf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number})}(e),yf}function wf(e){const t=Mf.getModelFrom(e);bf=t.discriminator("Mesh",Ff(e))}var Tf={getSchemaFrom:Ff,getModelFrom:function(e){return bf||wf(e),bf},registerModelTo:function(e){return bf||wf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:_f}=_;let Nf=void 0,Bf=void 0;function Of(e){return Nf||function(e){const t=e.Schema,r=t.Types.ObjectId;Nf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"PointsMaterial"}],drawMode:Number})}(e),Nf}function If(e){const t=_f.getModelFrom(e);Bf=t.discriminator("Points",Of(e))}var xf={getSchemaFrom:Of,getModelFrom:function(e){return Bf||If(e),Bf},registerModelTo:function(e){return Bf||If(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Df}=_;let Cf=void 0,Ef=void 0;function Af(e){return Cf||function(e){const t=e.Schema,r=t.Types.ObjectId;Cf=new t({bones:[r],boneMatrices:[Number]})}(e),Cf}function jf(e){const t=Df.getModelFrom(e);Ef=t.discriminator("Skeleton",Af(e))}var Lf={getSchemaFrom:Af,getModelFrom:function(e){return Ef||jf(e),Ef},registerModelTo:function(e){return Ef||jf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Pf}=_;let Gf=void 0,Vf=void 0;function $f(e){return Gf||function(e){const t=e.Schema,r=t.Types.ObjectId;Gf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number,bindMode:String,bindMatrix:[Number],bindMatrixInverse:[Number]})}(e),Gf}function Uf(e){const t=Pf.getModelFrom(e);Vf=t.discriminator("SkinnedMesh",$f(e))}var kf={getSchemaFrom:$f,getModelFrom:function(e){return Vf||Uf(e),Vf},registerModelTo:function(e){return Vf||Uf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Rf}=_;let zf=void 0,Hf=void 0;function Qf(e){return zf||function(e){const t=e.Schema,r=t.Types.ObjectId;zf=new t({material:[{type:r,ref:"SpriteMaterial"}]})}(e),zf}function Yf(e){const t=Rf.getModelFrom(e);Hf=t.discriminator("Sprite",Qf(e))}var Zf={getSchemaFrom:Qf,getModelFrom:function(e){return Hf||Yf(e),Hf},registerModelTo:function(e){return Hf||Yf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */let Xf=void 0;var Wf={getSchemaFrom:function(e){return Xf||function(e){const t=e.Schema;Xf=new t({coordinates:{x:Number,y:Number,z:Number},orientation:{x:Number,y:Number,z:Number},thumbnail:Buffer,path:String},{_id:!1,id:!1})}(e),Xf},getModelFrom:()=>null,registerModelTo:e=>e},qf={Fog:Wf};const{Object3D:Kf}=_,{Fog:Jf}=qf;let eh=void 0,th=void 0;function rh(e){return eh||function(e){const t=Jf.getSchemaFrom(e),r=e.Schema,o=r.Types.Color;eh=new r({background:o,fog:t,overrideMaterial:String,autoUpdate:Boolean})}(e),eh}function oh(e){const t=Kf.getModelFrom(e);th=t.discriminator("Scene",rh(e))}var nh={getSchemaFrom:rh,getModelFrom:function(e){return th||oh(e),th},registerModelTo:function(e){return th||oh(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Geometry
 *
 * @description Todo...
 */let ih=void 0,ah=void 0;function ch(e){return ih||function(e){const t=e.Schema,r=t.Types,o=r.ObjectId,n=r.Vector2,i=r.Matrix3;ih=new t({uuid:String,name:String,image:o,mipmaps:[],mapping:Number,wrapS:Number,wrapT:Number,magFilter:Number,minFilter:Number,anisotropy:Number,format:Number,type:Number,offset:n,repeat:n,center:n,rotation:Number,matrixAutoUpdate:Boolean,matrix:i,generateMipmaps:Boolean,premultiplyAlpha:Boolean,flipY:Boolean,unpackAlignment:Number,encoding:Number,version:Number},{collection:"textures",discriminatorKey:"type"})}(e),ih}function sh(e){ah=e.model("Textures",ch(e)),ah.discriminator("Texture",new e.Schema({}))}var dh={getSchemaFrom:ch,getModelFrom:function(e){return ah||sh(e),ah},registerModelTo:function(e){return ah||sh(e),e}},uh={Texture:dh};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
const{Texture:mh}=uh;let lh=void 0,fh=void 0;function hh(e){return lh||function(e){const t=e.Schema;lh=new t({needsUpdate:Boolean})}(e),lh}function gh(e){const t=mh.getModelFrom(e);fh=t.discriminator("CanvasTexture",hh(e))}var ph={getSchemaFrom:hh,getModelFrom:function(e){return fh||gh(e),fh},registerModelTo:function(e){return fh||gh(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Texture:vh}=uh;let Sh=void 0,Mh=void 0;function yh(e){return Sh||function(e){const t=e.Schema;Sh=new t({})}(e),Sh}function bh(e){const t=vh.getModelFrom(e);Mh=t.discriminator("CompressedTexture",yh(e))}var Fh={getSchemaFrom:yh,getModelFrom:function(e){return Mh||bh(e),Mh},registerModelTo:function(e){return Mh||bh(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Texture:wh}=uh;let Th=void 0,_h=void 0;function Nh(e){return Th||function(e){const t=e.Schema;Th=new t({})}(e),Th}function Bh(e){const t=wh.getModelFrom(e);_h=t.discriminator("CubeTexture",Nh(e))}var Oh={getSchemaFrom:Nh,getModelFrom:function(e){return _h||Bh(e),_h},registerModelTo:function(e){return _h||Bh(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Texture:Ih}=uh;let xh=void 0,Dh=void 0;function Ch(e){return xh||function(e){const t=e.Schema;xh=new t({})}(e),xh}function Eh(e){const t=Ih.getModelFrom(e);Dh=t.discriminator("DataTexture",Ch(e))}var Ah={getSchemaFrom:Ch,getModelFrom:function(e){return Dh||Eh(e),Dh},registerModelTo:function(e){return Dh||Eh(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Texture:jh}=uh;let Lh=void 0,Ph=void 0;function Gh(e){return Lh||function(e){const t=e.Schema;Lh=new t({})}(e),Lh}function Vh(e){const t=jh.getModelFrom(e);Ph=t.discriminator("DepthTexture",Gh(e))}var $h={getSchemaFrom:Gh,getModelFrom:function(e){return Ph||Vh(e),Ph},registerModelTo:function(e){return Ph||Vh(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Texture:Uh}=uh;let kh=void 0,Rh=void 0;function zh(e){return kh||function(e){const t=e.Schema;kh=new t({})}(e),kh}function Hh(e){const t=Uh.getModelFrom(e);Rh=t.discriminator("VideoTexture",zh(e))}var Qh={getSchemaFrom:zh,getModelFrom:function(e){return Rh||Hh(e),Rh},registerModelTo:function(e){return Rh||Hh(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [MIT]{@link https://opensource.org/licenses/MIT}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
var Yh=(new r.TMongoDBPlugin).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Color")}cast(t){if(a.isNotDefined(t))throw new e.SchemaType.CastError(`Color: ${t} is null or undefined`);if(a.isNotObject(t)&&!t.isColor)throw new e.SchemaType.CastError(`Color: ${t} is not a object or Color instance`);if(!("r"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain r property`);if(a.isNotNumber(t.r))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("g"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain g property`);if(a.isNotNumber(t.g))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("b"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain b property`);if(a.isNotNumber(t.b))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);return{r:t.r,g:t.g,b:t.b}}}return t.COLOR_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Color=t,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Euler")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(a.isNotDefined(e))throw new Error(`Euler: ${e} is null or undefined`);if(a.isNotObject(e)&&!e.isEuler)throw new Error(`Euler: ${e} is not a object or Euler instance`);if(!("x"in e))throw new Error(`Euler: ${e} does not contain x property`);if(a.isNotNumber(e.x))throw new Error(`Euler: ${e} expected x to be a number`);if(!("y"in e))throw new Error(`Euler: ${e} does not contain y property`);if(a.isNotNumber(e.y))throw new Error(`Euler: ${e} expected y to be a number`);if(!("z"in e))throw new Error(`Euler: ${e} does not contain z property`);if(a.isNotNumber(e.z))throw new Error(`Euler: ${e} expected z to be a number`);if(!("order"in e))throw new Error(`Euler: ${e} does not contain order property`);if(a.isNotString(e.order))throw new Error(`Euler: ${e} expected order to be a string`);if(!["XYZ","YZX","ZXY","XZY","YXZ","ZYX"].includes(e.order.toUpperCase()))throw new Error(`Euler: ${e} expected order to be a string in ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX']`);return{x:e.x,y:e.y,z:e.z,order:e.order.toUpperCase()}}}),r.Euler=o,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Matrix3")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(a.isNotDefined(e))throw new Error(`Matrix3: ${e} is null or undefined`);if(a.isNotArray(e)&&!e.isMatrix3)throw new Error(`Matrix3: ${e} is not a object or Matrix3 instance`);let t=void 0;t=e.isMatrix3?e.toArray():e;const r=t.length;if(9!==r)throw new Error(`Matrix3: ${e} does not contain the right number of values. Expect 9 values and found ${r}`);for(let o=0,n=void 0;o<r;o++){if(n=t[o],a.isNotNumber(n))throw new Error(`Matrix3: ${e} does not seem to contain right values. Expect values in range 0 and 1.`);if(a.isNaN(n))throw new Error(`Matrix3: ${e} does not seem to contain right values. Expect values in range 0 and 1.`)}return t}}),r.Matrix3=o,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Matrix4")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(a.isNotDefined(e))throw new Error(`Matrix4: ${e} is null or undefined`);if(a.isNotArray(e)&&!e.isMatrix4)throw new Error(`Matrix4: ${e} is not a object or Matrix4 instance`);let t=void 0;t=e.isMatrix4?e.toArray():e;const r=t.length;if(16!==r)throw new Error(`Matrix4: ${e} does not contain the right number of values. Expect 9 values and found ${r}`);for(let o=0,n=void 0;o<r;o++){if(n=t[o],a.isNotNumber(n))throw new Error(`Matrix4: ${e} does not seem to contain right values. Expect values in range 0 and 1.`);if(a.isNaN(n))throw new Error(`Matrix4: ${e} does not seem to contain right values. Expect values in range 0 and 1.`)}return t}}),r.Matrix4=o,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Quaternion")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(a.isNotDefined(e))throw new Error(`Quaternion: ${e} is null or undefined`);if(!("x"in e))throw new Error(`Quaternion: ${e} does not contain x property`);if(a.isNotNumber(e.x))throw new Error(`Quaternion: ${e} expected to be a number`);if(!("y"in e))throw new Error(`Quaternion: ${e} does not contain y property`);if(a.isNotNumber(e.y))throw new Error(`Quaternion: ${e} expected to be a number`);if(!("z"in e))throw new Error(`Quaternion: ${e} does not contain z property`);if(a.isNotNumber(e.z))throw new Error(`Quaternion: ${e} expected to be a number`);if(!("w"in e))throw new Error(`Quaternion: ${e} does not contain w property`);if(a.isNotNumber(e.w))throw new Error(`Quaternion: ${e} expected to be a number`);return{x:e.x,y:e.y,z:e.z,w:e.w}}}),r.Quaternion=o,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Vector2")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(a.isNotDefined(e))throw new Error(`Vector2: ${e} is null or undefined`);if(a.isNotObject(e)&&!e.isVector2)throw new Error(`Vector2: ${e} is not a object or Vector2 instance`);if(!("x"in e))throw new Error(`Vector2: ${e} does not contain x property`);if(a.isNotNumber(e.x))throw new Error(`Vector2: ${e} expected to be a number`);if(!("y"in e))throw new Error(`Vector2: ${e} does not contain y property`);if(a.isNotNumber(e.y))throw new Error(`Vector2: ${e} expected to be a number`);return{x:e.x,y:e.y}}}),r.Vector2=o,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Vector3")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(a.isNotDefined(e))throw new Error(`Vector3: ${e} is null or undefined`);if(a.isNotObject(e)&&!e.isVector3)throw new Error(`Vector3: ${e} is not a object or Vector3 instance`);if(!("x"in e))throw new Error(`Vector3: ${e} does not contain x property`);if(a.isNotNumber(e.x))throw new Error(`Vector3: ${e} expected to be a number`);if(!("y"in e))throw new Error(`Vector3: ${e} does not contain y property`);if(a.isNotNumber(e.y))throw new Error(`Vector3: ${e} expected to be a number`);if(!("z"in e))throw new Error(`Vector3: ${e} does not contain z property`);if(a.isNotNumber(e.z))throw new Error(`Vector3: ${e} expected to be a number`);return{x:e.x,y:e.y,z:e.z}}}),r.Vector3=o,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Vector4")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(a.isNotDefined(e))throw new Error(`Vector4: ${e} is null or undefined`);if(a.isNotObject(e)&&!e.isVector4)throw new Error(`Vector4: ${e} is not a object or Vector4 instance`);if(!("x"in e))throw new Error(`Vector4: ${e} does not contain x property`);if(a.isNotNumber(e.x))throw new Error(`Vector4: ${e} expected to be a number`);if(!("y"in e))throw new Error(`Vector4: ${e} does not contain y property`);if(a.isNotNumber(e.y))throw new Error(`Vector4: ${e} expected to be a number`);if(!("z"in e))throw new Error(`Vector4: ${e} does not contain z property`);if(a.isNotNumber(e.z))throw new Error(`Vector4: ${e} expected to be a number`);if(!("w"in e))throw new Error(`Vector4: ${e} does not contain w property`);if(a.isNotNumber(e.w))throw new Error(`Vector4: ${e} expected to be a number`);return{x:e.x,y:e.y,z:e.z,w:e.w}}}),r.Vector4=o,e})).addSchema(D).addSchema(P).addSchema(R).addSchema(X).addSchema(te).addSchema(ce).addSchema(fe).addSchema(Me).addSchema(Ce).addSchema(Ve).addSchema(Ke).addSchema(et).addSchema(it).addSchema(T).addSchema(lt).addSchema(St).addSchema(Tt).addSchema(xt).addSchema(Lt).addSchema(kt).addSchema(He).addSchema(Zt).addSchema(er).addSchema(ar).addSchema(lr).addSchema(Sr).addSchema(Tr).addSchema(xr).addSchema(Lr).addSchema(kr).addSchema(Zr).addSchema(eo).addSchema(ao).addSchema(fo).addSchema(Mo).addSchema(_o).addSchema(Do).addSchema(Po).addSchema(Ro).addSchema(Xo).addSchema(tn).addSchema(sn).addSchema(hn).addSchema(yn).addSchema(Nn).addSchema(Cn).addSchema(Gn).addSchema(zn).addSchema(Wn).addSchema(ri).addSchema(si).addSchema(hi).addSchema(yi).addSchema(Ni).addSchema(Ci).addSchema(Gi).addSchema(zi).addSchema(Wi).addSchema(ra).addSchema(sa).addSchema(ha).addSchema(ya).addSchema(Na).addSchema(Ca).addSchema(Ga).addSchema(za).addSchema(Wa).addSchema(rc).addSchema(sc).addSchema(hc).addSchema(yc).addSchema(Nc).addSchema(Cc).addSchema(Gc).addSchema(zc).addSchema(Wc).addSchema(rs).addSchema(ss).addSchema(hs).addSchema(ys).addSchema(Ns).addSchema(Cs).addSchema(Gs).addSchema(zs).addSchema(Ws).addSchema(rd).addSchema(sd).addSchema(hd).addSchema(yd).addSchema(Nd).addSchema(Cd).addSchema(Gd).addSchema(zd).addSchema(Wd).addSchema(ru).addSchema(su).addSchema(hu).addSchema(yu).addSchema(hm).addSchema(Cu).addSchema(Gu).addSchema(_u).addSchema(zu).addSchema(Wu).addSchema(rm).addSchema(sm).addSchema(ym).addSchema(Nm).addSchema(Cm).addSchema(Gm).addSchema(zm).addSchema(Wm).addSchema(rl).addSchema(sl).addSchema(ul).addSchema(ll).addSchema(hl).addSchema(pl).addSchema(Sl).addSchema(yl).addSchema(Fl).addSchema(Tl).addSchema(xl).addSchema(jl).addSchema(Ul).addSchema(Yl).addSchema(Jl).addSchema(af).addSchema(lf).addSchema(Sf).addSchema(Tf).addSchema(xf).addSchema(Lf).addSchema(kf).addSchema(Zf).addSchema(Wf).addSchema(nh).addSchema(ph).addSchema(Fh).addSchema(Oh).addSchema(Ah).addSchema($h).addSchema(dh).addSchema(Qh).addController(r.TMongooseController).addDescriptor({route:"/objects",controller:{name:"TMongooseController",options:{schemaName:"Objects3D"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/curves",controller:{name:"TMongooseController",options:{schemaName:"Curves"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/geometries",controller:{name:"TMongooseController",options:{schemaName:"Geometries"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/materials",controller:{name:"TMongooseController",options:{schemaName:"Materials"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/textures",controller:{name:"TMongooseController",options:{schemaName:"Textures"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addController(t.TAbstractConverterManager).addDescriptor({route:"/uploads",controller:{name:"TAbstractConverterManager",options:{useNext:!0,converters:{JsonToThree:new g,ShpToThree:new y,DbfToThree:new f,FbxToThree:new h,ColladaToThree:new d,StlToThree:new b,TdsToThree:new F,MtlToThree:new p,ObjToThree:new v},rules:[{on:".json",use:"JsonToThree"},{on:".dae",use:"ColladaToThree"},{on:".fbx",use:"FbxToThree"},{on:".stl",use:"StlToThree"},{on:".3ds",use:"TdsToThree"},{on:".shp",use:"ShpToThree"},{on:".dbf",use:"DbfToThree"},{on:[".shp",".dbf"],use:["ShpToThree","DbfToThree"]},{on:".mtl",use:"MtlToThree"},{on:".obj",use:"ObjToThree"},{on:[".mtl",".obj"],use:["MtlToThree","ObjToThree"]}],inserter:w},can:{processFiles:{on:"post",over:"/"}}}});module.exports=Yh;
