"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("itee-database"),t=require("itee-mongodb"),r=require("itee-validators"),n=require("three-full"),o=require("itee-client"),i=require("itee-core"),a=require("itee-utils"),s=require("bson");function c(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var d=c(r);
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @see [IFC Standard]{@link http://standards.buildingsmart.org/IFC/RELEASE/IFC4_1/FINAL/HTML/}
 *
 */class l extends t.TMongooseController{constructor(e={}){super(e)}async _readOneDocument(e,t){if(r.isNotDefined(e)||r.isNotDefined(t))return null;const n=await this._driver.model(e).findOne(t).exec();return r.isDefined(n)?n._doc:null}async _readManyDocument(e,t,n){if(r.isNotDefined(e)||r.isNotDefined(t))return null;return(await this._driver.model(e).find(t,n).lean().exec()).map(e=>e._doc)}async _updateDocument(e,t,n){if(r.isNotDefined(e))return null;return await this._driver.model(e.type).findByIdAndUpdate(e._id,t,n).exec()}async getAllChildrenIds(e,t=!1){const n={children:[],geometries:[],materials:[]},o=[],i=await this._readManyDocument("Objects3D",{parent:e},{_id:!0,geometry:!0,material:!0,children:!0});for(let e=0,a=i.length;e<a;e++){const a=i[e],s=a._id.toString();r.isDefined(s)&&n.children.push(s);const c=a.geometry;r.isDefined(c)&&n.geometries.push(c.toString());const d=a.material;if(d){const e=r.isArray(d)?d.map(e=>e.toString()):[d.toString()];n.materials.push(...e)}if(a.children){const e=this.getAllChildrenIds(s,t);o.push(e)}}if(o.length>0){const e=await Promise.all(o);for(let t=0,r=e.length;t<r;t++){const r=e[t];n.children.push(...r.children),n.geometries.push(...r.geometries),n.materials.push(...r.materials)}}return n}async _deleteOne(e,r){try{const n="allInOneByParentId";if("oneByOne"===n);else if("allInOneByParentId"===n){const n=await this.getAllChildrenIds(e,!0);n.children.push(e);const o={children:[...new Set(n.children)],geometries:[...new Set(n.geometries)],materials:[...new Set(n.materials)]},[i,a,s]=await Promise.all([this._deleteDocuments("Objects3D",o.children),this._deleteDocuments("Geometries",o.geometries),this._deleteDocuments("Materials",o.materials)]);t.TMongooseController.returnData({deletedObjectsCount:i,deletedGeometriesResult:a,deletedMaterialsResult:s},r)}}catch(e){t.TMongooseController.returnError(e,r)}}async _deleteDocuments(e,t){if(r.isEmptyArray(t))return 0;return(await this._driver.model(e).deleteMany({_id:{$in:t}}).exec()).deletedCount}async _deleteDocument(e){if(r.isNotDefined(e))return null;const t=await this._driver.model(e.type).findByIdAndDelete(e._id).exec();return t&&t._doc?t._doc._id:null}async _removeParentReference(e){const t=e.parent;if(r.isNotDefined(t))return null;const n=await this._readOneDocument("Objects3D",{_id:t}),o=n.children,i=o.indexOf(e._id);o.splice(i,1);return await this._updateDocument(n,{$set:{children:o}})}async _removeChildrenDocuments(e){let t=[];for(let r=e.length-1;r>=0;r--)t.push(this._removeChildDocument(e[r]));return Promise.all(t)}async _removeChildDocument(e){const t=await this._readManyDocument("Objects3D",{parent:e._id}),r=await this._removeChildrenDocuments(t),n=await this._removeOrphanGeometryWithId(e.geometry),o=await this._removeOrphanMaterialsWithIds(e.material||[]);return{object:await this._deleteDocument(e),children:r,geometry:n,materials:o}}async _removeOrphanGeometryWithId(e){if(r.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{geometry:e})).length>1)return;const t=await this._readOneDocument("Geometries",{_id:e});return await this._deleteDocument(t)}async _removeOrphanMaterialsWithIds(e){if(r.isNotDefined(e))return;if(r.isEmptyArray(e))return;const t=[];for(let r=0,n=e.length;r<n;r++)t.push(this._removeOrphanMaterialWithId(e[r]));return Promise.all(t)}async _removeOrphanMaterialWithId(e){if(r.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{material:e})).length>1)return;const t=await this._readOneDocument("Materials",{_id:e});return await this._deleteDocument(t)}}
/**
 * @module Converters/ColladaToThree
 * @desc Export JsonToThree converter class about .dae files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class u extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.ColladaLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Loader/DBFLoader
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * From:
 * https://www.clicketyclick.dk/databases/xbase/format/db2_dbf.html#DBII_DBF_STRUCT
 * http://web.archive.org/web/20150323061445/http://ulisse.elettra.trieste.it/services/doc/dbase/DBFstruct.htm
 * http://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm
 *
 *
 */const m=a.toEnum({FoxPro:48,FoxPro_Autoincrement:49,dBASE_II:2,FoxPro_Var:50,dBASE_III_plus:3,dBASE_III_plus_memo:131,dBASE_IV_SQL_table:67,dBASE_IV_SQL_system:99,dBASE_IV_memo:139,dBASE_IV_memo_SQL_table:203,FoxBase:251,dBase_v_7:4,FoxPro_2_x:245,HiPerSix_memo:229}),h=a.toEnum({Binary:"B",Character:"C",Date:"D",Numeric:"N",Logical:"L",Memo:"M",Timestamp:"@",Long:"I",Autoincrement:"+",Float:"F",Double:"O",OLE:"G"});class g{constructor(e={}){const t={manager:n.DefaultLoadingManager,logger:i.DefaultLogger,reader:new o.TBinaryReader,...e};this.manager=t.manager,this.logger=t.logger,this.reader=t.reader}get manager(){return this._manager}set manager(e){this._manager=e}get logger(){return this._logger}set logger(e){this._logger=e}get reader(){return this._reader}set reader(e){this._reader=e}setManager(e){return this.manager=e,this}setLogger(e){return this.logger=e,this}setReader(e){return this.reader=e,this}load(e,t,r,o){const i=this,a=new n.FileLoader(i.manager);a.setResponseType("arraybuffer"),a.load(e,e=>{t(i.parse(e))},r,o)}parse(e){this.reader.setEndianess(o.Endianness.Big).setBuffer(e);const t=this.reader.getInt8();if(!this._isValidVersion(t))return this.logger.error(`DBFLoader: Invalid version number: ${t}`),null;const r=this._parseHeader(t);return{header:r,datas:this._parseDatas(t,r)}}_isValidVersion(e){return m.includes(e)}_parseHeader(e){let t={};switch(e){case m.FoxPro:case m.FoxPro_Autoincrement:case m.FoxPro_Var:case m.dBASE_II:t=this._parseHeaderV2();break;case m.dBASE_III_plus:case m.dBASE_III_plus_memo:t=this._parseHeaderV2_5();break;case m.dBASE_IV_memo:case m.dBASE_IV_memo_SQL_table:case m.dBASE_IV_SQL_system:case m.dBASE_IV_SQL_table:t=this._parseHeaderV3();break;case m.dBase_v_7:case m.FoxPro_2_x:case m.HiPerSix_memo:t=this._parseHeaderV4();break;default:throw new RangeError(`Invalid version parameter: ${e}`)}return this.reader.getUint8()!==g.Terminator&&this.logger.error("DBFLoader: Invalid terminator after field descriptors !!!"),t}_parseHeaderV2(){const e=this.reader.getInt16(),t=this.reader.getInt8()+g.YearOffset,r=this.reader.getInt8(),n=this.reader.getInt8(),o=this.reader.getInt16();let i,a,s,c,d,l=[];for(let t=0;t<e;t++)i=this.reader.getString(11),a=this.reader.getChar(),s=this.reader.getUint8(),c=this.reader.getInt16(),d=this.reader.getInt8(),l.push({name:i,type:a,length:s,memoryAddress:c,decimalCount:d});return{numberOfRecords:e,year:t,month:r,day:n,lengthOfEachRecords:o,fields:l}}_parseHeaderV2_5(){const e=this.reader.getInt8()+g.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(o.Endianness.Little);const n=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(o.Endianness.Big),this.reader.skipOffsetOf(20);let s,c,d,l,u,m,h,f=[];for(let e=0;e<n;e++)s=this.reader.getString(11),c=this.reader.getChar(),l=this.reader.getInt32(),d=this.reader.getUint8(),u=this.reader.getUint8(),this.reader.skipOffsetOf(2),m=this.reader.getInt8(),this.reader.skipOffsetOf(2),h=this.reader.getInt8(),this.reader.skipOffsetOf(1),f.push({name:s,type:c,length:d,memoryAddress:l,decimalCount:u,workAreaId:m,MDXFlag:h});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:i,numberOfByteInRecord:a,fields:f}}_parseHeaderV3(){const e=this.reader.getInt8()+g.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(o.Endianness.Little);const n=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(o.Endianness.Big),this.reader.skipOffsetOf(2);const s=this.reader.getInt8(),c=this.reader.getInt8();this.reader.skipOffsetOf(12);const d=this.reader.getInt8(),l=this.reader.getInt8();this.reader.skipOffsetOf(2);let u,m,h,f,p,_,S=[];for(;this.reader.getOffset()<i-1;)u=this.reader.getString(11),m=this.reader.getChar(),this.reader.skipOffsetOf(4),h=this.reader.getUint8(),f=this.reader.getUint8(),this.reader.skipOffsetOf(2),p=this.reader.getInt8(),this.reader.skipOffsetOf(10),_=this.reader.getInt8(),S.push({name:u,type:m,length:h,decimalCount:f,workAreaId:p,MDXFieldFlag:_});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:i,numberOfByteInRecord:a,incompleteTransactionFlag:s,encryptionFlag:c,MDXFlag:d,languageDriverId:l,fields:S}}_parseHeaderV4(){const e=this.reader.getInt8()+g.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(o.Endianness.Little);const n=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(o.Endianness.Big),this.reader.skipOffsetOf(2);const s=this.reader.getInt8(),c=this.reader.getInt8();this.reader.skipOffsetOf(12);const d=this.reader.getInt8(),l=this.reader.getInt8();this.reader.skipOffsetOf(2);const u=this.reader.getString(32);this.reader.skipOffsetOf(4);let m,h,f,p,_,S,y=[];for(let e=0;e<n;e++)m=this.reader.getString(32),h=this.reader.getChar(),f=this.reader.getUint8(),p=this.reader.getUint8(),this.reader.skipOffsetOf(2),_=this.reader.getInt8(),this.reader.skipOffsetOf(2),S=this.reader.getInt32(),this.reader.skipOffsetOf(4),y.push({name:m,type:h,length:f,decimalCount:p,MDXFieldFlag:_,nextAutoincrementValue:S});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:i,numberOfByteInRecord:a,incompleteTransactionFlag:s,encryptionFlag:c,MDXFlag:d,languageDriverId:l,languageDriverName:u,fields:y}}_parseDatas(e,t){const r=t.numberOfRecords,n=t.fields;let o=[],i=null,a=null;for(let e=0;e<r;e++){i={},i.deleted=this.reader.getUint8()===g.DeletedRecord;for(let e=0,t=n.length;e<t;e++)switch(a=n[e],a.type){case h.Binary:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case h.Numeric:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case h.Character:case h.Date:i[a.name]=this.reader.getString(a.length);break;case h.Logical:{const e=this.reader.getChar().toLowerCase();i[a.name]="t"===e||"y"===e||"f"!==e&&"n"!==e&&null}break;case h.Memo:i[a.name]=this.reader.getString(a.length);break;case h.Timestamp:break;case h.Long:case h.Autoincrement:i[a.name]=this.reader.getInt32();break;case h.Float:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case h.Double:i[a.name]=this.reader.getFloat64();break;case h.OLE:i[a.name]=this.reader.getString(a.length);break;default:throw new RangeError(`Invalid data type parameter: ${a.type}`)}o.push(i)}return o}_parseFieldProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt16(),n=this.reader.getInt16(),o=this.reader.getInt16(),i=this.reader.getInt16(),a=this.reader.getInt16(),s=this.reader.getInt16();let c=[];for(let t=0;t<e;t++)c.push(this._getStandardProperties());let d=[];for(let e=0;e<r;e++)d.push(this._getCustomProperties());let l=[];for(let e=0;e<o;e++)l.push(this._getReferentialIntegrityProperties());return{numberOfStandardProperties:e,startOfStandardPropertiesDescriptor:t,numberOfCustomProperties:r,startOfCustomPropertiesDescriptor:n,numberOfReferentialIntegrityProperties:o,startOfReferentialIntegrityDescriptor:i,startOfData:a,sizeOfPropertiesStructure:s,standardProperties:c,customProperties:d,referentialIntegrityProperties:l}}_getStandardProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8(),n=this.reader.getInt8(),o=this.reader.getInt8();this.reader.skipOffsetOf(4);return{generationalNumber:e,tableFieldOffset:t,propertyDescribed:r,type:n,isConstraint:o,offsetFromStart:this.reader.getInt16(),widthOfDatabaseField:this.reader.getInt16()}}_getCustomProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8();this.reader.skipOffsetOf(1);return{generationalNumber:e,tableFieldOffset:t,type:r,offsetFromStartOfName:this.reader.getInt16(),lengthOfName:this.reader.getInt16(),offsetFromStartOfData:this.reader.getInt16(),lengthOfData:this.reader.getInt16()}}_getReferentialIntegrityProperties(){return{databaseState:this.reader.getInt8(),sequentialNumberRule:this.reader.getInt16(),offsetOfTheRIRuleName:this.reader.getInt16(),sizeOfTheRIRuleName:this.reader.getInt16(),offsetOfNameOfForeignTable:this.reader.getInt16(),sizeOfNameOfForeignTable:this.reader.getInt16(),stateBehaviour:this.reader.getInt8(),numberOfFieldsInLinkingKey:this.reader.getInt16(),offsetOfLocalTableTagName:this.reader.getInt16(),sizeOfTheLocalTableTagName:this.reader.getInt16(),offsetOfForeignTableTagName:this.reader.getInt16(),sizeOfTheForeignTableTagName:this.reader.getInt16()}}}g.Terminator=13,g.DeletedRecord=26,g.YearOffset=1900;
/**
 * @module Converters/DbfToThree
 * @desc Export JsonToThree converter class about .dbf files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link module:Loader/DBFLoader Loader/DBFLoader}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class f extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new g;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/FbxToThree
 * @desc Export JsonToThree converter class about .fbx files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class p extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.FBXLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Converters/JsonToThree
 * @desc Export JsonToThree converter class about .json files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class _ extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.ObjectLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Converters/MtlToThree
 * @desc Export JsonToThree converter class about .mtl files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class S extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.String})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.MTLLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Converters/Obj2ToThree
 * @desc Export JsonToThree converter class about .obj files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class y extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.OBJLoader2;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Loader/SHPLoader
 * @desc Export SHPLoader to load .shp files
 *
 * @requires {@link https://github.com/Itee/itee-client itee-client}
 * @requires {@link https://github.com/Itee/itee-utils itee-utils}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 * @example Todo...
 *
 */const F=a.toEnum({NullShape:0,Point:1,Polyline:3,Polygon:5,MultiPoint:8,PointZ:11,PolyLineZ:13,PolygonZ:15,MultiPointZ:18,PointM:21,PolylineM:23,PolygonM:25,MultiPointM:28,MultiPatch:31});class M{constructor(e={}){const t={manager:n.DefaultLoadingManager,logger:i.DefaultLogger,reader:new o.TBinaryReader,globalOffset:new n.Vector3(0,0,0),worldAxis:{from:"zUp",to:"zForward"},...e};this.manager=t.manager,this.logger=t.logger,this.reader=t.reader,this.globalOffset=t.globalOffset,this.worldAxis=t.worldAxis}get globalOffset(){return this._globalOffset}set globalOffset(e){this._globalOffset=e}get worldAxis(){return this._worldAxis}set worldAxis(e){this._worldAxis=e}get manager(){return this._manager}set manager(e){this._manager=e}get logger(){return this._logger}set logger(e){this._logger=e}get reader(){return this._reader}set reader(e){this._reader=e}setGlobalOffset(e){return this.globalOffset=e,this}setWorldAxis(e){return this.worldAxis=e,this}setManager(e){return this.manager=e,this}setLogger(e){return this.logger=e,this}setReader(e){return this.reader=e,this}load(e,t,r,o){const i=this,a=new n.FileLoader(i.manager);a.setResponseType("arraybuffer"),a.load(e,e=>{t(i.parse(e))},r,o)}parse(e){this._reader.setEndianess(o.Endianness.Big).setBuffer(e);const t=this._parseHeader();if(t.fileCode!==M.FileCode)return this.logger.error("SHPLoader: Invalide Shape file code !"),null;if(t.fileLength<M.MinFileLength)return this.logger.error("SHPLoader: Shape file have an incorrect length !"),null;if(!Object.values(F).includes(t.shapeType))return this.logger.error("SHPLoader: Shape file have an incorrect shape type !"),null;t.version<M.MinVersion&&this.logger.warn("SHPLoader: Version of shape file below than 1000 could be incorrectly parsed !");const r=this._parseDatas(t);return this._convertToObjects(r)}_parseHeader(){const e=this._reader.getInt32();this._reader.skipOffsetOf(20);const t=this._reader.getInt32();this._reader.setEndianess(o.Endianness.Little);const r=this._reader.getInt32(),n=this._reader.getInt32(),i=this._reader.getInt32(),a=this._reader.getInt32();return{fileCode:e,fileLength:t,version:r,shapeType:n,boundingBox:{xMin:i,xMax:this._reader.getInt32(),yMin:a,yMax:this._reader.getInt32(),zMin:this._reader.getInt32(),zMax:this._reader.getInt32(),mMin:this._reader.getInt32(),mMax:this._reader.getInt32()}}}_parseDatas(e){this._reader.skipOffsetTo(100);let t,r,n,i=[];for(;!this._reader.isEndOfFile();)switch(t=this._parseRecordHeader(),r=this._reader.getOffset()+2*t.contentLength,this._reader.setEndianess(o.Endianness.Little),e.shapeType){case F.NullShape:this._reader.skipOffsetTo(r);break;case F.Point:case F.PointZ:case F.PointM:for(;this._reader.getOffset()<r;)n=this._parsePoint(),n&&i.push(n);break;case F.Polyline:case F.PolyLineZ:case F.PolylineM:for(;this._reader.getOffset()<r;)n=this._parsePolyLine(),n&&i.push(n);break;case F.Polygon:case F.PolygonZ:case F.PolygonM:for(;this._reader.getOffset()<r;)n=this._parsePolyLine(),n&&i.push(n);break;case F.MultiPoint:case F.MultiPointZ:case F.MultiPointM:for(;this._reader.getOffset()<r;)n=this._parseMultiPoint(),n&&i.push(n);break;case F.MultiPatch:for(;this._reader.getOffset()<r;)n=this._parseMultiPatch(),n&&i.push(n);break;default:this.logger.error(`SHPLoader: Invalid switch parameter: ${e.shapeType}`)}return i}_parseRecordHeader(){this._reader.setEndianess(o.Endianness.Big);return{recordNumber:this._reader.getInt32(),contentLength:this._reader.getInt32()}}_parseNull(){return this._reader.getInt32(),null}_parsePoint(){const e=this._reader.getInt32();if(e===F.NullShape)return null;return{shapeType:e,x:this._reader.getFloat64(),y:this._reader.getFloat64()}}_parsePolyLine(){const e=this._reader.getInt32();if(e===F.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=this._reader.getInt32(),o=new Array(r);for(let e=0;e<r;e++)o[e]=this._reader.getInt32();const i=new Array(n);for(let e=0;e<n;e++)i[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};return{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:n,parts:o,points:i}}_parsePolygon(){const e=this._reader.getInt32();if(e===F.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=this._reader.getInt32();let o=new Array(r);for(let e=0;e<r;e++)o[e]=this._reader.getInt32();let i=new Array(n);for(let e=0;e<n;e++)i[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};const s=[],c=[];return o.forEach((e,t)=>{const r=i.slice(e,o[t+1]);a.ringClockwise(r)?s.push(r):c.push(r)}),c.forEach(e=>{s.some(t=>{if(a.ringContainsSome(t[0],e))return t.push(e),!0})||s.push([e])}),{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:n,parts:o,polygons:s}}_parseMultiPoint(){const e=this._reader.getInt32();if(e===F.NullShape)return null;const t={xMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMin:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=new Array(r);for(let e=0;e<r;e++)n.push([this._reader.getFloat64(),this._reader.getFloat64()]);return{shapeType:e,boundingBox:t,numberOfPoints:r,points:n}}_parseMultiPatch(){const e=this._reader.getInt32();return e===F.NullShape?null:{shapeType:e}}_convertToObjects(e){let t=[];for(let t=0,n=e.length;t<n;t++){let n=e[t];n.shapeType!==F.Polygon&&n.shapeType!==F.PolygonZ&&n.shapeType!==F.PolygonM||(n.points&&Array.isArray(n.points[0])?r(n.points):o(n.points))}function r(e){for(let t=0,n=e.length;t<n;t++){let n=e[t];n?Array.isArray(n[0])?r(n):o(n):this.logger.log("no array, oups !")}}function o(e){t.push(new n.Shape(e))}return t}}M.FileCode=9994,M.MinFileLength=100,M.MinVersion=1e3;
/**
 * @module Converters/ShpToThree
 * @desc Export JsonToThree converter class about .shp files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link module:Loader/SHPLoader Loader/SHPLoader}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class b extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new M;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/StlToThree
 * @desc Export JsonToThree converter class about .stl files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class w extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.STLLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Converters/TdsToThree
 * @desc Export JsonToThree converter class about .3ds files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class T extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.TDSLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Inserters/ThreeToMongoDB
 * @desc Export ThreeToMongoDB mongodb inserter class.
 *
 * @requires {@link https://github.com/Itee/itee-client itee-client}
 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class v extends e.TAbstractDataInserter{static _toLog(e){return JSON.stringify({type:e.type||"undefined",name:e.name||"undefined",uuid:e.uuid||"undefined",id:e._id||"undefined"})}constructor(e={}){const t={logger:i.DefaultLogger,...e};super(t),this.logger=t.logger,this.mergeStrategy="add",this._cache={}}async _save(e,t,n,o,i){const s=a.toArray(e);if(r.isEmptyArray(s))return void i("No data to save in database. Abort insert !");const c=s.map(e=>e.name);this.logger.log(`ThreeToMongoDB: Saving ${c}`),t.mergeStrategy&&(this.mergeStrategy=t.mergeStrategy);try{const e=t.parentId;let o=null,a=null;if(r.isDefined(e)){const n=await this._readDocument("Objects3D",{_id:e});if(r.isNull(n))return void i(`Unable to retrieve parent with id (${t.parentId}). Abort insert !`);if("add"===this.mergeStrategy)o=await this._parseObjects(s,e),a=r.isDefined(o)?o.filter(e=>e).map(e=>e._id):[],await this._updateDocument(n,{$addToSet:{children:a}});else if("replace"===this.mergeStrategy){const t=await this._readDocuments("Objects3D",{parent:e}),i=s.map(e=>e.uuid),c=t.filter(e=>!i.includes(e.uuid));await this._removeChildrenDocuments(c),o=await this._parseObjects(s,e),a=r.isDefined(o)?o.filter(e=>e).map(e=>e._id):[],await this._updateDocument(n,{$set:{children:a}})}}else o=await this._parseObjects(s,null),a=r.isDefined(o)?o.filter(e=>e).map(e=>e._id):[];this.logger.log(`ThreeToMongoDB: Saved ${a}`),n()}catch(e){i(e)}finally{this._cache={}}}async _parseObjects(e=[],t=null){this.logger.debug("_parseObjects(...)");const n=a.toArray(e);if(r.isEmptyArray(n))return null;const o=[];for(let e=0,r=n.length;e<r;e++)o.push(this._parseObject(n[e],t));return Promise.all(o)}async _parseObject(e,t=null){if(this.logger.debug(`_parseObject(${v._toLog(e)}, ${t})`),r.isNotDefined(e))return null;const n=e.type,o=e.name,i=e.geometry,s=a.toArray(e.children),c=a.toArray(e.material);if(r.isDefined(i)&&r.isEmptyArray(s))if(i.isGeometry){const e=i.vertices;if(r.isNotDefined(e)||r.isEmptyArray(e))return this.logger.error(`Leaf object ${o} have a geometry that doesn't contain vertices ! Skip it.`),null}else{if(!i.isBufferGeometry)return this.logger.error(`Object ${o} contain an unknown/unmanaged geometry of type ${i.type} ! Skip it.`),null;{const e=i.attributes;if(r.isNotDefined(e))return this.logger.error(`Buffer geometry of ${o} doesn't contain attributes ! Skip it.`),null;const t=e.position;if(r.isNotDefined(t)||0===t.count)return this.logger.error(`Leaf object ${o} have a buffer geometry that doesn't contain position attribute ! Skip it.`),null}}let d=null;if(v.AvailableLineTypes.includes(n)){if(r.isNotDefined(i))return this.logger.error(`Missing geometry for object ${e.name} of type ${n}. Only Sprite can contains material without geometry ! Skip it.`),null;d=v.AvailableLineMaterialTypes}else if(v.AvailablePointTypes.includes(n)){if(r.isNotDefined(i))return this.logger.error(`Missing geometry for object ${e.name} of type ${n}. Only Sprite can contains material without geometry ! Skip it.`),null;d=v.AvailablePointMaterialTypes}else v.AvailableSpriteTypes.includes(n)&&(d=v.AvailableSpriteMaterialTypes);if(d)for(let e=0,t=c.length;e<t;e++){const t=c[e].type;if(!d.includes(t))return this.logger.error(`Object ${o} of type ${n}, contain an invalid material of type ${t} ! Skip it.`),null}const l=await this._getOrCreateDocuments(i),u=r.isDefined(l)?l.filter(e=>e).map(e=>e._id).pop():null,m=await this._getOrCreateDocuments(c),h=r.isDefined(m)?m.filter(e=>e).map(e=>e._id):[];let g=await this._readDocument(n,{uuid:e.uuid,parent:t});if(r.isDefined(g))if("add"===this.mergeStrategy){const e=await this._parseObjects(s,g._id),t=r.isDefined(e)?e.filter(e=>e).map(e=>e._id):[];await this._updateDocument(g,{$addToSet:{children:t}})}else if("replace"===this.mergeStrategy){const e=await this._readDocuments("Objects3D",{parent:g._id}),t=s.map(e=>e.uuid),n=e.filter(e=>!t.includes(e.uuid));await this._removeChildrenDocuments(n);const o=await this._parseObjects(s,g._id),i=r.isDefined(o)?o.filter(e=>e).map(e=>e._id):[];await this._updateDocument(g,{$set:{children:i,geometry:u,material:h}})}else this.logger.error(`Unknown/Unmanaged merge srategy ${this.mergeStrategy}`);else{e.parent=t,e.children=[],e.geometry=u,e.material=h,g=await this._createDocument(e);const n=await this._parseObjects(s,g._id),o=r.isDefined(n)?n.filter(e=>e).map(e=>e._id):[];await this._updateDocument(g,{$set:{children:o,geometry:u,material:h}})}return g}async _getOrCreateDocuments(e=[]){this.logger.debug("_getOrCreateDocuments(...)");const t=a.toArray(e);if(r.isEmptyArray(t))return null;const n=[];for(let e=0,r=t.length;e<r;e++)n.push(this._getOrCreateDocument(t[e]));return Promise.all(n)}async _getOrCreateDocument(e){if(this.logger.debug(`_getOrCreateDocument(${v._toLog(e)})`),r.isNotDefined(e))return null;let t=await this._readDocument(e.type,{uuid:e.uuid});return t=r.isDefined(t)?await this._updateDocument(t,e):await this._createDocument(e),t}async _createDocuments(e=[]){this.logger.debug("_createDocuments(...)");const t=a.toArray(e);if(r.isEmptyArray(t))return null;const n=[];for(let e=0,r=t.length;e<r;e++)n.push(this._createDocument(t[e]));return Promise.all(n)}async _createDocument(e){if(this.logger.debug(`_createDocument(${v._toLog(e)})`),r.isNotDefined(e))return null;const t=await this._driver.model(e.type)(e).save(),n=r.isDefined(t)?t._doc:null;return n&&(this._cache[n.uuid]=n),n}async _readDocuments(e,t){if(this.logger.debug("_readDocuments(...)"),r.isNotDefined(e)||r.isNotDefined(t))return null;return(await this._driver.model(e).find(t).exec()).map(e=>e._doc)}async _readDocument(e,t){if(this.logger.debug(`_readDocument(${e}, ${JSON.stringify(t)})`),r.isNotDefined(e)||r.isNotDefined(t))return null;const n=this._cache[t.uuid];if(n)return n;const o=await this._driver.model(e).findOne(t).exec(),i=r.isDefined(o)?o._doc:null;return i&&(this._cache[i.uuid]=i),i}async _updateDocuments(e=[],t,n){this.logger.debug("_updateDocuments(...)");const o=a.toArray(e);if(r.isEmptyArray(o))return null;const i=[];for(let e=0,r=o.length;e<r;e++)i.push(this._updateDocument(o[e],t,n));return Promise.all(i)}async _updateDocument(e,t,n={new:!0}){if(this.logger.debug(`_updateDocument(${v._toLog(e)}, ${JSON.stringify(t)}, ${JSON.stringify(n)})`),r.isNotDefined(e))return null;const o=await this._driver.model(e.type).findByIdAndUpdate(e._id,t,n).exec(),i=r.isDefined(o)?o._doc:null;return i&&(this._cache[i.uuid]=i),i}async _deleteDocuments(e=[]){this.logger.debug("_deleteDocuments(...)");const t=a.toArray(e);if(r.isEmptyArray(t))return null;const n=[];for(let e=0,r=t.length;e<r;e++)n.push(this._deleteDocument(t[e]));return Promise.all(n)}async _deleteDocument(e){if(this.logger.debug(`_deleteDocument(${v._toLog(e)})`),r.isNotDefined(e))return null;const t=await this._driver.model(e.type).findByIdAndDelete(e._id).exec(),n=r.isDefined(t)?t._doc:null;return n&&delete this._cache[n.uuid],n}async _removeChildrenDocuments(e){this.logger.debug("_removeChildrenDocuments(...)");let t=[];for(let r=e.length-1;r>=0;r--)t.push(this._removeChildDocument(e[r]));return Promise.all(t)}async _removeChildDocument(e){this.logger.debug(`_removeChildDocument(${v._toLog(e)})`);const t=await this._readDocuments("Objects3D",{parent:e._id});await this._removeChildrenDocuments(t),await this._removeOrphanGeometryWithId(e.geometry),await this._removeOrphanMaterialsWithIds(e.material||[]),await this._deleteDocument(e)}async _removeOrphanGeometryWithId(e){if(this.logger.debug(`_removeOrphanGeometryWithId(${e})`),r.isNotDefined(e))return;if((await this._readDocuments("Objects3D",{geometry:e})).length>1)return;const t=await this._readDocument("Geometries",{_id:e});await this._deleteDocument(t)}async _removeOrphanMaterialsWithIds(e){this.logger.debug("_removeOrphanMaterialsWithIds(...)");const t=[];for(let r=0,n=e.length;r<n;r++)t.push(this._removeOrphanMaterialWithId(e[r]));return Promise.all(t)}async _removeOrphanMaterialWithId(e){this.logger.debug(`_removeOrphanMaterialWithId(${e})`);if((await this._readDocuments("Objects3D",{material:e})).length>1)return;const t=await this._readDocument("Materials",{_id:e});await this._deleteDocument(t)}}function B(e){if(e.__esModule)return e;var t=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach(function(r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}),t}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Object3D
 *
 * @description Todo...
 */function O(){}v.AvailableCurveTypes=["Curve","ArcCurve","CatmullRomCurve3","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","CurvePath","Path","Shape"],v.AvailableLineTypes=["Line","LineLoop","LineSegments"],v.AvailableLineMaterialTypes=["LineBasicMaterial","LineDashedMaterial"],v.AvailablePointTypes=["Points"],v.AvailablePointMaterialTypes=["PointsMaterial"],v.AvailableSpriteTypes=["Sprite"],v.AvailableSpriteMaterialTypes=["SpriteMaterial"],O.getSchemaFrom=e=>(O._schema||O._createSchema(e),O._schema),O._createSchema=e=>{const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Mixed,i=r.Vector3,a=r.Quaternion,s=r.Matrix4,c=r.Euler;O._schema=new t({uuid:String,name:String,type:String,parent:n,children:[n],up:i,position:i,rotation:c,quaternion:a,scale:{type:i,default:{x:1,y:1,z:1}},modelViewMatrix:s,normalMatrix:s,matrix:s,matrixWorld:s,matrixAutoUpdate:Boolean,matrixWorldNeedsUpdate:Boolean,layers:{type:Number,set:e=>e.mask},visible:Boolean,castShadow:Boolean,receiveShadow:Boolean,frustumCulled:Boolean,renderOrder:Boolean,userData:{type:o,set:e=>function e(t){let r={};for(let n in t){if(!Object.prototype.hasOwnProperty.call(t,n))continue;let o=t[n];o.constructor===Object&&(o=e(o)),r[n.replace(/\./g,"")]=o}return r}(e)}},{collection:"objects",discriminatorKey:"type"})},O.getModelFrom=e=>(O._model||O._createModel(e),O._model),O._createModel=e=>{O._model=e.model("Objects3D",O.getSchemaFrom(e)),O._model.discriminator("Object3D",new e.Schema({}))},O.registerModelTo=e=>(O._model||O._createModel(e),e),O._schema=null,O._model=null;var D=B(Object.freeze({__proto__:null,Object3D:O}));
/**
 * @module Schemas/Audio/Audio
 * @desc Export the ThreeJs Audio Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Object3D:N}=D;let I,C;function x(e){return I||function(e){const t=e.Schema;I=new t({})}(e),I}function P(e){const t=N.getModelFrom(e);C=t.discriminator("Audio",x(e))}var A={name:"Audio",getSchemaFrom:x,getModelFrom:function(e){return C||P(e),C},registerModelTo:function(e){return C||P(e),e}};
/**
 * @module Schemas/Audio/AudioListener
 * @desc Export the ThreeJs AudioListener Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:U}=D;let L,G;function R(e){return L||function(e){const t=e.Schema;L=new t({})}(e),L}function E(e){const t=U.getModelFrom(e);G=t.discriminator("AudioListener",R(e))}var j={name:"AudioListener",getSchemaFrom:R,getModelFrom:function(e){return G||E(e),G},registerModelTo:function(e){return G||E(e),e}};
/**
 * @module Schemas/Audio/PositionalAudio
 * @desc Export the ThreeJs PositionalAudio Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:V}=D;let H,k;function $(e){return H||function(e){const t=e.Schema;H=new t({})}(e),H}function z(e){const t=V.getModelFrom(e);k=t.discriminator("PositionalAudio",$(e))}var Y={name:"PositionalAudio",getSchemaFrom:$,getModelFrom:function(e){return k||z(e),k},registerModelTo:function(e){return k||z(e),e}};
/**
 * @module Schemas/Camera/ArrayCamera
 * @desc Export the ThreeJs ArrayCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:X}=D;let Z,W;function K(e){return Z||function(e){const t=e.Schema;Z=new t({})}(e),Z}function Q(e){const t=X.getModelFrom(e);W=t.discriminator("ArrayCamera",K(e))}var J={name:"ArrayCamera",getSchemaFrom:K,getModelFrom:function(e){return W||Q(e),W},registerModelTo:function(e){return W||Q(e),e}};
/**
 * @module Schemas/Camera/Camera
 * @desc Export the ThreeJs Camera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:q}=D;let ee,te;function re(e){return ee||function(e){const t=e.Schema;ee=new t({})}(e),ee}function ne(e){const t=q.getModelFrom(e);te=t.discriminator("Camera",re(e))}var oe={name:"Camera",getSchemaFrom:re,getModelFrom:function(e){return te||ne(e),te},registerModelTo:function(e){return te||ne(e),e}};
/**
 * @module Schemas/Camera/CubeCamera
 * @desc Export the ThreeJs CubeCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ie}=D;let ae,se;function ce(e){return ae||function(e){const t=e.Schema;ae=new t({})}(e),ae}function de(e){const t=ie.getModelFrom(e);se=t.discriminator("CubeCamera",ce(e))}var le={name:"CubeCamera",getSchemaFrom:ce,getModelFrom:function(e){return se||de(e),se},registerModelTo:function(e){return se||de(e),e}};
/**
 * @module Schemas/Camera/OrthographicCamera
 * @desc Export the ThreeJs OrthographicCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ue}=D;let me,he;function ge(e){return me||function(e){const t=e.Schema;me=new t({})}(e),me}function fe(e){const t=ue.getModelFrom(e);he=t.discriminator("OrthographicCamera",ge(e))}var pe={name:"OrthographicCamera",getSchemaFrom:ge,getModelFrom:function(e){return he||fe(e),he},registerModelTo:function(e){return he||fe(e),e}};
/**
 * @module Schemas/Camera/PerspectiveCamera
 * @desc Export the ThreeJs PerspectiveCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:_e}=D;let Se,ye;function Fe(e){return Se||function(e){const t=e.Schema;Se=new t({})}(e),Se}function Me(e){const t=_e.getModelFrom(e);ye=t.discriminator("PerspectiveCamera",Fe(e))}var be={name:"PerspectiveCamera",getSchemaFrom:Fe,getModelFrom:function(e){return ye||Me(e),ye},registerModelTo:function(e){return ye||Me(e),e}};
/**
 * @module Schemas/Core/BufferAttribute
 * @desc Export the ThreeJs BufferAttribute Model and Schema for Mongoose.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{isInt8Array:we,isInt16Array:Te,isInt32Array:ve,isFloat32Array:Be,isFloat64Array:Oe,isUint8Array:De,isUint8ClampedArray:Ne,isUint16Array:Ie,isUint32Array:Ce,isBigInt64Array:xe,isBigUint64Array:Pe}=d.default;let Ae;var Ue={name:"BufferAttribute",getSchemaFrom:function(e){return Ae||function(e){const t=e.Schema,r=t.Types.Mixed,n=1,o=2,i=4,a=8,s={Int8Array:0,Uint8Array:1,Uint8ClampedArray:2,Int16Array:3,Uint16Array:4,Int32Array:5,Uint32Array:6,Float32Array:7,Float64Array:8,BigInt64Array:9,BigUint64Array:10};Ae=new t({array:{type:Buffer,set:e=>{const t=e.length;let r=null,c=0;if(we(e)){r=Buffer.allocUnsafe(n+t*n),c=r.writeUInt8(s.Int8Array,c);for(let n=0;n<t;n++)c=r.writeInt8(e[n],c)}else if(De(e)){r=Buffer.allocUnsafe(n+t*n),c=r.writeUInt8(s.Uint8Array,c);for(let n=0;n<t;n++)c=r.writeUInt8(e[n],c)}else if(Ne(e)){r=Buffer.allocUnsafe(n+t*n),c=r.writeUInt8(s.Uint8ClampedArray,c);for(let n=0;n<t;n++)c=r.writeUInt8(e[n],c)}else if(Te(e)){r=Buffer.allocUnsafe(n+t*o),c=r.writeUInt8(s.Int16Array,c);for(let n=0;n<t;n++)c=r.writeInt16BE(e[n],c)}else if(Ie(e)){r=Buffer.allocUnsafe(n+t*o),c=r.writeUInt8(s.Uint16Array,c);for(let n=0;n<t;n++)c=r.writeUInt16BE(e[n],c)}else if(ve(e)){r=Buffer.allocUnsafe(n+t*i),c=r.writeUInt8(s.Int32Array,c);for(let n=0;n<t;n++)c=r.writeInt32BE(e[n],c)}else if(Ce(e)){r=Buffer.allocUnsafe(n+t*i),c=r.writeUInt8(s.Uint32Array,c);for(let n=0;n<t;n++)c=r.writeUInt32BE(e[n],c)}else if(Be(e)){r=Buffer.allocUnsafe(n+t*i),c=r.writeUInt8(s.Float32Array,c);for(let n=0;n<t;n++)c=r.writeFloatBE(e[n],c)}else if(Oe(e)){r=Buffer.allocUnsafe(n+t*a),c=r.writeUInt8(s.Float64Array,c);for(let n=0;n<t;n++)c=r.writeDoubleBE(e[n],c)}else if(xe(e)){r=Buffer.allocUnsafe(n+t*a),c=r.writeUInt8(s.BigInt64Array,c);for(let n=0;n<t;n++)c=r.writeDoubleBE(e[n],c)}else{if(!Pe(e))throw new Error("Unable to determine the array type to bufferize.");r=Buffer.allocUnsafe(n+t*a),c=r.writeUInt8(s.BigUint64Array,c);for(let n=0;n<t;n++)c=r.writeDoubleBE(e[n],c)}return r}},count:Number,dynamic:Boolean,itemSize:Number,name:String,needsUpdate:Boolean,normalized:Boolean,updateRange:r,uuid:String,version:Number},{_id:!1,id:!1})}(e),Ae},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Core/BufferGeometry
 * @desc Export the ThreeJs BufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferAttribute Schemas/Core/BufferAttribute}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Le,Ge;function Re(e){return Le||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Vector3,i=Ue.getSchemaFrom(e);Le=new t({uuid:String,name:String,type:String,index:i,attributes:{position:i,normal:i,color:i,uv:i},groups:n,boundingBox:{min:o,max:o},boundingSphere:{center:o,radius:Number},drawRange:n},{collection:"geometries",discriminatorKey:"type"})}(e),Le}function Ee(e){Ge=e.model("BufferGeometries",Re(e)),Ge.discriminator("BufferGeometry",new e.Schema({}))}const je={getSchemaFrom:Re,getModelFrom:function(e){return Ge||Ee(e),Ge},registerModelTo:function(e){return Ge||Ee(e),e}};var Ve=Object.freeze({__proto__:null,BufferGeometry:je}),He={};
/**
 * @module Schemas/Curves/Curve
 * @desc Export the ThreeJs Curve Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
let ke,$e;function ze(e){return ke||function(e){const t=e.Schema;ke=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{collection:"curves",discriminatorKey:"type"})}(e),ke}function Ye(e){$e=e.model("Curves",ze(e)),$e.discriminator("Curve",new e.Schema({}))}var Xe=He.Curve={name:"Curve",getSchemaFrom:ze,getModelFrom:function(e){return $e||Ye(e),$e},registerModelTo:function(e){return $e||Ye(e),e}};
/**
 * @module Schemas/Core/CurvePath
 * @desc Export the ThreeJs CurvePath Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 * @augments module:Schemas/Curves/Curve
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Ze}=He;let We,Ke;function Qe(e){return We||function(e){const t=e.Schema,r=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});We=new t({curves:[r],autoClose:{type:Boolean,default:!1}})}(e),We}function Je(e){const t=Ze.getModelFrom(e);Ke=t.discriminator("CurvePath",Qe(e))}var qe={name:"CurvePath",getSchemaFrom:Qe,getModelFrom:function(e){return Ke||Je(e),Ke},registerModelTo:function(e){return Ke||Je(e),e}};
/**
 * @module Schemas/Core/Face3
 * @desc Export the ThreeJs Face3 Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let et;var tt={name:"Face3",getSchemaFrom:function(e){return et||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Vector3;et=new t({a:Number,b:Number,c:Number,normal:o,vertexNormals:[Number],color:n,vertexColors:[Number],materialIndex:Number},{_id:!1,id:!1})}(e),et},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Core/Geometry
 * @desc Export the ThreeJs Geometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Face3 Schemas/Core/Face3}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let rt,nt;function ot(e){return rt||function(e){const t=tt.getSchemaFrom(e),r=e.Schema,n=r.Types.Vector3;rt=new r({uuid:String,name:String,type:String,vertices:[n],colors:[Number],faces:[t],faceVertexUvs:[[Number]],morphTargets:[Number],morphNormals:[Number],skinWeights:[Number],skinIndices:[Number],lineDistances:[Number],boundingBox:{min:n,max:n},boundingSphere:{center:n,radius:Number},elementsNeedUpdate:Boolean,verticesNeedUpdate:Boolean,uvsNeedUpdate:Boolean,normalsNeedUpdate:Boolean,colorsNeedUpdate:Boolean,lineDistancesNeedUpdate:Boolean,groupsNeedUpdate:Boolean},{collection:"geometries",discriminatorKey:"type"})}(e),rt}function it(e){nt=e.model("Geometries",ot(e)),nt.discriminator("Geometry",new e.Schema({}))}const at={name:"Geometry",getSchemaFrom:ot,getModelFrom:function(e){return nt||it(e),nt},registerModelTo:function(e){return nt||it(e),e}};var st=Object.freeze({__proto__:null,Geometry:at});
/**
 * @module Schemas/Core/Path
 * @desc Export the ThreeJs Path Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:ct}=He;let dt,lt;function ut(e){return dt||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});dt=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r})}(e),dt}function mt(e){const t=ct.getModelFrom(e);lt=t.discriminator("Path",ut(e))}var ht={name:"Path",getSchemaFrom:ut,getModelFrom:function(e){return lt||mt(e),lt},registerModelTo:function(e){return lt||mt(e),e}};
/**
 * @module Schemas/Core/Shape
 * @desc Export the ThreeJs Shape Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:gt}=He;let ft,pt;function _t(e){return ft||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),o=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1});ft=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[o]})}(e),ft}function St(e){const t=gt.getModelFrom(e);pt=t.discriminator("Shape",_t(e))}var yt={name:"Shape",getSchemaFrom:_t,getModelFrom:function(e){return pt||St(e),pt},registerModelTo:function(e){return pt||St(e),e}};
/**
 * @module Schemas/Curves/ArcCurve
 * @desc Export the ThreeJs ArcCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Ft}=He;let Mt,bt;function wt(e){return Mt||function(e){const t=e.Schema;Mt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),Mt}function Tt(e){const t=Ft.getModelFrom(e);bt=t.discriminator("ArcCurve",wt(e))}var vt={name:"ArcCurve",getSchemaFrom:wt,getModelFrom:function(e){return bt||Tt(e),bt},registerModelTo:function(e){return bt||Tt(e),e}};
/**
 * @module Schemas/Curves/CatmullRomCurve3
 * @desc Export the ThreeJs CatmullRomCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Bt}=He;let Ot,Dt;function Nt(e){return Ot||function(e){const t=e.Schema,r=t.Types.Vector3;Ot=new t({points:[r],closed:Boolean,curveType:String,tension:Number})}(e),Ot}function It(e){const t=Bt.getModelFrom(e);Dt=t.discriminator("CatmullRomCurve3",Nt(e))}var Ct={name:"CatmullRomCurve3",getSchemaFrom:Nt,getModelFrom:function(e){return Dt||It(e),Dt},registerModelTo:function(e){return Dt||It(e),e}};
/**
 * @module Schemas/Curves/CubicBezierCurve
 * @desc Export the ThreeJs CubicBezierCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:xt}=He;let Pt,At;function Ut(e){return Pt||function(e){const t=e.Schema,r=t.Types.Vector2;Pt=new t({v0:r,v1:r,v2:r,v3:r})}(e),Pt}function Lt(e){const t=xt.getModelFrom(e);At=t.discriminator("CubicBezierCurve",Ut(e))}var Gt={name:"CubicBezierCurve",getSchemaFrom:Ut,getModelFrom:function(e){return At||Lt(e),At},registerModelTo:function(e){return At||Lt(e),e}};
/**
 * @module Schemas/Curves/CubicBezierCurve3
 * @desc Export the ThreeJs CubicBezierCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Rt}=He;let Et,jt;function Vt(e){return Et||function(e){const t=e.Schema,r=t.Types.Vector3;Et=new t({v0:r,v1:r,v2:r,v3:r})}(e),Et}function Ht(e){const t=Rt.getModelFrom(e);jt=t.discriminator("CubicBezierCurve3",Vt(e))}var kt={name:"CubicBezierCurve3",getSchemaFrom:Vt,getModelFrom:function(e){return jt||Ht(e),jt},registerModelTo:function(e){return jt||Ht(e),e}};
/**
 * @module Schemas/Curves/CurveExtras
 * @desc Export the ThreeJs CurveExtras Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:$t}=He;let zt,Yt;function Xt(e){return zt||function(e){const t=e.Schema;zt=new t({})}(e),zt}function Zt(e){const t=$t.getModelFrom(e);Yt=t.discriminator("CurveExtras",Xt(e))}var Wt={name:"CurveExtras",getSchemaFrom:Xt,getModelFrom:function(e){return Yt||Zt(e),Yt},registerModelTo:function(e){return Yt||Zt(e),e}};
/**
 * @module Schemas/Curves/EllipseCurve
 * @desc Export the ThreeJs EllipseCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Kt}=He;let Qt,Jt;function qt(e){return Qt||function(e){const t=e.Schema;Qt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),Qt}function er(e){const t=Kt.getModelFrom(e);Jt=t.discriminator("EllipseCurve",qt(e))}var tr={name:"EllipseCurve",getSchemaFrom:qt,getModelFrom:function(e){return Jt||er(e),Jt},registerModelTo:function(e){return Jt||er(e),e}};
/**
 * @module Schemas/Curves/LineCurve
 * @desc Export the ThreeJs LineCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:rr}=He;let nr,or;function ir(e){return nr||function(e){const t=e.Schema,r=t.Types.Vector2;nr=new t({v0:r,v1:r})}(e),nr}function ar(e){const t=rr.getModelFrom(e);or=t.discriminator("LineCurve",ir(e))}var sr={name:"LineCurve",getSchemaFrom:ir,getModelFrom:function(e){return or||ar(e),or},registerModelTo:function(e){return or||ar(e),e}};
/**
 * @module Schemas/Curves/LineCurve3
 * @desc Export the ThreeJs LineCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:cr}=He;let dr,lr;function ur(e){return dr||function(e){const t=e.Schema,r=t.Types.Vector3;dr=new t({v0:r,v1:r})}(e),dr}function mr(e){const t=cr.getModelFrom(e);lr=t.discriminator("LineCurve3",ur(e))}var hr={name:"LineCurve3",getSchemaFrom:ur,getModelFrom:function(e){return lr||mr(e),lr},registerModelTo:function(e){return lr||mr(e),e}};
/**
 * @module Schemas/Curves/NURBSCurve
 * @desc Export the ThreeJs NURBSCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:gr}=He;let fr,pr;function _r(e){return fr||function(e){const t=e.Schema;fr=new t({})}(e),fr}function Sr(e){const t=gr.getModelFrom(e);pr=t.discriminator("NURBSCurve",_r(e))}var yr={name:"NURBSCurve",getSchemaFrom:_r,getModelFrom:function(e){return pr||Sr(e),pr},registerModelTo:function(e){return pr||Sr(e),e}};
/**
 * @module Schemas/Curves/NURBSSurface
 * @desc Export the ThreeJs NURBSSurface Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Fr}=He;let Mr,br;function wr(e){return Mr||function(e){const t=e.Schema;Mr=new t({})}(e),Mr}function Tr(e){const t=Fr.getModelFrom(e);br=t.discriminator("NURBSSurface",wr(e))}var vr={name:"NURBSSurface",getSchemaFrom:wr,getModelFrom:function(e){return br||Tr(e),br},registerModelTo:function(e){return br||Tr(e),e}};
/**
 * @module Schemas/Curves/QuadraticBezierCurve
 * @desc Export the ThreeJs QuadraticBezierCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Br}=He;let Or,Dr;function Nr(e){return Or||function(e){const t=e.Schema,r=t.Types.Vector2;Or=new t({v0:r,v1:r,v2:r})}(e),Or}function Ir(e){const t=Br.getModelFrom(e);Dr=t.discriminator("QuadraticBezierCurve",Nr(e))}var Cr={name:"QuadraticBezierCurve",getSchemaFrom:Nr,getModelFrom:function(e){return Dr||Ir(e),Dr},registerModelTo:function(e){return Dr||Ir(e),e}};
/**
 * @module Schemas/Curves/QuadraticBezierCurve3
 * @desc Export the ThreeJs QuadraticBezierCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:xr}=He;let Pr,Ar;function Ur(e){return Pr||function(e){const t=e.Schema,r=t.Types.Vector3;Pr=new t({v0:r,v1:r,v2:r})}(e),Pr}function Lr(e){const t=xr.getModelFrom(e);Ar=t.discriminator("QuadraticBezierCurve3",Ur(e))}var Gr={name:"QuadraticBezierCurve3",getSchemaFrom:Ur,getModelFrom:function(e){return Ar||Lr(e),Ar},registerModelTo:function(e){return Ar||Lr(e),e}};
/**
 * @module Schemas/Curves/SplineCurve
 * @desc Export the ThreeJs SplineCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Rr}=He;let Er,jr;function Vr(e){return Er||function(e){const t=e.Schema,r=t.Types.Vector3;Er=new t({points:[r]})}(e),Er}function Hr(e){const t=Rr.getModelFrom(e);jr=t.discriminator("SplineCurve",Vr(e))}var kr={name:"SplineCurve",getSchemaFrom:Vr,getModelFrom:function(e){return jr||Hr(e),jr},registerModelTo:function(e){return jr||Hr(e),e}},$r=B(Ve);
/**
 * @module Schemas/Geometries/BoxBufferGeometry
 * @desc Export the ThreeJs BoxBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{BufferGeometry:zr}=$r;let Yr,Xr;function Zr(e){return Yr||function(e){const t=e.Schema;Yr=new t({})}(e),Yr}function Wr(e){const t=zr.getModelFrom(e);Xr=t.discriminator("BoxBufferGeometry",Zr(e))}var Kr={name:"BoxBufferGeometry",getSchemaFrom:Zr,getModelFrom:function(e){return Xr||Wr(e),Xr},registerModelTo:function(e){return Xr||Wr(e),e}},Qr=B(st);
/**
 * @module Schemas/Geometries/BoxGeometry
 * @desc Export the ThreeJs BoxGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Geometry:Jr}=Qr;let qr,en;function tn(e){return qr||function(e){const t=e.Schema;qr=new t({})}(e),qr}function rn(e){const t=Jr.getModelFrom(e);en=t.discriminator("BoxGeometry",tn(e))}var nn={name:"BoxGeometry",getSchemaFrom:tn,getModelFrom:function(e){return en||rn(e),en},registerModelTo:function(e){return en||rn(e),e}};
/**
 * @module Schemas/Geometries/CircleBufferGeometry
 * @desc Export the ThreeJs CircleBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:on}=$r;let an,sn;function cn(e){return an||function(e){const t=e.Schema;an=new t({})}(e),an}function dn(e){const t=on.getModelFrom(e);sn=t.discriminator("CircleBufferGeometry",cn(e))}var ln={name:"CircleBufferGeometry",getSchemaFrom:cn,getModelFrom:function(e){return sn||dn(e),sn},registerModelTo:function(e){return sn||dn(e),e}};
/**
 * @module Schemas/Geometries/CircleGeometry
 * @desc Export the ThreeJs CircleGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:un}=Qr;let mn,hn;function gn(e){return mn||function(e){const t=e.Schema;mn=new t({})}(e),mn}function fn(e){const t=un.getModelFrom(e);hn=t.discriminator("CircleGeometry",gn(e))}var pn={name:"CircleGeometry",getSchemaFrom:gn,getModelFrom:function(e){return hn||fn(e),hn},registerModelTo:function(e){return hn||fn(e),e}};
/**
 * @module Schemas/Geometries/ConeBufferGeometry
 * @desc Export the ThreeJs ConeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:_n}=$r;let Sn,yn;function Fn(e){return Sn||function(e){const t=e.Schema;Sn=new t({})}(e),Sn}function Mn(e){const t=_n.getModelFrom(e);yn=t.discriminator("ConeBufferGeometry",Fn(e))}var bn={name:"ConeBufferGeometry",getSchemaFrom:Fn,getModelFrom:function(e){return yn||Mn(e),yn},registerModelTo:function(e){return yn||Mn(e),e}};
/**
 * @module Schemas/Geometries/ConeGeometry
 * @desc Export the ThreeJs ConeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:wn}=Qr;let Tn,vn;function Bn(e){return Tn||function(e){const t=e.Schema;Tn=new t({})}(e),Tn}function On(e){const t=wn.getModelFrom(e);vn=t.discriminator("ConeGeometry",Bn(e))}var Dn={name:"ConeGeometry",getSchemaFrom:Bn,getModelFrom:function(e){return vn||On(e),vn},registerModelTo:function(e){return vn||On(e),e}};
/**
 * @module Schemas/Geometries/ConvexGeometry
 * @desc Export the ThreeJs ConvexGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Nn}=Qr;let In,Cn;function xn(e){return In||function(e){const t=e.Schema;In=new t({})}(e),In}function Pn(e){const t=Nn.getModelFrom(e);Cn=t.discriminator("ConvexGeometry",xn(e))}var An={name:"ConvexGeometry",getSchemaFrom:xn,getModelFrom:function(e){return Cn||Pn(e),Cn},registerModelTo:function(e){return Cn||Pn(e),e}};
/**
 * @module Schemas/Geometries/CylinderBufferGeometry
 * @desc Export the ThreeJs CylinderBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Un}=$r;let Ln,Gn;function Rn(e){return Ln||function(e){const t=e.Schema;Ln=new t({})}(e),Ln}function En(e){const t=Un.getModelFrom(e);Gn=t.discriminator("CylinderBufferGeometry",Rn(e))}var jn={name:"CylinderBufferGeometry",getSchemaFrom:Rn,getModelFrom:function(e){return Gn||En(e),Gn},registerModelTo:function(e){return Gn||En(e),e}};
/**
 * @module Schemas/Geometries/CylinderGeometry
 * @desc Export the ThreeJs CylinderGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Vn}=Qr;let Hn,kn;function $n(e){return Hn||function(e){const t=e.Schema;Hn=new t({})}(e),Hn}function zn(e){const t=Vn.getModelFrom(e);kn=t.discriminator("CylinderGeometry",$n(e))}var Yn={name:"CylinderGeometry",getSchemaFrom:$n,getModelFrom:function(e){return kn||zn(e),kn},registerModelTo:function(e){return kn||zn(e),e}};
/**
 * @module Schemas/Geometries/DecalGeometry
 * @desc Export the ThreeJs DecalGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Xn}=Qr;let Zn,Wn;function Kn(e){return Zn||function(e){const t=e.Schema;Zn=new t({})}(e),Zn}function Qn(e){const t=Xn.getModelFrom(e);Wn=t.discriminator("DecalGeometry",Kn(e))}var Jn={name:"DecalGeometry",getSchemaFrom:Kn,getModelFrom:function(e){return Wn||Qn(e),Wn},registerModelTo:function(e){return Wn||Qn(e),e}};
/**
 * @module Schemas/Geometries/DodecahedronGeometry
 * @desc Export the ThreeJs DodecahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:qn}=Qr;let eo,to;function ro(e){return eo||function(e){const t=e.Schema;eo=new t({})}(e),eo}function no(e){const t=qn.getModelFrom(e);to=t.discriminator("DodecahedronGeometry",ro(e))}var oo={name:"DodecahedronGeometry",getSchemaFrom:ro,getModelFrom:function(e){return to||no(e),to},registerModelTo:function(e){return to||no(e),e}};
/**
 * @module Schemas/Geometries/EdgesGeometry
 * @desc Export the ThreeJs EdgesGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:io}=Qr;let ao,so;function co(e){return ao||function(e){const t=e.Schema;ao=new t({})}(e),ao}function lo(e){const t=io.getModelFrom(e);so=t.discriminator("EdgesGeometry",co(e))}var uo={name:"EdgesGeometry",getSchemaFrom:co,getModelFrom:function(e){return so||lo(e),so},registerModelTo:function(e){return so||lo(e),e}};
/**
 * @module Schemas/Geometries/ExtrudeBufferGeometry
 * @desc Export the ThreeJs ExtrudeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:mo}=$r;let ho,go;function fo(e){return ho||function(e){const t=e.Schema;ho=new t({})}(e),ho}function po(e){const t=mo.getModelFrom(e);go=t.discriminator("ExtrudeBufferGeometry",fo(e))}var _o={name:"ExtrudeBufferGeometry",getSchemaFrom:fo,getModelFrom:function(e){return go||po(e),go},registerModelTo:function(e){return go||po(e),e}};
/**
 * @module Schemas/Geometries/ExtrudeGeometry
 * @desc Export the ThreeJs ExtrudeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:So}=Qr;let yo,Fo;function Mo(e){return yo||function(e){const t=e.Schema;yo=new t({})}(e),yo}function bo(e){const t=So.getModelFrom(e);Fo=t.discriminator("ExtrudeGeometry",Mo(e))}var wo={name:"ExtrudeGeometry",getSchemaFrom:Mo,getModelFrom:function(e){return Fo||bo(e),Fo},registerModelTo:function(e){return Fo||bo(e),e}};
/**
 * @module Schemas/Geometries/IcosahedronBufferGeometry
 * @desc Export the ThreeJs IcosahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:To}=$r;let vo,Bo;function Oo(e){return vo||function(e){const t=e.Schema;vo=new t({})}(e),vo}function Do(e){const t=To.getModelFrom(e);Bo=t.discriminator("IcosahedronBufferGeometry",Oo(e))}var No={name:"IcosahedronBufferGeometry",getSchemaFrom:Oo,getModelFrom:function(e){return Bo||Do(e),Bo},registerModelTo:function(e){return Bo||Do(e),e}};
/**
 * @module Schemas/Geometries/IcosahedronGeometry
 * @desc Export the ThreeJs IcosahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Io}=Qr;let Co,xo;function Po(e){return Co||function(e){const t=e.Schema;Co=new t({})}(e),Co}function Ao(e){const t=Io.getModelFrom(e);xo=t.discriminator("IcosahedronGeometry",Po(e))}var Uo={name:"IcosahedronGeometry",getSchemaFrom:Po,getModelFrom:function(e){return xo||Ao(e),xo},registerModelTo:function(e){return xo||Ao(e),e}};
/**
 * @module Schemas/Geometries/InstancedBufferGeometry
 * @desc Export the ThreeJs InstancedBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Lo}=$r;let Go,Ro;function Eo(e){return Go||function(e){const t=e.Schema;Go=new t({})}(e),Go}function jo(e){const t=Lo.getModelFrom(e);Ro=t.discriminator("InstancedBufferGeometry",Eo(e))}var Vo={name:"InstancedBufferGeometry",getSchemaFrom:Eo,getModelFrom:function(e){return Ro||jo(e),Ro},registerModelTo:function(e){return Ro||jo(e),e}};
/**
 * @module Schemas/Geometries/LatheBufferGeometry
 * @desc Export the ThreeJs LatheBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ho}=$r;let ko,$o;function zo(e){return ko||function(e){const t=e.Schema;ko=new t({})}(e),ko}function Yo(e){const t=Ho.getModelFrom(e);$o=t.discriminator("LatheBufferGeometry",zo(e))}var Xo={name:"LatheBufferGeometry",getSchemaFrom:zo,getModelFrom:function(e){return $o||Yo(e),$o},registerModelTo:function(e){return $o||Yo(e),e}};
/**
 * @module Schemas/Geometries/LatheGeometry
 * @desc Export the ThreeJs LatheGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Zo}=Qr;let Wo,Ko;function Qo(e){return Wo||function(e){const t=e.Schema;Wo=new t({})}(e),Wo}function Jo(e){const t=Zo.getModelFrom(e);Ko=t.discriminator("LatheGeometry",Qo(e))}var qo={name:"LatheGeometry",getSchemaFrom:Qo,getModelFrom:function(e){return Ko||Jo(e),Ko},registerModelTo:function(e){return Ko||Jo(e),e}};
/**
 * @module Schemas/Geometries/OctahedronBufferGeometry
 * @desc Export the ThreeJs OctahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:ei}=$r;let ti,ri;function ni(e){return ti||function(e){const t=e.Schema;ti=new t({})}(e),ti}function oi(e){const t=ei.getModelFrom(e);ri=t.discriminator("OctahedronBufferGeometry",ni(e))}var ii={name:"OctahedronBufferGeometry",getSchemaFrom:ni,getModelFrom:function(e){return ri||oi(e),ri},registerModelTo:function(e){return ri||oi(e),e}};
/**
 * @module Schemas/Geometries/OctahedronGeometry
 * @desc Export the ThreeJs OctahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ai}=Qr;let si,ci;function di(e){return si||function(e){const t=e.Schema;si=new t({})}(e),si}function li(e){const t=ai.getModelFrom(e);ci=t.discriminator("OctahedronGeometry",di(e))}var ui={name:"OctahedronGeometry",getSchemaFrom:di,getModelFrom:function(e){return ci||li(e),ci},registerModelTo:function(e){return ci||li(e),e}};
/**
 * @module Schemas/Geometries/ParametricBufferGeometry
 * @desc Export the ThreeJs ParametricBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:mi}=$r;let hi,gi;function fi(e){return hi||function(e){const t=e.Schema;hi=new t({})}(e),hi}function pi(e){const t=mi.getModelFrom(e);gi=t.discriminator("ParametricBufferGeometry",fi(e))}var _i={name:"ParametricBufferGeometry",getSchemaFrom:fi,getModelFrom:function(e){return gi||pi(e),gi},registerModelTo:function(e){return gi||pi(e),e}};
/**
 * @module Schemas/Geometries/ParametricGeometry
 * @desc Export the ThreeJs ParametricGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Si}=Qr;let yi,Fi;function Mi(e){return yi||function(e){const t=e.Schema;yi=new t({})}(e),yi}function bi(e){const t=Si.getModelFrom(e);Fi=t.discriminator("ParametricGeometry",Mi(e))}var wi={name:"ParametricGeometry",getSchemaFrom:Mi,getModelFrom:function(e){return Fi||bi(e),Fi},registerModelTo:function(e){return Fi||bi(e),e}};
/**
 * @module Schemas/Geometries/PlaneBufferGeometry
 * @desc Export the ThreeJs PlaneBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ti}=$r;let vi,Bi;function Oi(e){return vi||function(e){const t=e.Schema;vi=new t({})}(e),vi}function Di(e){const t=Ti.getModelFrom(e);Bi=t.discriminator("PlaneBufferGeometry",Oi(e))}var Ni={name:"PlaneBufferGeometry",getSchemaFrom:Oi,getModelFrom:function(e){return Bi||Di(e),Bi},registerModelTo:function(e){return Bi||Di(e),e}};
/**
 * @module Schemas/Geometries/PlaneGeometry
 * @desc Export the ThreeJs PlaneGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ii}=Qr;let Ci,xi;function Pi(e){return Ci||function(e){const t=e.Schema;Ci=new t({})}(e),Ci}function Ai(e){const t=Ii.getModelFrom(e);xi=t.discriminator("PlaneGeometry",Pi(e))}var Ui={name:"PlaneGeometry",getSchemaFrom:Pi,getModelFrom:function(e){return xi||Ai(e),xi},registerModelTo:function(e){return xi||Ai(e),e}};
/**
 * @module Schemas/Geometries/PolyhedronBufferGeometry
 * @desc Export the ThreeJs PolyhedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Li}=$r;let Gi,Ri;function Ei(e){return Gi||function(e){const t=e.Schema;Gi=new t({})}(e),Gi}function ji(e){const t=Li.getModelFrom(e);Ri=t.discriminator("PolyhedronBufferGeometry",Ei(e))}var Vi={name:"PolyhedronBufferGeometry",getSchemaFrom:Ei,getModelFrom:function(e){return Ri||ji(e),Ri},registerModelTo:function(e){return Ri||ji(e),e}};
/**
 * @module Schemas/Geometries/PolyhedronGeometry
 * @desc Export the ThreeJs PolyhedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Hi}=Qr;let ki,$i;function zi(e){return ki||function(e){const t=e.Schema;ki=new t({})}(e),ki}function Yi(e){const t=Hi.getModelFrom(e);$i=t.discriminator("PolyhedronGeometry",zi(e))}var Xi={name:"PolyhedronGeometry",getSchemaFrom:zi,getModelFrom:function(e){return $i||Yi(e),$i},registerModelTo:function(e){return $i||Yi(e),e}};
/**
 * @module Schemas/Geometries/RingBufferGeometry
 * @desc Export the ThreeJs RingBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Zi}=$r;let Wi,Ki;function Qi(e){return Wi||function(e){const t=e.Schema;Wi=new t({})}(e),Wi}function Ji(e){const t=Zi.getModelFrom(e);Ki=t.discriminator("RingBufferGeometry",Qi(e))}var qi={name:"RingBufferGeometry",getSchemaFrom:Qi,getModelFrom:function(e){return Ki||Ji(e),Ki},registerModelTo:function(e){return Ki||Ji(e),e}};
/**
 * @module Schemas/Geometries/RingGeometry
 * @desc Export the ThreeJs RingGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ea}=Qr;let ta,ra;function na(e){return ta||function(e){const t=e.Schema;ta=new t({})}(e),ta}function oa(e){const t=ea.getModelFrom(e);ra=t.discriminator("RingGeometry",na(e))}var ia={name:"RingGeometry",getSchemaFrom:na,getModelFrom:function(e){return ra||oa(e),ra},registerModelTo:function(e){return ra||oa(e),e}};
/**
 * @module Schemas/Geometries/ShapeBufferGeometry
 * @desc Export the ThreeJs ShapeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:aa}=$r;let sa,ca;function da(e){return sa||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),o=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1}),i=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[o]},{id:!1,_id:!1});sa=new t({shapes:[i],curveSegments:Number})}(e),sa}function la(e){const t=aa.getModelFrom(e);ca=t.discriminator("ShapeBufferGeometry",da(e))}var ua={name:"ShapeBufferGeometry",getSchemaFrom:da,getModelFrom:function(e){return ca||la(e),ca},registerModelTo:function(e){return ca||la(e),e}};
/**
 * @module Schemas/Geometries/ShapeGeometry
 * @desc Export the ThreeJs ShapeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ma}=Qr;let ha,ga;function fa(e){return ha||function(e){const t=e.Schema;ha=new t({})}(e),ha}function pa(e){const t=ma.getModelFrom(e);ga=t.discriminator("ShapeGeometry",fa(e))}var _a={name:"ShapeGeometry",getSchemaFrom:fa,getModelFrom:function(e){return ga||pa(e),ga},registerModelTo:function(e){return ga||pa(e),e}};
/**
 * @module Schemas/Geometries/SphereBufferGeometry
 * @desc Export the ThreeJs SphereBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Sa}=$r;let ya,Fa;function Ma(e){return ya||function(e){const t=e.Schema;ya=new t({})}(e),ya}function ba(e){const t=Sa.getModelFrom(e);Fa=t.discriminator("SphereBufferGeometry",Ma(e))}var wa={name:"SphereBufferGeometry",getSchemaFrom:Ma,getModelFrom:function(e){return Fa||ba(e),Fa},registerModelTo:function(e){return Fa||ba(e),e}};
/**
 * @module Schemas/Geometries/SphereGeometry
 * @desc Export the ThreeJs SphereGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ta}=Qr;let va,Ba;function Oa(e){return va||function(e){const t=e.Schema;va=new t({})}(e),va}function Da(e){const t=Ta.getModelFrom(e);Ba=t.discriminator("SphereGeometry",Oa(e))}var Na={name:"SphereGeometry",getSchemaFrom:Oa,getModelFrom:function(e){return Ba||Da(e),Ba},registerModelTo:function(e){return Ba||Da(e),e}};
/**
 * @module Schemas/Geometries/TeapotBufferGeometry
 * @desc Export the ThreeJs TeapotBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ia}=$r;let Ca,xa;function Pa(e){return Ca||function(e){const t=e.Schema;Ca=new t({})}(e),Ca}function Aa(e){const t=Ia.getModelFrom(e);xa=t.discriminator("TeapotBufferGeometry",Pa(e))}var Ua={name:"TeapotBufferGeometry",getSchemaFrom:Pa,getModelFrom:function(e){return xa||Aa(e),xa},registerModelTo:function(e){return xa||Aa(e),e}};
/**
 * @module Schemas/Geometries/TetrahedronBufferGeometry
 * @desc Export the ThreeJs TetrahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:La}=$r;let Ga,Ra;function Ea(e){return Ga||function(e){const t=e.Schema;Ga=new t({})}(e),Ga}function ja(e){const t=La.getModelFrom(e);Ra=t.discriminator("TetrahedronBufferGeometry",Ea(e))}var Va={name:"TetrahedronBufferGeometry",getSchemaFrom:Ea,getModelFrom:function(e){return Ra||ja(e),Ra},registerModelTo:function(e){return Ra||ja(e),e}};
/**
 * @module Schemas/Geometries/TetrahedronGeometry
 * @desc Export the ThreeJs TetrahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ha}=Qr;let ka,$a;function za(e){return ka||function(e){const t=e.Schema;ka=new t({})}(e),ka}function Ya(e){const t=Ha.getModelFrom(e);$a=t.discriminator("TetrahedronGeometry",za(e))}var Xa={name:"TetrahedronGeometry",getSchemaFrom:za,getModelFrom:function(e){return $a||Ya(e),$a},registerModelTo:function(e){return $a||Ya(e),e}};
/**
 * @module Schemas/Geometries/TextBufferGeometry
 * @desc Export the ThreeJs TextBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Za}=$r;let Wa,Ka;function Qa(e){return Wa||function(e){const t=e.Schema;Wa=new t({})}(e),Wa}function Ja(e){const t=Za.getModelFrom(e);Ka=t.discriminator("TextBufferGeometry",Qa(e))}var qa={name:"TextBufferGeometry",getSchemaFrom:Qa,getModelFrom:function(e){return Ka||Ja(e),Ka},registerModelTo:function(e){return Ka||Ja(e),e}};
/**
 * @module Schemas/Geometries/TextGeometry
 * @desc Export the ThreeJs TextGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:es}=Qr;let ts,rs;function ns(e){return ts||function(e){const t=e.Schema;ts=new t({})}(e),ts}function os(e){const t=es.getModelFrom(e);rs=t.discriminator("TextGeometry",ns(e))}var is={name:"TextGeometry",getSchemaFrom:ns,getModelFrom:function(e){return rs||os(e),rs},registerModelTo:function(e){return rs||os(e),e}};
/**
 * @module Schemas/Geometries/TorusBufferGeometry
 * @desc Export the ThreeJs TorusBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:as}=$r;let ss,cs;function ds(e){return ss||function(e){const t=e.Schema;ss=new t({})}(e),ss}function ls(e){const t=as.getModelFrom(e);cs=t.discriminator("TorusBufferGeometry",ds(e))}var us={name:"TorusBufferGeometry",getSchemaFrom:ds,getModelFrom:function(e){return cs||ls(e),cs},registerModelTo:function(e){return cs||ls(e),e}};
/**
 * @module Schemas/Geometries/TorusGeometry
 * @desc Export the ThreeJs TorusGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ms}=Qr;let hs,gs;function fs(e){return hs||function(e){const t=e.Schema;hs=new t({})}(e),hs}function ps(e){const t=ms.getModelFrom(e);gs=t.discriminator("TorusGeometry",fs(e))}var _s={name:"TorusGeometry",getSchemaFrom:fs,getModelFrom:function(e){return gs||ps(e),gs},registerModelTo:function(e){return gs||ps(e),e}};
/**
 * @module Schemas/Geometries/TorusKnotBufferGeometry
 * @desc Export the ThreeJs TorusKnotBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ss}=$r;let ys,Fs;function Ms(e){return ys||function(e){const t=e.Schema;ys=new t({})}(e),ys}function bs(e){const t=Ss.getModelFrom(e);Fs=t.discriminator("TorusKnotBufferGeometry",Ms(e))}var ws={name:"TorusKnotBufferGeometry",getSchemaFrom:Ms,getModelFrom:function(e){return Fs||bs(e),Fs},registerModelTo:function(e){return Fs||bs(e),e}};
/**
 * @module Schemas/Geometries/TorusKnotGeometry
 * @desc Export the ThreeJs TorusKnotGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ts}=Qr;let vs,Bs;function Os(e){return vs||function(e){const t=e.Schema;vs=new t({})}(e),vs}function Ds(e){const t=Ts.getModelFrom(e);Bs=t.discriminator("TorusKnotGeometry",Os(e))}var Ns={name:"TorusKnotGeometry",getSchemaFrom:Os,getModelFrom:function(e){return Bs||Ds(e),Bs},registerModelTo:function(e){return Bs||Ds(e),e}};
/**
 * @module Schemas/Geometries/TubeBufferGeometry
 * @desc Export the ThreeJs TubeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Is}=$r;let Cs,xs;function Ps(e){return Cs||function(e){const t=e.Schema;Cs=new t({})}(e),Cs}function As(e){const t=Is.getModelFrom(e);xs=t.discriminator("TubeBufferGeometry",Ps(e))}var Us={name:"TubeBufferGeometry",getSchemaFrom:Ps,getModelFrom:function(e){return xs||As(e),xs},registerModelTo:function(e){return xs||As(e),e}};
/**
 * @module Schemas/Geometries/TubeGeometry
 * @desc Export the ThreeJs TubeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ls}=Qr;let Gs,Rs;function Es(e){return Gs||function(e){const t=e.Schema;Gs=new t({})}(e),Gs}function js(e){const t=Ls.getModelFrom(e);Rs=t.discriminator("TubeGeometry",Es(e))}var Vs={name:"TubeGeometry",getSchemaFrom:Es,getModelFrom:function(e){return Rs||js(e),Rs},registerModelTo:function(e){return Rs||js(e),e}};
/**
 * @module Schemas/Geometries/WireframeGeometry
 * @desc Export the ThreeJs WireframeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Hs}=Qr;let ks,$s;function zs(e){return ks||function(e){const t=e.Schema;ks=new t({})}(e),ks}function Ys(e){const t=Hs.getModelFrom(e);$s=t.discriminator("WireframeGeometry",zs(e))}var Xs={name:"WireframeGeometry",getSchemaFrom:zs,getModelFrom:function(e){return $s||Ys(e),$s},registerModelTo:function(e){return $s||Ys(e),e}};
/**
 * @module Schemas/Helpers/ArrowHelper
 * @desc Export the ThreeJs ArrowHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Zs}=D;let Ws,Ks;function Qs(e){return Ws||function(e){const t=e.Schema;Ws=new t({})}(e),Ws}function Js(e){const t=Zs.getModelFrom(e);Ks=t.discriminator("ArrowHelper",Qs(e))}var qs={name:"ArrowHelper",getSchemaFrom:Qs,getModelFrom:function(e){return Ks||Js(e),Ks},registerModelTo:function(e){return Ks||Js(e),e}};
/**
 * @module Schemas/Helpers/AxesHelper
 * @desc Export the ThreeJs AxesHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ec}=D;let tc,rc;function nc(e){return tc||function(e){const t=e.Schema;tc=new t({})}(e),tc}function oc(e){const t=ec.getModelFrom(e);rc=t.discriminator("AxesHelper",nc(e))}var ic={name:"AxesHelper",getSchemaFrom:nc,getModelFrom:function(e){return rc||oc(e),rc},registerModelTo:function(e){return rc||oc(e),e}};
/**
 * @module Schemas/Helpers/Box3Helper
 * @desc Export the ThreeJs Box3Helper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ac}=D;let sc,cc;function dc(e){return sc||function(e){const t=e.Schema;sc=new t({})}(e),sc}function lc(e){const t=ac.getModelFrom(e);cc=t.discriminator("Box3Helper",dc(e))}var uc={name:"Box3Helper",getSchemaFrom:dc,getModelFrom:function(e){return cc||lc(e),cc},registerModelTo:function(e){return cc||lc(e),e}};
/**
 * @module Schemas/Helpers/BoxHelper
 * @desc Export the ThreeJs BoxHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:mc}=D;let hc,gc;function fc(e){return hc||function(e){const t=e.Schema;hc=new t({})}(e),hc}function pc(e){const t=mc.getModelFrom(e);gc=t.discriminator("BoxHelper",fc(e))}var _c={name:"BoxHelper",getSchemaFrom:fc,getModelFrom:function(e){return gc||pc(e),gc},registerModelTo:function(e){return gc||pc(e),e}};
/**
 * @module Schemas/Helpers/CameraHelper
 * @desc Export the ThreeJs CameraHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Sc}=D;let yc,Fc;function Mc(e){return yc||function(e){const t=e.Schema;yc=new t({})}(e),yc}function bc(e){const t=Sc.getModelFrom(e);Fc=t.discriminator("CameraHelper",Mc(e))}var wc={name:"CameraHelper",getSchemaFrom:Mc,getModelFrom:function(e){return Fc||bc(e),Fc},registerModelTo:function(e){return Fc||bc(e),e}};
/**
 * @module Schemas/Helpers/DirectionalLightHelper
 * @desc Export the ThreeJs DirectionalLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Tc}=D;let vc,Bc;function Oc(e){return vc||function(e){const t=e.Schema;vc=new t({})}(e),vc}function Dc(e){const t=Tc.getModelFrom(e);Bc=t.discriminator("DirectionalLightHelper",Oc(e))}var Nc={name:"DirectionalLightHelper",getSchemaFrom:Oc,getModelFrom:function(e){return Bc||Dc(e),Bc},registerModelTo:function(e){return Bc||Dc(e),e}};
/**
 * @module Schemas/Helpers/FaceNormalsHelper
 * @desc Export the ThreeJs FaceNormalsHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ic}=D;let Cc,xc;function Pc(e){return Cc||function(e){const t=e.Schema;Cc=new t({})}(e),Cc}function Ac(e){const t=Ic.getModelFrom(e);xc=t.discriminator("FaceNormalsHelper",Pc(e))}var Uc={name:"FaceNormalsHelper",getSchemaFrom:Pc,getModelFrom:function(e){return xc||Ac(e),xc},registerModelTo:function(e){return xc||Ac(e),e}};
/**
 * @module Schemas/Helpers/GridHelper
 * @desc Export the ThreeJs GridHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Lc}=D;let Gc,Rc;function Ec(e){return Gc||function(e){const t=e.Schema;Gc=new t({})}(e),Gc}function jc(e){const t=Lc.getModelFrom(e);Rc=t.discriminator("GridHelper",Ec(e))}var Vc={name:"GridHelper",getSchemaFrom:Ec,getModelFrom:function(e){return Rc||jc(e),Rc},registerModelTo:function(e){return Rc||jc(e),e}};
/**
 * @module Schemas/Helpers/HemisphereLightHelper
 * @desc Export the ThreeJs HemisphereLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Hc}=D;let kc,$c;function zc(e){return kc||function(e){const t=e.Schema;kc=new t({})}(e),kc}function Yc(e){const t=Hc.getModelFrom(e);$c=t.discriminator("HemisphereLightHelper",zc(e))}var Xc={name:"HemisphereLightHelper",getSchemaFrom:zc,getModelFrom:function(e){return $c||Yc(e),$c},registerModelTo:function(e){return $c||Yc(e),e}};
/**
 * @module Schemas/Helpers/PlaneHelper
 * @desc Export the ThreeJs PlaneHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Zc}=D;let Wc,Kc;function Qc(e){return Wc||function(e){const t=e.Schema;Wc=new t({})}(e),Wc}function Jc(e){const t=Zc.getModelFrom(e);Kc=t.discriminator("PlaneHelper",Qc(e))}var qc={name:"PlaneHelper",getSchemaFrom:Qc,getModelFrom:function(e){return Kc||Jc(e),Kc},registerModelTo:function(e){return Kc||Jc(e),e}};
/**
 * @module Schemas/Helpers/PointLightHelper
 * @desc Export the ThreeJs PointLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ed}=D;let td,rd;function nd(e){return td||function(e){const t=e.Schema;td=new t({})}(e),td}function od(e){const t=ed.getModelFrom(e);rd=t.discriminator("PointLightHelper",nd(e))}var id={name:"PointLightHelper",getSchemaFrom:nd,getModelFrom:function(e){return rd||od(e),rd},registerModelTo:function(e){return rd||od(e),e}};
/**
 * @module Schemas/Helpers/PolarGridHelper
 * @desc Export the ThreeJs PolarGridHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ad}=D;let sd,cd;function dd(e){return sd||function(e){const t=e.Schema;sd=new t({})}(e),sd}function ld(e){const t=ad.getModelFrom(e);cd=t.discriminator("PolarGridHelper",dd(e))}var ud={name:"PolarGridHelper",getSchemaFrom:dd,getModelFrom:function(e){return cd||ld(e),cd},registerModelTo:function(e){return cd||ld(e),e}};
/**
 * @module Schemas/Helpers/RectAreaLightHelper
 * @desc Export the ThreeJs RectAreaLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:md}=D;let hd,gd;function fd(e){return hd||function(e){const t=e.Schema;hd=new t({})}(e),hd}function pd(e){const t=md.getModelFrom(e);gd=t.discriminator("RectAreaLightHelper",fd(e))}var _d={name:"RectAreaLightHelper",getSchemaFrom:fd,getModelFrom:function(e){return gd||pd(e),gd},registerModelTo:function(e){return gd||pd(e),e}};
/**
 * @module Schemas/Helpers/SkeletonHelper
 * @desc Export the ThreeJs SkeletonHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Sd}=D;let yd,Fd;function Md(e){return yd||function(e){const t=e.Schema;yd=new t({})}(e),yd}function bd(e){const t=Sd.getModelFrom(e);Fd=t.discriminator("SkeletonHelper",Md(e))}var wd={name:"SkeletonHelper",getSchemaFrom:Md,getModelFrom:function(e){return Fd||bd(e),Fd},registerModelTo:function(e){return Fd||bd(e),e}};
/**
 * @module Schemas/Helpers/SpotLightHelper
 * @desc Export the ThreeJs SpotLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Td}=D;let vd,Bd;function Od(e){return vd||function(e){const t=e.Schema;vd=new t({})}(e),vd}function Dd(e){const t=Td.getModelFrom(e);Bd=t.discriminator("SpotLightHelper",Od(e))}var Nd={name:"SpotLightHelper",getSchemaFrom:Od,getModelFrom:function(e){return Bd||Dd(e),Bd},registerModelTo:function(e){return Bd||Dd(e),e}};
/**
 * @module Schemas/Helpers/VertexNormalsHelper
 * @desc Export the ThreeJs VertexNormalsHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Id}=D;let Cd,xd;function Pd(e){return Cd||function(e){const t=e.Schema;Cd=new t({})}(e),Cd}function Ad(e){const t=Id.getModelFrom(e);xd=t.discriminator("VertexNormalsHelper",Pd(e))}var Ud={name:"VertexNormalsHelper",getSchemaFrom:Pd,getModelFrom:function(e){return xd||Ad(e),xd},registerModelTo:function(e){return xd||Ad(e),e}};
/**
 * @module Schemas/Lights/AmbientLight
 * @desc Export the ThreeJs AmbientLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ld}=D;let Gd,Rd;function Ed(e){return Gd||function(e){const t=e.Schema;Gd=new t({})}(e),Gd}function jd(e){const t=Ld.getModelFrom(e);Rd=t.discriminator("AmbientLight",Ed(e))}var Vd={name:"AmbientLight",getSchemaFrom:Ed,getModelFrom:function(e){return Rd||jd(e),Rd},registerModelTo:function(e){return Rd||jd(e),e}};
/**
 * @module Schemas/Lights/DirectionalLight
 * @desc Export the ThreeJs DirectionalLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Hd}=D;let kd,$d;function zd(e){return kd||function(e){const t=e.Schema;kd=new t({})}(e),kd}function Yd(e){const t=Hd.getModelFrom(e);$d=t.discriminator("DirectionalLight",zd(e))}var Xd={name:"DirectionalLight",getSchemaFrom:zd,getModelFrom:function(e){return $d||Yd(e),$d},registerModelTo:function(e){return $d||Yd(e),e}};
/**
 * @module Schemas/Lights/HemisphereLight
 * @desc Export the ThreeJs HemisphereLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Zd}=D;let Wd,Kd;function Qd(e){return Wd||function(e){const t=e.Schema;Wd=new t({})}(e),Wd}function Jd(e){const t=Zd.getModelFrom(e);Kd=t.discriminator("HemisphereLight",Qd(e))}var qd={name:"HemisphereLight",getSchemaFrom:Qd,getModelFrom:function(e){return Kd||Jd(e),Kd},registerModelTo:function(e){return Kd||Jd(e),e}};
/**
 * @module Schemas/Lights/Light
 * @desc Export the ThreeJs Light Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:el}=D;let tl,rl;function nl(e){return tl||function(e){const t=e.Schema;tl=new t({})}(e),tl}function ol(e){const t=el.getModelFrom(e);rl=t.discriminator("Light",nl(e))}var il={name:"Light",getSchemaFrom:nl,getModelFrom:function(e){return rl||ol(e),rl},registerModelTo:function(e){return rl||ol(e),e}};
/**
 * @module Schemas/Lights/PointLight
 * @desc Export the ThreeJs PointLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:al}=D;let sl,cl;function dl(e){return sl||function(e){const t=e.Schema;sl=new t({})}(e),sl}function ll(e){const t=al.getModelFrom(e);cl=t.discriminator("PointLight",dl(e))}var ul={name:"PointLight",getSchemaFrom:dl,getModelFrom:function(e){return cl||ll(e),cl},registerModelTo:function(e){return cl||ll(e),e}};
/**
 * @module Schemas/Lights/RectAreaLight
 * @desc Export the ThreeJs RectAreaLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ml}=D;let hl,gl;function fl(e){return hl||function(e){const t=e.Schema;hl=new t({})}(e),hl}function pl(e){const t=ml.getModelFrom(e);gl=t.discriminator("RectAreaLight",fl(e))}var _l={name:"RectAreaLight",getSchemaFrom:fl,getModelFrom:function(e){return gl||pl(e),gl},registerModelTo:function(e){return gl||pl(e),e}};
/**
 * @module Schemas/Lights/SpotLight
 * @desc Export the ThreeJs SpotLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Sl}=D;let yl,Fl;function Ml(e){return yl||function(e){const t=e.Schema;yl=new t({})}(e),yl}function bl(e){const t=Sl.getModelFrom(e);Fl=t.discriminator("SpotLight",Ml(e))}var wl={name:"SpotLight",getSchemaFrom:Ml,getModelFrom:function(e){return Fl||bl(e),Fl},registerModelTo:function(e){return Fl||bl(e),e}},Tl={};
/**
 * @module Schemas/Materials/Material
 * @desc Export the ThreeJs Material Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
let vl,Bl;function Ol(e){return vl||function(e){const t=e.Schema,r=t.Types.Mixed;vl=new t({uuid:String,name:String,type:String,fog:Boolean,lights:Boolean,blending:Number,side:Number,flatShading:Boolean,vertexColors:Number,opacity:Number,transparent:Boolean,blendSrc:Number,blendDst:Number,blendEquation:Number,blendSrcAlpha:String,blendDstAlpha:String,blendEquationAlpha:String,depthFunc:Number,depthTest:Boolean,depthWrite:Boolean,clippingPlanes:r,clipIntersection:Boolean,clipShadows:Boolean,colorWrite:Boolean,precision:Number,polygonOffset:Boolean,polygonOffsetFactor:Number,polygonOffsetUnits:Number,dithering:Boolean,alphaTest:Number,premultipliedAlpha:Boolean,overdraw:Number,visible:Boolean,userData:r,needsUpdate:Boolean},{collection:"materials",discriminatorKey:"type"})}(e),vl}function Dl(e){Bl=e.model("Materials",Ol(e)),Bl.discriminator("Material",new e.Schema({}))}var Nl=Tl.Material={name:"Material",getSchemaFrom:Ol,getModelFrom:function(e){return Bl||Dl(e),Bl},registerModelTo:function(e){return Bl||Dl(e),e}};
/**
 * @module Schemas/Materials/LineBasicMaterial
 * @desc Export the ThreeJs LineBasicMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Il}=Tl;let Cl,xl;function Pl(e){return Cl||function(e){const t=e.Schema,r=t.Types.Color;Cl=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String})}(e),Cl}function Al(e){const t=Il.getModelFrom(e);xl=t.discriminator("LineBasicMaterial",Pl(e))}var Ul={name:"LineBasicMaterial",getSchemaFrom:Pl,getModelFrom:function(e){return xl||Al(e),xl},registerModelTo:function(e){return xl||Al(e),e}};
/**
 * @module Schemas/Materials/LineDashedMaterial
 * @desc Export the ThreeJs LineDashedMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Ll}=Tl;let Gl,Rl;function El(e){return Gl||function(e){const t=e.Schema,r=t.Types.Color;Gl=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String,dashSize:Number,gapSize:Number,scale:Number})}(e),Gl}function jl(e){const t=Ll.getModelFrom(e);Rl=t.discriminator("LineDashedMaterial",El(e))}var Vl={name:"LineDashedMaterial",getSchemaFrom:El,getModelFrom:function(e){return Rl||jl(e),Rl},registerModelTo:function(e){return Rl||jl(e),e}};
/**
 * @module Schemas/Materials/MeshBasicMaterial
 * @desc Export the ThreeJs MeshBasicMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Hl}=Tl;let kl,$l;function zl(e){return kl||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color;kl=new t({color:o,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,light:Boolean})}(e),kl}function Yl(e){const t=Hl.getModelFrom(e);$l=t.discriminator("MeshBasicMaterial",zl(e))}var Xl={name:"MeshBasicMaterial",getSchemaFrom:zl,getModelFrom:function(e){return $l||Yl(e),$l},registerModelTo:function(e){return $l||Yl(e),e}};
/**
 * @module Schemas/Materials/MeshDepthMaterial
 * @desc Export the ThreeJs MeshDepthMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Zl}=Tl;let Wl,Kl;function Ql(e){return Wl||function(e){const t=e.Schema,r=t.Types.Mixed;Wl=new t({depthPacking:Number,skinning:Boolean,morphTargets:Boolean,map:r,alphaMap:r,displacementMap:r,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean})}(e),Wl}function Jl(e){const t=Zl.getModelFrom(e);Kl=t.discriminator("MeshDepthMaterial",Ql(e))}var ql={name:"MeshDepthMaterial",getSchemaFrom:Ql,getModelFrom:function(e){return Kl||Jl(e),Kl},registerModelTo:function(e){return Kl||Jl(e),e}};
/**
 * @module Schemas/Materials/MeshLambertMaterial
 * @desc Export the ThreeJs MeshLambertMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:eu}=Tl;let tu,ru;function nu(e){return tu||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;tu=new t({color:n,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,emissive:n,emissiveIntensity:Number,emissiveMap:o,specularMap:o,alphaMap:o,envMap:o,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),tu}function ou(e){const t=eu.getModelFrom(e);ru=t.discriminator("MeshLambertMaterial",nu(e))}var iu={name:"MeshLambertMaterial",getSchemaFrom:nu,getModelFrom:function(e){return ru||ou(e),ru},registerModelTo:function(e){return ru||ou(e),e}};
/**
 * @module Schemas/Materials/MeshNormalMaterial
 * @desc Export the ThreeJs MeshNormalMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:au}=Tl;let su,cu;function du(e){return su||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Vector2;su=new t({bumpMap:n,bumpScale:Number,normalMap:n,normalScale:o,displacementMap:n,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),su}function lu(e){const t=au.getModelFrom(e);cu=t.discriminator("MeshNormalMaterial",du(e))}var uu={name:"MeshNormalMaterial",getSchemaFrom:du,getModelFrom:function(e){return cu||lu(e),cu},registerModelTo:function(e){return cu||lu(e),e}};
/**
 * @module Schemas/Materials/MeshPhongMaterial
 * @desc Export the ThreeJs MeshPhongMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:mu}=Tl;let hu,gu;function fu(e){return hu||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,i=r.Vector2;hu=new t({color:o,specular:o,shininess:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:i,displacementMap:n,displacementScale:Number,displacementBias:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),hu}function pu(e){const t=mu.getModelFrom(e);gu=t.discriminator("MeshPhongMaterial",fu(e))}var _u={name:"MeshPhongMaterial",getSchemaFrom:fu,getModelFrom:function(e){return gu||pu(e),gu},registerModelTo:function(e){return gu||pu(e),e}};
/**
 * @module Schemas/Materials/MeshPhysicalMaterial
 * @desc Export the ThreeJs MeshPhysicalMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Su}=Tl;let yu,Fu;function Mu(e){return yu||function(e){const t=e.Schema;yu=new t({reflectivity:Number,clearCoat:Number,clearCoatRoughness:Number})}(e),yu}function bu(e){const t=Su.getModelFrom(e);Fu=t.discriminator("MeshPhysicalMaterial",Mu(e))}var wu={name:"MeshPhysicalMaterial",getSchemaFrom:Mu,getModelFrom:function(e){return Fu||bu(e),Fu},registerModelTo:function(e){return Fu||bu(e),e}};
/**
 * @module Schemas/Materials/MeshStandardMaterial
 * @desc Export the ThreeJs MeshStandardMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Tu}=Tl;let vu,Bu;function Ou(e){return vu||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,i=r.Vector2;vu=new t({color:o,roughness:Number,metalness:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:i,displacementMap:n,displacementScale:Number,displacementBias:Number,roughnessMap:n,metalnessMap:n,alphaMap:n,envMap:n,envMapIntensity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),vu}function Du(e){const t=Tu.getModelFrom(e);Bu=t.discriminator("MeshStandardMaterial",Ou(e))}var Nu={name:"MeshStandardMaterial",getSchemaFrom:Ou,getModelFrom:function(e){return Bu||Du(e),Bu},registerModelTo:function(e){return Bu||Du(e),e}};
/**
 * @module Schemas/Materials/MeshToonMaterial
 * @desc Export the ThreeJs MeshToonMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Iu}=Tl;let Cu,xu;function Pu(e){return Cu||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,i=r.Vector2;Cu=new t({color:o,specular:o,shininess:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:i,displacementMap:n,displacementScale:Number,displacementBias:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,gradientMap:n})}(e),Cu}function Au(e){const t=Iu.getModelFrom(e);xu=t.discriminator("MeshToonMaterial",Pu(e))}var Uu={name:"MeshToonMaterial",getSchemaFrom:Pu,getModelFrom:function(e){return xu||Au(e),xu},registerModelTo:function(e){return xu||Au(e),e}};
/**
 * @module Schemas/Materials/PointsMaterial
 * @desc Export the ThreeJs PointsMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Lu}=Tl;let Gu,Ru;function Eu(e){return Gu||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;Gu=new t({color:n,map:o,size:Number,sizeAttenuation:Boolean,lights:Boolean})}(e),Gu}function ju(e){const t=Lu.getModelFrom(e);Ru=t.discriminator("PointsMaterial",Eu(e))}var Vu={name:"PointsMaterial",getSchemaFrom:Eu,getModelFrom:function(e){return Ru||ju(e),Ru},registerModelTo:function(e){return Ru||ju(e),e}};
/**
 * @module Schemas/Materials/RawShaderMaterial
 * @desc Export the ThreeJs RawShaderMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Hu}=Tl;let ku,$u;function zu(e){return ku||function(e){const t=e.Schema,r=t.Types.Mixed;ku=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),ku}function Yu(e){const t=Hu.getModelFrom(e);$u=t.discriminator("RawShaderMaterial",zu(e))}var Xu={name:"RawShaderMaterial",getSchemaFrom:zu,getModelFrom:function(e){return $u||Yu(e),$u},registerModelTo:function(e){return $u||Yu(e),e}};
/**
 * @module Schemas/Materials/ShaderMaterial
 * @desc Export the ThreeJs ShaderMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Zu}=Tl;let Wu,Ku;function Qu(e){return Wu||function(e){const t=e.Schema,r=t.Types.Mixed;Wu=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),Wu}function Ju(e){const t=Zu.getModelFrom(e);Ku=t.discriminator("ShaderMaterial",Qu(e))}var qu={name:"ShaderMaterial",getSchemaFrom:Qu,getModelFrom:function(e){return Ku||Ju(e),Ku},registerModelTo:function(e){return Ku||Ju(e),e}};
/**
 * @module Schemas/Materials/ShadowMaterial
 * @desc Export the ThreeJs ShadowMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:em}=Tl;let tm,rm;function nm(e){return tm||function(e){const t=e.Schema,r=t.Types.Color;tm=new t({color:r,opacity:Number,lights:Boolean,transparent:Boolean})}(e),tm}function om(e){const t=em.getModelFrom(e);rm=t.discriminator("ShadowMaterial",nm(e))}var im={name:"ShadowMaterial",getSchemaFrom:nm,getModelFrom:function(e){return rm||om(e),rm},registerModelTo:function(e){return rm||om(e),e}};
/**
 * @module Schemas/Materials/SpriteMaterial
 * @desc Export the ThreeJs SpriteMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:am}=Tl;let sm,cm;function dm(e){return sm||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;sm=new t({color:n,map:o,rotation:Number,fog:Boolean,lights:Boolean})}(e),sm}function lm(e){const t=am.getModelFrom(e);cm=t.discriminator("SpriteMaterial",dm(e))}var um={name:"SpriteMaterial",getSchemaFrom:dm,getModelFrom:function(e){return cm||lm(e),cm},registerModelTo:function(e){return cm||lm(e),e}};
/**
 * @module Schemas/Math/Box2
 * @desc Export the ThreeJs Box2 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let mm;var hm={name:"Box2",getSchemaFrom:function(e){return mm||function(e){const t=e.Schema,r=t.Types.Vector2;mm=new t({min:r,max:r},{_id:!1,id:!1})}(e),mm},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Box3
 * @desc Export the ThreeJs Box3 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let gm;var fm={name:"Box3",getSchemaFrom:function(e){return gm||function(e){const t=e.Schema,r=t.Types.Vector3;gm=new t({min:r,max:r},{_id:!1,id:!1})}(e),gm},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Line3
 * @desc Export the ThreeJs Line3 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let pm;var _m={name:"Line3",getSchemaFrom:function(e){return pm||function(e){const t=e.Schema,r=t.Types.Vector3;pm=new t({start:r,end:r},{_id:!1,id:!1})}(e),pm},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Plane
 * @desc Export the ThreeJs Plane Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Sm;var ym={name:"Plane",getSchemaFrom:function(e){return Sm||function(e){const t=e.Schema,r=t.Types.Vector3;Sm=new t({normal:r,constant:Number},{_id:!1,id:!1})}(e),Sm},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Ray
 * @desc Export the ThreeJs Ray Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Fm;var Mm={name:"Ray",getSchemaFrom:function(e){return Fm||function(e){const t=e.Schema,r=t.Types.Vector3;Fm=new t({origin:r,direction:r},{_id:!1,id:!1})}(e),Fm},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Sphere
 * @desc Export the ThreeJs Sphere Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let bm;var wm={name:"Sphere",getSchemaFrom:function(e){return bm||function(e){const t=e.Schema,r=t.Types.Vector3;bm=new t({center:r,radius:Number},{_id:!1,id:!1})}(e),bm},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Spherical
 * @desc Export the ThreeJs Spherical Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Tm;var vm={name:"Spherical",getSchemaFrom:function(e){return Tm||function(e){const t=e.Schema;Tm=new t({radius:Number,phi:Number,theta:Number},{_id:!1,id:!1})}(e),Tm},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Triangle
 * @desc Export the ThreeJs Triangle Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Bm;var Om={name:"Triangle",getSchemaFrom:function(e){return Bm||function(e){const t=e.Schema,r=t.Types.Vector3;Bm=new t({a:r,b:r,c:r},{_id:!1,id:!1})}(e),Bm},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Objects/Bone
 * @desc Export the ThreeJs Bone Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Dm}=D;let Nm,Im;function Cm(e){return Nm||function(e){const t=e.Schema;Nm=new t({})}(e),Nm}function xm(e){const t=Dm.getModelFrom(e);Im=t.discriminator("Bone",Cm(e))}var Pm={name:"Bone",getSchemaFrom:Cm,getModelFrom:function(e){return Im||xm(e),Im},registerModelTo:function(e){return Im||xm(e),e}};
/**
 * @module Schemas/Objects/Group
 * @desc Export the ThreeJs Group Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Am,Um;function Lm(e){return Am||function(e){const t=e.Schema;Am=new t({})}(e),Am}function Gm(e){const t=O.getModelFrom(e);Um=t.discriminator("Group",Lm(e))}const Rm={name:"Group",getSchemaFrom:Lm,getModelFrom:function(e){return Um||Gm(e),Um},registerModelTo:function(e){return Um||Gm(e),e}},{Object3D:Em}=D;
/**
 * @module Schemas/Objects/ImmediateRenderObject
 * @desc Export the ThreeJs ImmediateRenderObject Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let jm,Vm;function Hm(e){return jm||function(e){const t=e.Schema;jm=new t({})}(e),jm}function km(e){const t=Em.getModelFrom(e);Vm=t.discriminator("ImmediateRenderObject",Hm(e))}var $m={name:"ImmediateRenderObject",getSchemaFrom:Hm,getModelFrom:function(e){return Vm||km(e),Vm},registerModelTo:function(e){return Vm||km(e),e}};
/**
 * @module Schemas/Objects/LensFlare
 * @desc Export the ThreeJs LensFlare Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:zm}=D;let Ym,Xm;function Zm(e){return Ym||function(e){const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Color,i=r.Vector3;Ym=new t({lensFlares:[{texture:n,size:Number,distance:Number,x:Number,y:Number,z:Number,scale:Number,rotation:Number,opacity:Number,color:o,blending:Number}],positionScreen:i})}(e),Ym}function Wm(e){const t=zm.getModelFrom(e);Xm=t.discriminator("LensFlare",Zm(e))}var Km={name:"LensFlare",getSchemaFrom:Zm,getModelFrom:function(e){return Xm||Wm(e),Xm},registerModelTo:function(e){return Xm||Wm(e),e}};
/**
 * @module Schemas/Objects/Line
 * @desc Export the ThreeJs Line Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Qm}=D;let Jm,qm;function eh(e){return Jm||function(e){const t=e.Schema,r=t.Types.ObjectId;Jm=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),Jm}function th(e){const t=Qm.getModelFrom(e);qm=t.discriminator("Line",eh(e))}var rh={name:"Line",getSchemaFrom:eh,getModelFrom:function(e){return qm||th(e),qm},registerModelTo:function(e){return qm||th(e),e}};
/**
 * @module Schemas/Objects/LineLoop
 * @desc Export the ThreeJs LineLoop Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:nh}=D;let oh,ih;function ah(e){return oh||function(e){const t=e.Schema,r=t.Types.ObjectId;oh=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),oh}function sh(e){const t=nh.getModelFrom(e);ih=t.discriminator("LineLoop",ah(e))}var ch={name:"LineLoop",getSchemaFrom:ah,getModelFrom:function(e){return ih||sh(e),ih},registerModelTo:function(e){return ih||sh(e),e}};
/**
 * @module Schemas/Objects/LineSegments
 * @desc Export the ThreeJs LineSegments Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:dh}=D;let lh,uh;function mh(e){return lh||function(e){const t=e.Schema,r=t.Types.ObjectId;lh=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),lh}function hh(e){const t=dh.getModelFrom(e);uh=t.discriminator("LineSegments",mh(e))}var gh={name:"LineSegments",getSchemaFrom:mh,getModelFrom:function(e){return uh||hh(e),uh},registerModelTo:function(e){return uh||hh(e),e}};
/**
 * @module Schemas/Objects/LOD
 * @desc Export the ThreeJs LOD Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:fh}=D;let ph,_h;function Sh(e){return ph||function(e){const t=e.Schema,r=t.Types.Mixed;ph=new t({levels:[r]})}(e),ph}function yh(e){const t=fh.getModelFrom(e);_h=t.discriminator("LOD",Sh(e))}var Fh={name:"LOD",getSchemaFrom:Sh,getModelFrom:function(e){return _h||yh(e),_h},registerModelTo:function(e){return _h||yh(e),e}};
/**
 * @module Schemas/Objects/Mesh
 * @desc Export the ThreeJs Mesh Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Mh}=D;let bh,wh;function Th(e){return bh||function(e){const t=e.Schema,r=t.Types.ObjectId;bh=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number})}(e),bh}function vh(e){const t=Mh.getModelFrom(e);wh=t.discriminator("Mesh",Th(e))}var Bh={name:"Mesh",getSchemaFrom:Th,getModelFrom:function(e){return wh||vh(e),wh},registerModelTo:function(e){return wh||vh(e),e}};
/**
 * @module Schemas/Objects/Points
 * @desc Export the ThreeJs Points Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Oh}=D;let Dh,Nh;function Ih(e){return Dh||function(e){const t=e.Schema,r=t.Types.ObjectId;Dh=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"PointsMaterial"}],drawMode:Number})}(e),Dh}function Ch(e){const t=Oh.getModelFrom(e);Nh=t.discriminator("Points",Ih(e))}var xh={name:"Points",getSchemaFrom:Ih,getModelFrom:function(e){return Nh||Ch(e),Nh},registerModelTo:function(e){return Nh||Ch(e),e}};
/**
 * @module Schemas/Objects/Skeleton
 * @desc Export the ThreeJs Skeleton Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ph}=D;let Ah,Uh;function Lh(e){return Ah||function(e){const t=e.Schema,r=t.Types.ObjectId;Ah=new t({bones:[r],boneMatrices:[Number]})}(e),Ah}function Gh(e){const t=Ph.getModelFrom(e);Uh=t.discriminator("Skeleton",Lh(e))}var Rh={name:"Skeleton",getSchemaFrom:Lh,getModelFrom:function(e){return Uh||Gh(e),Uh},registerModelTo:function(e){return Uh||Gh(e),e}};
/**
 * @module Schemas/Objects/SkinnedMesh
 * @desc Export the ThreeJs SkinnedMesh Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Eh}=D;let jh,Vh;function Hh(e){return jh||function(e){const t=e.Schema,r=t.Types.ObjectId;jh=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number,bindMode:String,bindMatrix:[Number],bindMatrixInverse:[Number]})}(e),jh}function kh(e){const t=Eh.getModelFrom(e);Vh=t.discriminator("SkinnedMesh",Hh(e))}var $h={name:"SkinnedMesh",getSchemaFrom:Hh,getModelFrom:function(e){return Vh||kh(e),Vh},registerModelTo:function(e){return Vh||kh(e),e}};
/**
 * @module Schemas/Objects/Sprite
 * @desc Export the ThreeJs Sprite Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:zh}=D;let Yh,Xh;function Zh(e){return Yh||function(e){const t=e.Schema,r=t.Types.ObjectId;Yh=new t({material:[{type:r,ref:"SpriteMaterial"}]})}(e),Yh}function Wh(e){const t=zh.getModelFrom(e);Xh=t.discriminator("Sprite",Zh(e))}var Kh={name:"Sprite",getSchemaFrom:Zh,getModelFrom:function(e){return Xh||Wh(e),Xh},registerModelTo:function(e){return Xh||Wh(e),e}},Qh={};
/**
 * @module Schemas/Scenes/Fog
 * @desc Export the ThreeJs Fog Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Scenes/Scene Schemas/Scenes/Scene}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
let Jh;var qh=Qh.Fog={name:"Fog",getSchemaFrom:function(e){return Jh||function(e){const t=e.Schema;Jh=new t({coordinates:{x:Number,y:Number,z:Number},orientation:{x:Number,y:Number,z:Number},thumbnail:Buffer,path:String},{_id:!1,id:!1})}(e),Jh},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Scenes/FogExp2
 * @desc Export the ThreeJs FogExp2 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 * @requires {@link module:Schemas/Scenes/Fog Schemas/Scenes/Fog}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:eg}=D,{Fog:tg}=Qh;let rg,ng;function og(e){return rg||function(e){const t=tg.getSchemaFrom(e),r=e.Schema,n=r.Types.Color;rg=new r({background:n,fog:t,overrideMaterial:String,autoUpdate:Boolean})}(e),rg}function ig(e){const t=eg.getModelFrom(e);ng=t.discriminator("Scene",og(e))}var ag={name:"Scene",getSchemaFrom:og,getModelFrom:function(e){return ng||ig(e),ng},registerModelTo:function(e){return ng||ig(e),e}},sg={};
/**
 * @module Schemas/Textures/Texture
 * @desc Export the ThreeJs Texture Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
let cg,dg;function lg(e){return cg||function(e){const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Vector2,i=r.Matrix3;cg=new t({uuid:String,name:String,image:n,mipmaps:[],mapping:Number,wrapS:Number,wrapT:Number,magFilter:Number,minFilter:Number,anisotropy:Number,format:Number,type:Number,offset:o,repeat:o,center:o,rotation:Number,matrixAutoUpdate:Boolean,matrix:i,generateMipmaps:Boolean,premultiplyAlpha:Boolean,flipY:Boolean,unpackAlignment:Number,encoding:Number,version:Number},{collection:"textures",discriminatorKey:"type"})}(e),cg}function ug(e){dg=e.model("Textures",lg(e)),dg.discriminator("Texture",new e.Schema({}))}var mg=sg.Texture={name:"Texture",getSchemaFrom:lg,getModelFrom:function(e){return dg||ug(e),dg},registerModelTo:function(e){return dg||ug(e),e}};
/**
 * @module Schemas/Textures/CanvasTexture
 * @desc Export the ThreeJs CanvasTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:hg}=sg;let gg,fg;function pg(e){return gg||function(e){const t=e.Schema;gg=new t({needsUpdate:Boolean})}(e),gg}function _g(e){const t=hg.getModelFrom(e);fg=t.discriminator("CanvasTexture",pg(e))}var Sg={name:"CanvasTexture",getSchemaFrom:pg,getModelFrom:function(e){return fg||_g(e),fg},registerModelTo:function(e){return fg||_g(e),e}};
/**
 * @module Schemas/Textures/CompressedTexture
 * @desc Export the ThreeJs CompressedTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:yg}=sg;let Fg,Mg;function bg(e){return Fg||function(e){const t=e.Schema;Fg=new t({})}(e),Fg}function wg(e){const t=yg.getModelFrom(e);Mg=t.discriminator("CompressedTexture",bg(e))}var Tg={name:"CompressedTexture",getSchemaFrom:bg,getModelFrom:function(e){return Mg||wg(e),Mg},registerModelTo:function(e){return Mg||wg(e),e}};
/**
 * @module Schemas/Textures/CubeTexture
 * @desc Export the ThreeJs CubeTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:vg}=sg;let Bg,Og;function Dg(e){return Bg||function(e){const t=e.Schema;Bg=new t({})}(e),Bg}function Ng(e){const t=vg.getModelFrom(e);Og=t.discriminator("CubeTexture",Dg(e))}var Ig={name:"CubeTexture",getSchemaFrom:Dg,getModelFrom:function(e){return Og||Ng(e),Og},registerModelTo:function(e){return Og||Ng(e),e}};
/**
 * @module Schemas/Textures/DataTexture
 * @desc Export the ThreeJs DataTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Cg}=sg;let xg,Pg;function Ag(e){return xg||function(e){const t=e.Schema;xg=new t({})}(e),xg}function Ug(e){const t=Cg.getModelFrom(e);Pg=t.discriminator("DataTexture",Ag(e))}var Lg={name:"DataTexture",getSchemaFrom:Ag,getModelFrom:function(e){return Pg||Ug(e),Pg},registerModelTo:function(e){return Pg||Ug(e),e}};
/**
 * @module Schemas/Textures/DepthTexture
 * @desc Export the ThreeJs DepthTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Gg}=sg;let Rg,Eg;function jg(e){return Rg||function(e){const t=e.Schema;Rg=new t({})}(e),Rg}function Vg(e){const t=Gg.getModelFrom(e);Eg=t.discriminator("DepthTexture",jg(e))}var Hg={name:"DepthTexture",getSchemaFrom:jg,getModelFrom:function(e){return Eg||Vg(e),Eg},registerModelTo:function(e){return Eg||Vg(e),e}};
/**
 * @module Schemas/Textures/VideoTexture
 * @desc Export the ThreeJs VideoTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:kg}=sg;let $g,zg;function Yg(e){return $g||function(e){const t=e.Schema;$g=new t({})}(e),$g}function Xg(e){const t=kg.getModelFrom(e);zg=t.discriminator("VideoTexture",Yg(e))}var Zg={name:"VideoTexture",getSchemaFrom:Yg,getModelFrom:function(e){return zg||Xg(e),zg},registerModelTo:function(e){return zg||Xg(e),e}};
/**
 * @module Types/Color
 * @desc Export the three js Color type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function Wg(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Color")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Color: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isColor)throw new e.SchemaType.CastError(`Color: ${t} is not a object or Three.Color instance`);if(!("r"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain r property`);if(r.isNotNumber(t.r))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("g"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain g property`);if(r.isNotNumber(t.g))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("b"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain b property`);if(r.isNotNumber(t.b))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);return{r:t.r,g:t.g,b:t.b}}}return t.COLOR_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Color=t,e}
/**
 * @module Types/Euler
 * @desc Export the three js Euler type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function Kg(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Euler")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Euler: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isEuler)throw new e.SchemaType.CastError(`Euler: ${t} is not a object or Euler instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Euler: ${t} expected x to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Euler: ${t} expected y to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Euler: ${t} expected z to be a number`);if(!("order"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain order property`);if(r.isNotString(t.order))throw new e.SchemaType.CastError(`Euler: ${t} expected order to be a string`);if(!["XYZ","YZX","ZXY","XZY","YXZ","ZYX"].includes(t.order.toUpperCase()))throw new e.SchemaType.CastError(`Euler: ${t} expected order to be a string in ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX']`);return{x:t.x,y:t.y,z:t.z,order:t.order.toUpperCase()}}}return t.EULER_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Euler=t,e}
/**
 * @module Types/Matrix3
 * @desc Export the three js Matrix3 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function Qg(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Matrix3")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Matrix3: ${t} is null or undefined`);if(r.isNotArray(t)&&!t.isMatrix3)throw new e.SchemaType.CastError(`Matrix3: ${t} is not an array or Matrix3 instance`);let n;n=t.isMatrix3?t.toArray():t;const o=n.length;if(9!==o)throw new e.SchemaType.CastError(`Matrix3: ${t} does not contain the right number of values. Expect 9 values and found ${o}`);for(let i,a=0;a<o;a++){if(i=n[a],r.isNotNumber(i))throw new e.SchemaType.CastError(`Matrix3: ${t} does not seem to contain right values. Expect values in range 0 and 1.`);if(r.isNaN(i))throw new e.SchemaType.CastError(`Matrix3: ${t} does not seem to contain right values. Expect values in range 0 and 1.`)}return n}}return t.MATRIX3_BSON_TYPE=s.BSON_DATA_ARRAY,e.Schema.Types.Matrix3=t,e}
/**
 * @module Types/Matrix4
 * @desc Export the three js Matrix4 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function Jg(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Matrix4")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Matrix4: ${t} is null or undefined`);if(r.isNotArray(t)&&!t.isMatrix4)throw new e.SchemaType.CastError(`Matrix4: ${t} is not an array or Matrix4 instance`);let n;n=t.isMatrix4?t.toArray():t;const o=n.length;if(16!==o)throw new e.SchemaType.CastError(`Matrix4: ${t} does not contain the right number of values. Expect 9 values and found ${o}`);for(let i,a=0;a<o;a++){if(i=n[a],r.isNotNumber(i))throw new e.SchemaType.CastError(`Matrix4: ${t} does not seem to contain right values. Expect values in range 0 and 1.`);if(r.isNaN(i))throw new e.SchemaType.CastError(`Matrix4: ${t} does not seem to contain right values. Expect values in range 0 and 1.`)}return n}}return t.MATRIX4_BSON_TYPE=s.BSON_DATA_ARRAY,e.Schema.Types.Matrix4=t,e}
/**
 * @module Types/Quaternion
 * @desc Export the three js Quaternion type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function qg(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Quaternion")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Quaternion: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isQuaternion)throw new e.SchemaType.CastError(`Quaternion: ${t} is not a object or Quaternion instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("w"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain w property`);if(r.isNotNumber(t.w))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z,w:t.w}}}return t.QUATERNION_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Quaternion=t,e}
/**
 * @module Types/Vector2
 * @desc Export the three js Vector2 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function ef(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector2")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Vector2: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isVector2)throw new e.SchemaType.CastError(`Vector2: ${t} is not a object or Vector2 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector2: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector2: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector2: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector2: ${t} expected to be a number`);return{x:t.x,y:t.y}}}return t.VECTOR2_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Vector2=t,e}
/**
 * @module Types/Vector3
 * @desc Export the three js Vector3 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function tf(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector3")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Vector3: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isVector3)throw new e.SchemaType.CastError(`Vector3: ${t} is not a object or Vector3 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z}}}return t.VECTOR3_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Vector3=t,e}
/**
 * @module Types/Vector4
 * @desc Export the three js Vector4 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function rf(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector4")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Vector4: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isVector4)throw new e.SchemaType.CastError(`Vector4: ${t} is not a object or Vector4 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("w"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain w property`);if(r.isNotNumber(t.w))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z,w:t.w}}}return t.VECTOR4_BSON_TYPE=s.BSON_DATA_OBJECT,e.Schema.Types.Vector4=t,e}
/**
 * @module MongoDBThreePlugin
 * @desc Three way to register Types and Schema
 * using cjs module under types and schemas folder.
 * using FunctionRegistrator for type and add to plugin using .addType( myFunctionRegistrator ), extending class AbstractMongooseRegistrator for Schema and add to plugin using .addSchema(
 * MySchemaRegistrator ) using direct registration importing mongoose in the file (care to the loading order ! An no output about what is registered.)
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [MIT]{@link https://opensource.org/licenses/MIT}
 */
/**
 * @module Loader/LASLoader
 * @desc A loader for ASC cloud point files.
 *
 * @requires {@link https://github.com/Itee/itee-client itee-client}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 * @example
 *
 * import { LASLoader } from 'itee-plugin-three'
 *
 * const loader = new LASLoader();
 *
 * // If the ASC file need to be offseted, it can be set before loading file.
 * loader.setOffset( {
 *      x: 1.0,
 *      y: 52.0,
 *      z: -5.0
 * } );
 *
 * // Then load the file and get the threejs Point Geometry
 * loader.load('/path/to/file.asc', function (geometry) {
 *
 *      scene.add( new Mesh( geometry ) );
 *
 * } );
 *
 */
const nf=new RegExp("\0","g"),of=a.toEnum({Created:0,Unclassified:1,Ground:2,LowVegetation:3,MediumVegetation:4,HighVegetation:5,Building:6,LowPoint:7,ModelKeyPoint:8,Water:9,OverlapPoints:12});class af{static _intersect(e,t){return e===af._ON&&t===af._ON?af._ON:af._OFF}static _union(e,t){return e===af._ON||t===af._ON?af._ON:af._OFF}static _difference(e,t){return e===af._ON&&t!==af._ON?af._ON:af._OFF}static _getLen(e,t,r){var n=e.getLength(),o=t.getLength();return r?o:n}static getUnion(e,t){for(var r=af._getLen(e,t,!0),n=new af(r),o=0;o<r;o++)n.setAt(o,af._union(e.getAt(o),t.getAt(o)));return n}static getIntersection(e,t){for(var r=af._getLen(e,t,!0),n=new af(r),o=0;o<r;o++)n.setAt(o,af._intersect(e.getAt(o),t.getAt(o)));return n}static getDifference(e,t){for(var r=af._getLen(e,t,!0),n=new af(r),o=0;o<r;o++)n.setAt(o,af._difference(e.getAt(o),t.getAt(o)));return n}static shred(e){var t=new Array,r=e;do{t.push(r%2),r=Math.floor(r/2)}while(r>0);return new af(t.length,t.reverse())}constructor(e,t){if(this.m_bits=new Array,t&&t.length)for(let e=0;e<t.length;e++)this.m_bits.push(t[e]?af._ON:af._OFF);else isNaN(t)||(this.m_bits=af.shred(t).m_bits);if(e&&this.m_bits.length!==e)if(this.m_bits.length<e)for(let t=this.m_bits.length;t<e;t++)this.m_bits.push(af._OFF);else for(let t=e;t>this.m_bits.length;t--)this.m_bits.pop()}getLength(){return this.m_bits.length}getAt(e){return e<this.m_bits.length?this.m_bits[e]:null}setAt(e,t){e<this.m_bits.length&&(this.m_bits[e]=t?af._ON:af._OFF)}resize(e){for(var t=new Array,r=0;r<e;r++)r<this.m_bits.length?t.push(this.m_bits[r]):t.push(af._OFF);this.m_bits=t}getCompliment(){for(var e=new af(this.m_bits.length),t=0;t<this.m_bits.length;t++)e.setAt(t,this.m_bits[t]?af._OFF:af._ON);return e}toString(){for(var e=new String,t=0;t<this.m_bits.length;t++)e=e.concat(this.m_bits[t]===af._ON?"1":"0");return e}toNumber(){for(var e=0,t=0,r=this.m_bits.length-1;r>=0;r--)this.m_bits[r]===af._ON&&(t+=Math.pow(2,e)),e++;return t}}af._ON=1,af._OFF=0;class sf{static getBit(e,t){return e&1<<t?1:0}static setBit(e,t){return e|1<<t}static clearBit(e,t){return e&~(1<<t)}static updateBit(e,t,r){return e&~(1<<t)|(r?1:0)<<t}static getBits(e,t){let r=0;for(let n of t)sf.getBit(e,n)&&(r=sf.setBit(r,n));return r}}exports.ASCLoader=
/**
 * @module Loader/ASCLoader
 * @desc A loader for ASC cloud point files.
 *
 * @requires {@link https://github.com/Itee/itee-client itee-client}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 * @example
 *
 * import { ASCLoader } from 'itee-plugin-three'
 *
 * const loader = new ASCLoader();
 *
 * // If the ASC file need to be offseted, it can be set before loading file.
 * loader.setOffset( {
 *      x: 1.0,
 *      y: 52.0,
 *      z: -5.0
 * } );
 *
 * // Then load the file and get the threejs Point Geometry
 * loader.load('/path/to/file.asc', function (geometry) {
 *
 *      scene.add( new Mesh( geometry ) );
 *
 * } );
 *
 */
class{constructor(e=n.DefaultLoadingManager,t=i.DefaultLogger){this.manager=e,this.logger=t,this._boundingBox=new n.Box3,this._points=[],this._numberOfPoints=0,this._coloredPoints=!1,this._autoOffset=!1,this._offset={x:0,y:0,z:0},this._positions=null,this._bufferIndex=0,this._positionsC=null,this._bufferIndexC=0,this.wrongPoints=0}load(e,t,r,o,i){const a=new n.FileLoader(this.manager);a.setResponseType("blob"),a.load(e,function(e){const a=new n.Group;this._parse(e,a,t,r,o,i),t(a)}.bind(this),r,o)}setOffset(e){this._offset=e,this._autoOffset=!1}_parse(e,t,r,n,o,i){const a=this,s=i||100,c=new FileReader,d=134217728;let l=0;function u(){if(l>=e.size)return;const t=e.slice(l,l+d,"text/plain");c.readAsText(t)}c.onabort=e=>{this.logger.log("abortEvent:"),this.logger.log(e)},c.onerror=e=>{this.logger.log("errorEvent:"),this.logger.log(e),o&&o(e)},c.onloadstart=e=>{this.logger.log("loadStartEvent:"),this.logger.log(e)},c.onprogress=e=>{this.logger.log("progressEvent:"),this.logger.log(e),n&&n(e)},c.onload=e=>{this.logger.log("loadEvent:"),this.logger.log(e);const t=e.target.result.split("\n"),r=t.length;l-=t[r-1].length;const n=Math.round(100/s);for(let e=0;e<r-1;e++)e%n===0&&a._parseLine(t[e])},c.onloadend=r=>{this.logger.log("loadEndEvent"),this.logger.log(r),(this._points.length>1e6||l+d>=e.size)&&(this._offsetPoints(),this._createSubCloudPoint(t)),l+=d,u()},u()}_parseLine(e){const t=e.split(/\s/g).filter(Boolean),r=t.length;3===r?this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2])}):4===r?(this._pointsHaveIntensity=!0,this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2]),i:parseFloat(t[3])})):6===r?(this._pointsHaveColor=!0,this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2]),r:parseFloat(t[3]),g:parseFloat(t[4]),b:parseFloat(t[5])})):7===r?(this._pointsHaveIntensity=!0,this._pointsHaveColor=!0,this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2]),i:parseFloat(t[3]),r:parseFloat(t[4]),g:parseFloat(t[5]),b:parseFloat(t[6])})):9===r?(this._pointsHaveColor=!0,this._pointsHaveNormals=!0,this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2]),r:parseFloat(t[3]),g:parseFloat(t[4]),b:parseFloat(t[5]),nx:parseFloat(t[6]),ny:parseFloat(t[7]),nz:parseFloat(t[8])})):10===r?(this._pointsHaveIntensity=!0,this._pointsHaveColor=!0,this._pointsHaveNormals=!0,this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2]),i:parseFloat(t[3]),r:parseFloat(t[4]),g:parseFloat(t[5]),b:parseFloat(t[6]),nx:parseFloat(t[7]),ny:parseFloat(t[8]),nz:parseFloat(t[9])})):this.logger.error(`Invalid data line: ${e}`)}_parseLines(e){const t=e[0].split(/\s/g).filter(Boolean).length;3===t?this._parseLinesAsXYZ(e):4===t?this._parseLinesAsXYZI(e):6===t?this._parseLinesAsXYZRGB(e):7===t?this._parseLinesAsXYZIRGB(e):9===t?this._parseLinesAsXYZRGBnXnYnZ(e):10===t?this._parseLinesAsXYZIRGBnXnYnZ(e):this.logger.error(`Invalid data line: ${e}`)}_parseLinesAsXYZ(e){let t=[];for(let r=0,n=e.length;r<n;r++)t=e[r].split(/\s/g).filter(Boolean),this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2])})}_parseLinesAsXYZI(e){this._pointsHaveIntensity=!0;let t=[];for(let r=0,n=e.length;r<n;r++)t=e[r].split(/\s/g).filter(Boolean),this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2]),i:parseFloat(t[3])})}_parseLinesAsXYZRGB(e){this._pointsHaveColor=!0;let t=[];for(let r=0,n=e.length;r<n;r++)t=e[r].split(/\s/g).filter(Boolean),this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2]),r:parseFloat(t[3]),g:parseFloat(t[4]),b:parseFloat(t[5])})}_parseLinesAsXYZnXnYnZ(e){let t=[];for(let r=0,n=e.length;r<n;r++)t=e[r].split(/\s/g).filter(Boolean),this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2]),nx:parseFloat(t[7]),ny:parseFloat(t[8]),nz:parseFloat(t[9])})}_parseLinesAsXYZIRGB(e){this._pointsHaveIntensity=!0,this._pointsHaveColor=!0;let t=[];for(let r=0,n=e.length;r<n;r++)t=e[r].split(/\s/g).filter(Boolean),this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2]),i:parseFloat(t[3]),r:parseFloat(t[4]),g:parseFloat(t[5]),b:parseFloat(t[6])})}_parseLinesAsXYZInXnYnZ(e){let t=[];for(let r=0,n=e.length;r<n;r++)t=e[r].split(/\s/g).filter(Boolean),this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2]),i:parseFloat(t[3]),nx:parseFloat(t[7]),ny:parseFloat(t[8]),nz:parseFloat(t[9])})}_parseLinesAsXYZRGBnXnYnZ(e){this._pointsHaveColor=!0,this._pointsHaveNormals=!0;let t=[];for(let r=0,n=e.length;r<n;r++)t=e[r].split(/\s/g).filter(Boolean),this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2]),r:parseFloat(t[3]),g:parseFloat(t[4]),b:parseFloat(t[5]),nx:parseFloat(t[6]),ny:parseFloat(t[7]),nz:parseFloat(t[8])})}_parseLinesAsXYZIRGBnXnYnZ(e){this._pointsHaveIntensity=!0,this._pointsHaveColor=!0,this._pointsHaveNormals=!0;let t=[];for(let r=0,n=e.length;r<n;r++)t=e[r].split(/\s/g).filter(Boolean),this._points.push({x:parseFloat(t[0]),y:parseFloat(t[1]),z:parseFloat(t[2]),i:parseFloat(t[3]),r:parseFloat(t[4]),g:parseFloat(t[5]),b:parseFloat(t[6]),nx:parseFloat(t[7]),ny:parseFloat(t[8]),nz:parseFloat(t[9])})}_parseLineB(e){const t=e.split(/\s/g).filter(Boolean),r=t.length,n=this._bufferIndex;3===r&&(this._positions[n]=parseFloat(t[0]),this._positions[n+1]=parseFloat(t[1]),this._positions[n+2]=parseFloat(t[2]),this._bufferIndex+=3)}_parseLineC(e){const t=e.split(/\s/g).filter(Boolean),r=t.length,n=this._bufferIndexC;3===r&&(this._positionsC[n]=Number.parseFloat(t[0]),this._positionsC[n+1]=Number.parseFloat(t[1]),this._positionsC[n+2]=Number.parseFloat(t[2]),this._bufferIndexC+=3)}_offsetPoints(){this._autoOffset&&(this._boundingBox.setFromPoints(this._points),this.setOffset(this._boundingBox.getCenter()));const e=this._offset.x,t=this._offset.y,r=this._offset.z;let n=null;for(let o=0,i=this._points.length;o<i;++o)n=this._points[o],n.x-=e,n.y-=t,n.z-=r}_createCloudPoint(e){const t=1e6,r=this._points.length,o=Math.ceil(r/t);let i=null,a=0,s=null;for(let r=0;r<o;++r){i=this._points.splice(0,t),a=i.length;const r=new n.BufferGeometry,o=new Float32Array(3*a),c=new Float32Array(3*a);let d=0,l=null;for(let e=0;e<a;++e)l=i[e],o[d]=l.x,o[d+1]=l.y,o[d+2]=l.z,this._pointsHaveColor?(c[d]=l.r/255,c[d+1]=l.g/255,c[d+2]=l.b/255):(c[d]=.1,c[d+1]=.2,c[d+2]=.5),d+=3;r.setAttribute("position",new n.BufferAttribute(o,3)),r.setAttribute("color",new n.BufferAttribute(c,3));const u=new n.PointsMaterial({size:.01,vertexColors:!0});s=new n.Points(r,u),e.children.push(s)}}_createSubCloudPoint(e){const t=this._points.length,r=new n.BufferGeometry,o=new Float32Array(3*t),i=new Float32Array(3*t);let a=0,s=null;for(let e=0;e<t;++e)s=this._points[e],o[a]=s.x,o[a+1]=s.y,o[a+2]=s.z,this._pointsHaveColor?(i[a]=s.r/255,i[a+1]=s.g/255,i[a+2]=s.b/255):(i[a]=.1,i[a+1]=.2,i[a+2]=.5),a+=3;r.setAttribute("position",new n.BufferAttribute(o,3)),r.setAttribute("color",new n.BufferAttribute(i,3));const c=new n.PointsMaterial({size:.005,vertexColors:!0}),d=new n.Points(r,c);d.rotation.x-=Math.PI/2,e.children.push(d),this._points=[]}},exports.BitArray=af,exports.BitManager=sf,exports.DBFLoader=g,exports.LASLoader=class{constructor(e=n.DefaultLoadingManager,t=i.DefaultLogger){this.manager=e,this.logger=t,this._reader=new o.TBinaryReader,this._fullVersion="",this._boundingBox=new n.Box3,this._points=[],this._numberOfPoints=0,this._coloredPoints=!1,this._autoOffset=!1,this._offset={x:0,y:0,z:0},this.colorForPointClass={Created:{r:255,g:255,b:255},Unclassified:{r:60,g:60,b:60},Ground:{r:125,g:95,b:5},LowVegetation:{r:153,g:212,b:36},MediumVegetation:{r:52,g:148,b:25},HighVegetation:{r:27,g:77,b:13},Building:{r:153,g:138,b:95},LowPoint:{r:200,g:200,b:200},ModelKeyPoint:{r:237,g:31,b:31},Water:{r:31,g:186,b:237},OverlapPoints:{r:0,g:0,b:0}}}load(e,t,r,o,i){const a=new n.FileLoader(this.manager);a.setResponseType("arraybuffer"),a.load(e,e=>{this.parse(e,t,r,o,i)},r,o)}setOffset(e){this._offset=e,this._autoOffset=!1}parse(e,t,r,n){try{this._reader.buffer=e;if("LASF"!==this._reader.getString(4,!1))throw new Error("Invalid las file signature. Abort parsing !");this._reader.skipOffsetOf(24);const o=this._reader.getUint8(),i=this._reader.getUint8();this._reader.skipOffsetTo(0);const a=`${o}.${i}`,s=this._parseHeader(a),c=this._parseVariableLengthRecords(s),d=this._parsePointDataRecords(s,r);this.convert({Header:s,VariableLengthRecords:c,PointDataRecords:d},t,r,n)}catch(e){n(e)}}_parseHeader(e){switch(e){case"1.0":return this._parseHeader_1_0();case"1.1":return this._parseHeader_1_1();case"1.2":return this._parseHeader_1_2();case"1.3":return this._parseHeader_1_3();case"1.4":return this._parseHeader_1_4();default:throw new Error(`Insupported LAS file version: ${e}. Abort parsing !`)}}_parseHeader_1_0(){return{FileSignature:this._reader.getString(4),Reserved:this._reader.skipOffsetOf(o.Byte.Four),GUID_1:this._reader.getUint32(),GUID_2:this._reader.getUint16(),GUID_3:this._reader.getUint16(),GUID_4:this._reader.getUint8Array(8),VersionMajor:this._reader.getUint8(),VersionMinor:this._reader.getUint8(),SystemIdentifier:this._reader.getString(32).replace(nf,""),GeneratingSoftware:this._reader.getString(32).replace(nf,""),FlightDateJulian:this._reader.getUint16(),Year:this._reader.getUint16(),HeaderSize:this._reader.getUint16(),OffsetToPointData:this._reader.getUint32(),NumberOfVariableLengthRecords:this._reader.getUint32(),PointDataFormatID:this._reader.getUint8(),PointDataRecordLength:this._reader.getUint16(),NumberOfPointRecords:this._reader.getUint32(),NumberOfPointsByReturn:this._reader.getUint32Array(5),XScaleFactor:this._reader.getFloat64(),YScaleFactor:this._reader.getFloat64(),ZScaleFactor:this._reader.getFloat64(),XOffset:this._reader.getFloat64(),YOffset:this._reader.getFloat64(),ZOffset:this._reader.getFloat64(),MaxX:this._reader.getFloat64(),MinX:this._reader.getFloat64(),MaxY:this._reader.getFloat64(),MinY:this._reader.getFloat64(),MaxZ:this._reader.getFloat64(),MinZ:this._reader.getFloat64()}}_parseHeader_1_1(){return{FileSignature:this._reader.getString(4),FileSourceId:this._reader.getUint16(),Reserved:this._reader.skipOffsetOf(o.Byte.Two)&&null,GUID_1:this._reader.getUint32(),GUID_2:this._reader.getUint16(),GUID_3:this._reader.getUint16(),GUID_4:this._reader.getUint8Array(8),VersionMajor:this._reader.getUint8(),VersionMinor:this._reader.getUint8(),SystemIdentifier:this._reader.getString(32).replace(nf,""),GeneratingSoftware:this._reader.getString(32).replace(nf,""),FileCreationDayOfYear:this._reader.getUint16(),FileCreationYear:this._reader.getUint16(),HeaderSize:this._reader.getUint16(),OffsetToPointData:this._reader.getUint32(),NumberOfVariableLengthRecords:this._reader.getUint32(),PointDataFormatID:this._reader.getUint8(),PointDataRecordLength:this._reader.getUint16(),NumberOfPointRecords:this._reader.getUint32(),NumberOfPointsByReturn:this._reader.getUint32Array(5),XScaleFactor:this._reader.getFloat64(),YScaleFactor:this._reader.getFloat64(),ZScaleFactor:this._reader.getFloat64(),XOffset:this._reader.getFloat64(),YOffset:this._reader.getFloat64(),ZOffset:this._reader.getFloat64(),MaxX:this._reader.getFloat64(),MinX:this._reader.getFloat64(),MaxY:this._reader.getFloat64(),MinY:this._reader.getFloat64(),MaxZ:this._reader.getFloat64(),MinZ:this._reader.getFloat64()}}_parseHeader_1_2(){return{FileSignature:this._reader.getString(4),FileSourceId:this._reader.getUint16(),GlobalEncoding:{GPSTimeType:this._reader.getBit16()?"AdjustedStandardGPSTime":"GPSWeekTime",Reserved:this._reader.skipBitOffsetOf(15)},GUID_1:this._reader.getUint32(),GUID_2:this._reader.getUint16(),GUID_3:this._reader.getUint16(),GUID_4:this._reader.getUint8Array(8),VersionMajor:this._reader.getUint8(),VersionMinor:this._reader.getUint8(),SystemIdentifier:this._reader.getString(32).replace(nf,""),GeneratingSoftware:this._reader.getString(32).replace(nf,""),FileCreationDayOfYear:this._reader.getUint16(),FileCreationYear:this._reader.getUint16(),HeaderSize:this._reader.getUint16(),OffsetToPointData:this._reader.getUint32(),NumberOfVariableLengthRecords:this._reader.getUint32(),PointDataFormatID:this._reader.getUint8(),PointDataRecordLength:this._reader.getUint16(),NumberOfPointRecords:this._reader.getUint32(),NumberOfPointsByReturn:this._reader.getUint32Array(5),XScaleFactor:this._reader.getFloat64(),YScaleFactor:this._reader.getFloat64(),ZScaleFactor:this._reader.getFloat64(),XOffset:this._reader.getFloat64(),YOffset:this._reader.getFloat64(),ZOffset:this._reader.getFloat64(),MaxX:this._reader.getFloat64(),MinX:this._reader.getFloat64(),MaxY:this._reader.getFloat64(),MinY:this._reader.getFloat64(),MaxZ:this._reader.getFloat64(),MinZ:this._reader.getFloat64()}}_parseHeader_1_3(){return{FileSignature:this._reader.getString(4),FileSourceId:this._reader.getUint16(),GlobalEncoding:{GPSTimeType:this._reader.getBit16()?"AdjustedStandardGPSTime":"GPSWeekTime",WaveformDataPacketsInternal:this._reader.getBit16(),WaveformDataPacketsExternal:this._reader.getBit16(),ReturnNumbersHaveBeenSyntheticallyGenerated:this._reader.getBit16(),Reserved:this._reader.skipBitOffsetOf(12)},GUID_1:this._reader.getUint32(),GUID_2:this._reader.getUint16(),GUID_3:this._reader.getUint16(),GUID_4:this._reader.getUint8Array(8),VersionMajor:this._reader.getUint8(),VersionMinor:this._reader.getUint8(),SystemIdentifier:this._reader.getString(32).replace(nf,""),GeneratingSoftware:this._reader.getString(32).replace(nf,""),FileCreationDayOfYear:this._reader.getUint16(),FileCreationYear:this._reader.getUint16(),HeaderSize:this._reader.getUint16(),OffsetToPointData:this._reader.getUint32(),NumberOfVariableLengthRecords:this._reader.getUint32(),PointDataFormatID:this._reader.getUint8(),PointDataRecordLength:this._reader.getUint16(),NumberOfPointRecords:this._reader.getUint32(),NumberOfPointsByReturn:this._reader.getUint32Array(5),XScaleFactor:this._reader.getFloat64(),YScaleFactor:this._reader.getFloat64(),ZScaleFactor:this._reader.getFloat64(),XOffset:this._reader.getFloat64(),YOffset:this._reader.getFloat64(),ZOffset:this._reader.getFloat64(),MaxX:this._reader.getFloat64(),MinX:this._reader.getFloat64(),MaxY:this._reader.getFloat64(),MinY:this._reader.getFloat64(),MaxZ:this._reader.getFloat64(),MinZ:this._reader.getFloat64(),StartOfWaveformDataPacketRecord:this._reader.getUint64()}}_parseHeader_1_4(){return{FileSignature:this._reader.getString(4),FileSourceId:this._reader.getUint16(),GlobalEncoding:{GPSTimeType:this._reader.getBit16()?"AdjustedStandardGPSTime":"GPSWeekTime",WaveformDataPacketsInternal:this._reader.getBit16(),WaveformDataPacketsExternal:this._reader.getBit16(),ReturnNumbersHaveBeenSyntheticallyGenerated:this._reader.getBit16(),WKT:this._reader.getBit16()?"WKT":"GeoTIFF",Reserved:this._reader.skipBitOffsetOf(11)},GUID_1:this._reader.getUint32(),GUID_2:this._reader.getUint16(),GUID_3:this._reader.getUint16(),GUID_4:this._reader.getUint8Array(8),VersionMajor:this._reader.getUint8(),VersionMinor:this._reader.getUint8(),SystemIdentifier:this._reader.getString(32).replace(nf,""),GeneratingSoftware:this._reader.getString(32).replace(nf,""),FileCreationDayOfYear:this._reader.getUint16(),FileCreationYear:this._reader.getUint16(),HeaderSize:this._reader.getUint16(),OffsetToPointData:this._reader.getUint32(),NumberOfVariableLengthRecords:this._reader.getUint32(),PointDataRecordFormat:this._reader.getUint8(),PointDataRecordLength:this._reader.getUint16(),LegacyNumberOfPointRecords:this._reader.getUint32(),LegacyNumberOfPointsByReturn:this._reader.getUint32Array(5),XScaleFactor:this._reader.getFloat64(),YScaleFactor:this._reader.getFloat64(),ZScaleFactor:this._reader.getFloat64(),XOffset:this._reader.getFloat64(),YOffset:this._reader.getFloat64(),ZOffset:this._reader.getFloat64(),MaxX:this._reader.getFloat64(),MinX:this._reader.getFloat64(),MaxY:this._reader.getFloat64(),MinY:this._reader.getFloat64(),MaxZ:this._reader.getFloat64(),MinZ:this._reader.getFloat64(),StartOfWaveformDataPacketRecord:this._reader.getUint64(),StartOfFirstExtendedVariableLengthRecord:this._reader.getUint64(),NumberOfExtendedVariableLengthRecords:this._reader.getUint32(),NumberOfPointRecords:this._reader.getUint64(),NumberOfPointsByReturn:this._reader.getUint64Array(15)}}_parseVariableLengthRecords(e){const t=`${e.VersionMajor}.${e.VersionMinor}`,r=[];for(let n=0;n<e.NumberOfVariableLengthRecords;n++){const e=this._parseVariableLengthRecordHeader();
//!\ Legacy => RecordSignature = Reserved since las v1.1
if("1.0"===t&&43707!==e.Reserved)throw new Error("Invalid variable length record header signature... Abort parsing !");const n=e.UserID,o=e.RecordID,i=e.RecordLengthAfterHeader,a=this._parseVariableLengthRecordContent(n,o,i);r.push({Header:e,Content:a})}return r}_parseVariableLengthRecordHeader(){return{Reserved:this._reader.getUint16(),UserID:this._reader.getString(16).replace(nf,""),RecordID:this._reader.getUint16(),RecordLengthAfterHeader:this._reader.getUint16(),Description:this._reader.getString(32).replace(nf,"")}}_parseVariableLengthRecordContent(e,t,r){switch(e){case"LASF_Projection":return this._parseProjectionRecord(t,r);case"LASF_Spec":return this._parseSpecRecord();default:return this._parseCustomRecord(r)}}_parseProjectionRecord(e,t){switch(e){case 2111:return this._parseOGCMathTransformWKT();case 2112:return this._parseOGCCoordinateTransformWKT();case 34735:return this._parseGeoKeyDirectoryTag();case 34736:return this._parseGeoDoubleParamsTag(t);case 34737:return this._parseGeoASCIIParamsTag(t);default:console.error("Unable to determine LASF_Projection underlying type ! Skip current record."),this._reader.skipOffsetOf(t)}}_parseOGCMathTransformWKT(){}_parseOGCCoordinateTransformWKT(){}_parseGeoKeyDirectoryTag(){const e={wKeyDirectoryVersion:this._reader.getUint16(),wKeyRevision:this._reader.getUint16(),wMinorRevision:this._reader.getUint16(),wNumberOfKeys:this._reader.getUint16(),sKeyEntry:[]};for(let t=0;t<e.wNumberOfKeys;t++)e.sKeyEntry.push({wKeyID:this._reader.getUint16(),wTIFFTagLocation:this._reader.getUint16(),wCount:this._reader.getUint16(),wValue_Offset:this._reader.getUint16()});return e}_parseGeoDoubleParamsTag(e){const t=e/o.Byte.Height,r=[];for(let e=0;e<t;e++)r[e]=this._reader.getFloat64();return r}_parseGeoASCIIParamsTag(e){return this._reader.getString(e).replace(nf,"")}_parseSpecRecord(e){if(!(e<100)){if(e>=100&&e<355)return this._parseWaveformPacketDesciptor();if(65535===e)return this._parseWaveformDataPacket();throw new RangeError(`Invalid spec record id: ${e}`)}switch(e){case 0:return this._parseClassificationLookupRecord();case 1:return this._parseHeaderLookupForFlightLinesRecord();case 2:return this._parseHistogramRecord();case 3:return this._parseTextAreaDescriptionRecord();case 4:return this._parseExtraBytesRecord();case 7:return this._parseSupersededRecord();default:throw new RangeError(`Invalid spec record id: ${e}`)}}_parseClassificationLookupRecord(){const e=[];for(let t=0;t<256;t++)e.push({ClassNumber:this._reader.getUint8(),Description:this._reader.getString(15).replace(nf,"")});return e}_parseHeaderLookupForFlightLinesRecord(){return{FileMarkerNumber:this._reader.getUint8(),Filename:this._reader.getString(256).replace(nf,"")}}_parseHistogramRecord(){}_parseTextAreaDescriptionRecord(){}_parseExtraBytesRecord(){}_parseSupersededRecord(){}_parseWaveformPacketDesciptor(){}_parseWaveformDataPacket(){}_parseCustomRecord(e){const t=new Uint8Array(e);for(let r=0;r<e;r++)t[r]=this._reader.getUint8();return t}_parsePointDataRecords(e,t){const r=e.OffsetToPointData;this._reader.offset!==r&&(console.error("The current reader offset does not match the header offset to point data ! Defaulting to header value."),this._reader.skipOffsetTo(r));const n=e.VersionMinor<4?e.PointDataFormatID:e.PointDataRecordFormat,o=this._getPointDataRecordFormat(n),i=e.VersionMinor<4?e.NumberOfPointRecords:e.LegacyNumberOfPointRecords,a=new Array(i);for(let e=0;e<i;e++)a[e]=o(),e%1e5==0&&t(new ProgressEvent("ParsePointDataRecords",{lengthComputable:!0,loaded:e,total:i}));return a}_getPointDataRecordFormat(e){switch(e){case 0:return this._parsePointDataRecordFormat_0.bind(this);case 1:return this._parsePointDataRecordFormat_1.bind(this);case 2:return this._parsePointDataRecordFormat_2.bind(this);case 3:return this._parsePointDataRecordFormat_3.bind(this);case 4:return this._parsePointDataRecordFormat_4.bind(this);case 5:return this._parsePointDataRecordFormat_5.bind(this);case 6:return this._parsePointDataRecordFormat_6.bind(this);case 7:return this._parsePointDataRecordFormat_7.bind(this);case 8:return this._parsePointDataRecordFormat_8.bind(this);case 9:return this._parsePointDataRecordFormat_9.bind(this);case 10:return this._parsePointDataRecordFormat_10.bind(this);default:throw new RangeError(`Invalid PointDataRecordFormat parameter: ${e}`)}}_parsePointDataRecordFormat_0(){return{X:this._reader.getInt32(),Y:this._reader.getInt32(),Z:this._reader.getInt32(),Intensity:this._reader.getUint16(),ReturnNumber:this._reader.getBits8(3),NumberOfReturns:this._reader.getBits8(3),ScanDirectionFlag:this._reader.getBit8(),EdgeOfFlightLine:this._reader.getBit8(),Classification:{Class:this._reader.getBits8(5),Synthetic:this._reader.getBit8(),KeyPoint:this._reader.getBit8(),Withheld:this._reader.getBit8()},ScanAngleRank:this._reader.getInt8(),UserData:this._reader.getUint8(),PointSourceId:this._reader.getUint16()}}_parsePointDataRecordFormat_1(){return{X:this._reader.getInt32(),Y:this._reader.getInt32(),Z:this._reader.getInt32(),Intensity:this._reader.getUint16(),ReturnNumber:this._reader.getBits8(3),NumberOfReturns:this._reader.getBits8(3),ScanDirectionFlag:this._reader.getBit8(),EdgeOfFlightLine:this._reader.getBit8(),Classification:{Class:this._reader.getBits8(5),Synthetic:this._reader.getBit8(),KeyPoint:this._reader.getBit8(),Withheld:this._reader.getBit8()},ScanAngleRank:this._reader.getInt8(),UserData:this._reader.getUint8(),PointSourceId:this._reader.getUint16(),GPSTime:this._reader.getFloat64()}}_parsePointDataRecordFormat_2(){return{X:this._reader.getInt32(),Y:this._reader.getInt32(),Z:this._reader.getInt32(),Intensity:this._reader.getUint16(),ReturnNumber:this._reader.getBits8(3),NumberOfReturns:this._reader.getBits8(3),ScanDirectionFlag:this._reader.getBit8(),EdgeOfFlightLine:this._reader.getBit8(),Classification:{Class:this._reader.getBits8(5),Synthetic:this._reader.getBit8(),KeyPoint:this._reader.getBit8(),Withheld:this._reader.getBit8()},ScanAngleRank:this._reader.getInt8(),UserData:this._reader.getUint8(),PointSourceId:this._reader.getUint16(),R:this._reader.getUint16(),G:this._reader.getUint16(),B:this._reader.getUint16()}}_parsePointDataRecordFormat_3(){return{X:this._reader.getInt32(),Y:this._reader.getInt32(),Z:this._reader.getInt32(),Intensity:this._reader.getUint16(),ReturnNumber:this._reader.getBits8(3),NumberOfReturns:this._reader.getBits8(3),ScanDirectionFlag:this._reader.getBit8(),EdgeOfFlightLine:this._reader.getBit8(),Classification:{Class:this._reader.getBits8(5),Synthetic:this._reader.getBit8(),KeyPoint:this._reader.getBit8(),Withheld:this._reader.getBit8()},ScanAngleRank:this._reader.getInt8(),UserData:this._reader.getUint8(),PointSourceId:this._reader.getUint16(),GPSTime:this._reader.getFloat64(),R:this._reader.getUint16(),G:this._reader.getUint16(),B:this._reader.getUint16()}}_parsePointDataRecordFormat_4(){return{X:this._reader.getInt32(),Y:this._reader.getInt32(),Z:this._reader.getInt32(),Intensity:this._reader.getUint16(),ReturnNumber:this._reader.getBits8(3),NumberOfReturns:this._reader.getBits8(3),ScanDirectionFlag:this._reader.getBit8(),EdgeOfFlightLine:this._reader.getBit8(),Classification:{Class:this._reader.getBits8(5),Synthetic:this._reader.getBit8(),KeyPoint:this._reader.getBit8(),Withheld:this._reader.getBit8()},ScanAngleRank:this._reader.getInt8(),UserData:this._reader.getUint8(),PointSourceId:this._reader.getUint16(),GPSTime:this._reader.getFloat64(),WavePacketDescriptorIndex:this._reader.getUint8(),ByteOffsetToWaveformData:this._reader.getUint64(),WaveformPacketSizeInBytes:this._reader.getUint32(),ReturnPointWaveformLocation:this._reader.getFloat32(),Xt:this._reader.getFloat32(),Yt:this._reader.getFloat32(),Zt:this._reader.getFloat32()}}_parsePointDataRecordFormat_5(){return{X:this._reader.getInt32(),Y:this._reader.getInt32(),Z:this._reader.getInt32(),Intensity:this._reader.getUint16(),ReturnNumber:this._reader.getBits8(3),NumberOfReturns:this._reader.getBits8(3),ScanDirectionFlag:this._reader.getBit8(),EdgeOfFlightLine:this._reader.getBit8(),Classification:{Class:this._reader.getBits8(5),Synthetic:this._reader.getBit8(),KeyPoint:this._reader.getBit8(),Withheld:this._reader.getBit8()},ScanAngleRank:this._reader.getInt8(),UserData:this._reader.getUint8(),PointSourceId:this._reader.getUint16(),GPSTime:this._reader.getFloat64(),R:this._reader.getUint16(),G:this._reader.getUint16(),B:this._reader.getUint16(),WavePacketDescriptorIndex:this._reader.getUint8(),ByteOffsetToWaveformData:this._reader.getUint64(),WaveformPacketSizeInBytes:this._reader.getUint32(),ReturnPointWaveformLocation:this._reader.getFloat32(),Xt:this._reader.getFloat32(),Yt:this._reader.getFloat32(),Zt:this._reader.getFloat32()}}_parsePointDataRecordFormat_6(){return{X:this._reader.getInt32(),Y:this._reader.getInt32(),Z:this._reader.getInt32(),Intensity:this._reader.getUint16(),ReturnNumber:this._reader.getBits16(4),NumberOfReturns:this._reader.getBits16(4),ClassificationFlags:this._reader.getBits16(4),ScannerChannel:this._reader.getBits16(2),ScanDirectionFlag:this._reader.getBit16(),EdgeOfFlightLine:this._reader.getBit16(),Classification:{Class:this._reader.getBits8(5),Synthetic:this._reader.getBit8(),KeyPoint:this._reader.getBit8(),Withheld:this._reader.getBit8()},UserData:this._reader.getUint8(),ScanAngle:this._reader.getInt16(),PointSourceId:this._reader.getUint16(),GPSTime:this._reader.getFloat64()}}_parsePointDataRecordFormat_7(){return{X:this._reader.getInt32(),Y:this._reader.getInt32(),Z:this._reader.getInt32(),Intensity:this._reader.getUint16(),ReturnNumber:this._reader.getBits16(4),NumberOfReturns:this._reader.getBits16(4),ClassificationFlags:this._reader.getBits16(4),ScannerChannel:this._reader.getBits16(2),ScanDirectionFlag:this._reader.getBit16(),EdgeOfFlightLine:this._reader.getBit16(),Classification:{Class:this._reader.getBits8(5),Synthetic:this._reader.getBit8(),KeyPoint:this._reader.getBit8(),Withheld:this._reader.getBit8()},UserData:this._reader.getUint8(),ScanAngle:this._reader.getInt16(),PointSourceId:this._reader.getUint16(),GPSTime:this._reader.getFloat64(),R:this._reader.getUint16(),G:this._reader.getUint16(),B:this._reader.getUint16()}}_parsePointDataRecordFormat_8(){return{X:this._reader.getInt32(),Y:this._reader.getInt32(),Z:this._reader.getInt32(),Intensity:this._reader.getUint16(),ReturnNumber:this._reader.getBits16(4),NumberOfReturns:this._reader.getBits16(4),ClassificationFlags:this._reader.getBits16(4),ScannerChannel:this._reader.getBits16(2),ScanDirectionFlag:this._reader.getBit16(),EdgeOfFlightLine:this._reader.getBit16(),Classification:{Class:this._reader.getBits8(5),Synthetic:this._reader.getBit8(),KeyPoint:this._reader.getBit8(),Withheld:this._reader.getBit8()},UserData:this._reader.getUint8(),ScanAngle:this._reader.getInt16(),PointSourceId:this._reader.getUint16(),GPSTime:this._reader.getFloat64(),R:this._reader.getUint16(),G:this._reader.getUint16(),B:this._reader.getUint16(),NIR:this._reader.getUint16()}}_parsePointDataRecordFormat_9(){return{X:this._reader.getInt32(),Y:this._reader.getInt32(),Z:this._reader.getInt32(),Intensity:this._reader.getUint16(),ReturnNumber:this._reader.getBits16(4),NumberOfReturns:this._reader.getBits16(4),ClassificationFlags:this._reader.getBits16(4),ScannerChannel:this._reader.getBits16(2),ScanDirectionFlag:this._reader.getBit16(),EdgeOfFlightLine:this._reader.getBit16(),Classification:{Class:this._reader.getBits8(5),Synthetic:this._reader.getBit8(),KeyPoint:this._reader.getBit8(),Withheld:this._reader.getBit8()},UserData:this._reader.getUint8(),ScanAngle:this._reader.getInt16(),PointSourceId:this._reader.getUint16(),GPSTime:this._reader.getFloat64(),WavePacketDescriptorIndex:this._reader.getUint8(),ByteOffsetToWaveformData:this._reader.getUint64(),WaveformPacketSizeInBytes:this._reader.getUint32(),ReturnPointWaveformLocation:this._reader.getFloat32(),Xt:this._reader.getFloat32(),Yt:this._reader.getFloat32(),Zt:this._reader.getFloat32()}}_parsePointDataRecordFormat_10(){return{X:this._reader.getInt32(),Y:this._reader.getInt32(),Z:this._reader.getInt32(),Intensity:this._reader.getUint16(),ReturnNumber:this._reader.getBits16(4),NumberOfReturns:this._reader.getBits16(4),ClassificationFlags:this._reader.getBits16(4),ScannerChannel:this._reader.getBits16(2),ScanDirectionFlag:this._reader.getBit16(),EdgeOfFlightLine:this._reader.getBit16(),Classification:{Class:this._reader.getBits8(5),Synthetic:this._reader.getBit8(),KeyPoint:this._reader.getBit8(),Withheld:this._reader.getBit8()},UserData:this._reader.getUint8(),ScanAngle:this._reader.getInt16(),PointSourceId:this._reader.getUint16(),GPSTime:this._reader.getFloat64(),R:this._reader.getUint16(),G:this._reader.getUint16(),B:this._reader.getUint16(),NIR:this._reader.getUint16(),WavePacketDescriptorIndex:this._reader.getUint8(),ByteOffsetToWaveformData:this._reader.getUint64(),WaveformPacketSizeInBytes:this._reader.getUint32(),ReturnPointWaveformLocation:this._reader.getFloat32(),Xt:this._reader.getFloat32(),Yt:this._reader.getFloat32(),Zt:this._reader.getFloat32()}}convert(e,t,r,o){try{const o=new n.Group;o.name="Cloud",o.matrixAutoUpdate=!1,o.position.x=e.Header.XOffset,o.position.y=e.Header.YOffset,o.position.z=e.Header.ZOffset,o.userData={header:e.Header,records:e.VariableLengthRecords},this._createCloudPoints(o,e,r),t(o)}catch(e){o(e)}}_offsetPoints(){this._autoOffset&&(this._boundingBox.setFromPoints(this._points),this.setOffset(this._boundingBox.getCenter()));const e=this._offset.x,t=this._offset.y,r=this._offset.z;let n=null;for(let o=0,i=this._points.length;o<i;++o)n=this._points[o],n.x-=e,n.y-=t,n.z-=r}_createCloudPoints(e,t,o){const i={0:"Created",1:"Unclassified",2:"Ground",3:"LowVegetation",4:"MediumVegetation",5:"HighVegetation",6:"Building",7:"LowPoint",8:"ModelKeyPoint",9:"Water",12:"OverlapPoints"};let a=-1/0;for(let e of t.PointDataRecords){const t=e.Intensity;t>a&&(a=t)}const s=t.Header.XScaleFactor,c=t.Header.YScaleFactor,d=t.Header.ZScaleFactor,l=1e6,u=t.PointDataRecords.length,m=Math.ceil(u/l),h=t.Header.VersionMinor<4?t.Header.PointDataFormatID:t.Header.PointDataRecordFormat,g=![0,1,4,6,9].includes(h),f=new n.PointsMaterial({size:.01,vertexColors:!0});let p=0,_=null,S=null;for(let h=0;h<m;++h){_=t.PointDataRecords.splice(0,l),p=_.length;const m=new n.BufferGeometry,y=new Float32Array(3*p),F=new Float32Array(3*p);let M=0,b=null;for(let e=0;e<p;++e){const t=e+h*l;if(t%1e5==0&&o(new ProgressEvent("ConvertPointDataRecords",{lengthComputable:!0,loaded:t,total:u})),b=_[e],y[M]=b.X*s,y[M+1]=b.Y*c,y[M+2]=b.Z*d,g)F[M]=b.R/65535,F[M+1]=b.G/65535,F[M+2]=b.B/65535;else{const e=this.colorForPointClass[i[b.Classification.Class]];if(r.isDefined(e))F[M]=e.r/255,F[M+1]=e.g/255,F[M+2]=e.b/255;else{const e=b.Intensity;F[M]=e/a,F[M+1]=e/a,F[M+2]=e/a}}M+=3}m.setAttribute("position",new n.BufferAttribute(y,3)),m.setAttribute("color",new n.BufferAttribute(F,3)),S=new n.Points(m,f),e.add(S)}}_createSubCloudPoint(e){const t=this._points.length,r=new n.BufferGeometry,o=new Float32Array(3*t),i=new Float32Array(3*t);let a=0,s=null;for(let e=0;e<t;++e)s=this._points[e],o[a]=s.x,o[a+1]=s.y,o[a+2]=s.z,this._pointsHaveColor?(i[a]=s.r/255,i[a+1]=s.g/255,i[a+2]=s.b/255):(i[a]=.1,i[a+1]=.2,i[a+2]=.5),a+=3;r.setAttribute("position",new n.BufferAttribute(o,3)),r.setAttribute("color",new n.BufferAttribute(i,3));const c=new n.PointsMaterial({size:.005,vertexColors:!0}),d=new n.Points(r,c);d.rotation.x-=Math.PI/2,e.children.push(d),this._points=[]}},exports.PointClasses=of,exports.SHPLoader=M,exports.ShapeType=F,exports.registerPlugin=function(r){return new t.TMongoDBPlugin(r).addType(Wg).addType(Kg).addType(Qg).addType(Jg).addType(qg).addType(ef).addType(tf).addType(rf).addSchema(A).addSchema(j).addSchema(Y).addSchema(J).addSchema(oe).addSchema(le).addSchema(pe).addSchema(be).addSchema(Ue).addSchema(je).addSchema(qe).addSchema(tt).addSchema(at).addSchema(O).addSchema(ht).addSchema(yt).addSchema(vt).addSchema(Ct).addSchema(Gt).addSchema(kt).addSchema(Xe).addSchema(Wt).addSchema(tr).addSchema(sr).addSchema(hr).addSchema(yr).addSchema(vr).addSchema(Cr).addSchema(Gr).addSchema(kr).addSchema(Kr).addSchema(nn).addSchema(ln).addSchema(pn).addSchema(bn).addSchema(Dn).addSchema(An).addSchema(jn).addSchema(Yn).addSchema(Jn).addSchema(oo).addSchema(uo).addSchema(_o).addSchema(wo).addSchema(No).addSchema(Uo).addSchema(Vo).addSchema(Xo).addSchema(qo).addSchema(ii).addSchema(ui).addSchema(_i).addSchema(wi).addSchema(Ni).addSchema(Ui).addSchema(Vi).addSchema(Xi).addSchema(qi).addSchema(ia).addSchema(ua).addSchema(_a).addSchema(wa).addSchema(Na).addSchema(Ua).addSchema(Va).addSchema(Xa).addSchema(qa).addSchema(is).addSchema(us).addSchema(_s).addSchema(ws).addSchema(Ns).addSchema(Us).addSchema(Vs).addSchema(Xs).addSchema(qs).addSchema(ic).addSchema(uc).addSchema(_c).addSchema(wc).addSchema(Nc).addSchema(Uc).addSchema(Vc).addSchema(Xc).addSchema(qc).addSchema(id).addSchema(ud).addSchema(_d).addSchema(wd).addSchema(Nd).addSchema(Ud).addSchema(Vd).addSchema(Xd).addSchema(qd).addSchema(il).addSchema(ul).addSchema(_l).addSchema(wl).addSchema(_u).addSchema(Ul).addSchema(Vl).addSchema(Nl).addSchema(Xl).addSchema(ql).addSchema(iu).addSchema(uu).addSchema(wu).addSchema(Nu).addSchema(Uu).addSchema(Vu).addSchema(Xu).addSchema(qu).addSchema(im).addSchema(um).addSchema(hm).addSchema(fm).addSchema(_m).addSchema(ym).addSchema(Mm).addSchema(wm).addSchema(vm).addSchema(Om).addSchema(Pm).addSchema(Rm).addSchema($m).addSchema(Km).addSchema(rh).addSchema(ch).addSchema(gh).addSchema(Fh).addSchema(Bh).addSchema(xh).addSchema(Rh).addSchema($h).addSchema(Kh).addSchema(qh).addSchema(ag).addSchema(Sg).addSchema(Tg).addSchema(Ig).addSchema(Lg).addSchema(Hg).addSchema(mg).addSchema(Zg).addController(l).addDescriptor({route:"/objects",controller:{name:"TObjects3DController",options:{schemaName:"Objects3D"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addController(t.TMongooseController).addDescriptor({route:"/curves",controller:{name:"TMongooseController",options:{schemaName:"Curves"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/geometries",controller:{name:"TMongooseController",options:{schemaName:"Geometries"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/materials",controller:{name:"TMongooseController",options:{schemaName:"Materials"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/textures",controller:{name:"TMongooseController",options:{schemaName:"Textures"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addController(e.TAbstractConverterManager).addDescriptor({route:"/uploads",controller:{name:"TAbstractConverterManager",options:{useNext:!0,converters:{JsonToThree:new _,ShpToThree:new b,DbfToThree:new f,FbxToThree:new p,ColladaToThree:new u,StlToThree:new w,TdsToThree:new T,MtlToThree:new S,ObjToThree:new y},rules:[{on:".json",use:"JsonToThree"},{on:".dae",use:"ColladaToThree"},{on:".fbx",use:"FbxToThree"},{on:".stl",use:"StlToThree"},{on:".3ds",use:"TdsToThree"},{on:".shp",use:"ShpToThree"},{on:".dbf",use:"DbfToThree"},{on:[".shp",".dbf"],use:["ShpToThree","DbfToThree"]},{on:".mtl",use:"MtlToThree"},{on:".obj",use:"ObjToThree"},{on:[".mtl",".obj"],use:["MtlToThree","ObjToThree"]}],inserter:v},can:{processFiles:{on:"post",over:"/"}}}})};
