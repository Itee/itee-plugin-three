"use strict";var e=require("itee-database"),t=require("itee-mongodb"),r=require("itee-validators"),n=require("three-full"),o=require("itee-client"),i=require("itee-core"),a=require("itee-utils"),c=require("bson");function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var u=s(r);
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @see [IFC Standard]{@link http://standards.buildingsmart.org/IFC/RELEASE/IFC4_1/FINAL/HTML/}
 *
 */class m extends t.TMongooseController{constructor(e={}){super(e)}async _readOneDocument(e,t){if(r.isNotDefined(e)||r.isNotDefined(t))return null;const n=await this._driver.model(e).findOne(t).exec();return r.isDefined(n)?n._doc:null}async _readManyDocument(e,t,n){if(r.isNotDefined(e)||r.isNotDefined(t))return null;return(await this._driver.model(e).find(t,n).lean().exec()).map((e=>e._doc))}async _updateDocument(e,t,n){if(r.isNotDefined(e))return null;return await this._driver.model(e.type).findByIdAndUpdate(e._id,t,n).exec()}async getAllChildrenIds(e,t=!1){const n={children:[],geometries:[],materials:[]},o=[],i=await this._readManyDocument("Objects3D",{parent:e},{_id:!0,geometry:!0,material:!0,children:!0});for(let e=0,a=i.length;e<a;e++){const a=i[e],c=a._id.toString();r.isDefined(c)&&n.children.push(c);const s=a.geometry;r.isDefined(s)&&n.geometries.push(s.toString());const u=a.material;if(u){const e=r.isArray(u)?u.map((e=>e.toString())):[u.toString()];n.materials.push(...e)}if(a.children){const e=this.getAllChildrenIds(c,t);o.push(e)}}if(o.length>0){const e=await Promise.all(o);for(let t=0,r=e.length;t<r;t++){const r=e[t];n.children.push(...r.children),n.geometries.push(...r.geometries),n.materials.push(...r.materials)}}return n}async _deleteOne(e,r){try{const n="allInOneByParentId";if("oneByOne"===n);else if("allInOneByParentId"===n){const n=await this.getAllChildrenIds(e,!0);n.children.push(e);const o={children:[...new Set(n.children)],geometries:[...new Set(n.geometries)],materials:[...new Set(n.materials)]},[i,a,c]=await Promise.all([this._deleteDocuments("Objects3D",o.children),this._deleteDocuments("Geometries",o.geometries),this._deleteDocuments("Materials",o.materials)]);t.TMongooseController.returnData({deletedObjectsCount:i,deletedGeometriesResult:a,deletedMaterialsResult:c},r)}}catch(e){t.TMongooseController.returnError(e,r)}}async _deleteDocuments(e,t){if(r.isEmptyArray(t))return 0;return(await this._driver.model(e).deleteMany({_id:{$in:t}}).exec()).deletedCount}async _deleteDocument(e){if(r.isNotDefined(e))return null;const t=await this._driver.model(e.type).findByIdAndDelete(e._id).exec();return t&&t._doc?t._doc._id:null}async _removeParentReference(e){const t=e.parent;if(r.isNotDefined(t))return null;const n=await this._readOneDocument("Objects3D",{_id:t}),o=n.children,i=o.indexOf(e._id);o.splice(i,1);return await this._updateDocument(n,{$set:{children:o}})}async _removeChildrenDocuments(e){let t=[];for(let r=e.length-1;r>=0;r--)t.push(this._removeChildDocument(e[r]));return Promise.all(t)}async _removeChildDocument(e){const t=await this._readManyDocument("Objects3D",{parent:e._id}),r=await this._removeChildrenDocuments(t),n=await this._removeOrphanGeometryWithId(e.geometry),o=await this._removeOrphanMaterialsWithIds(e.material||[]);return{object:await this._deleteDocument(e),children:r,geometry:n,materials:o}}async _removeOrphanGeometryWithId(e){if(r.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{geometry:e})).length>1)return;const t=await this._readOneDocument("Geometries",{_id:e});return await this._deleteDocument(t)}async _removeOrphanMaterialsWithIds(e){if(r.isNotDefined(e))return;if(r.isEmptyArray(e))return;const t=[];for(let r=0,n=e.length;r<n;r++)t.push(this._removeOrphanMaterialWithId(e[r]));return Promise.all(t)}async _removeOrphanMaterialWithId(e){if(r.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{material:e})).length>1)return;const t=await this._readOneDocument("Materials",{_id:e});return await this._deleteDocument(t)}}
/**
 * @module Converters/ColladaToThree
 * @desc Export JsonToThree converter class about .dae files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class d extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.ColladaLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Loader/DBFLoader
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * From:
 * https://www.clicketyclick.dk/databases/xbase/format/db2_dbf.html#DBII_DBF_STRUCT
 * http://web.archive.org/web/20150323061445/http://ulisse.elettra.trieste.it/services/doc/dbase/DBFstruct.htm
 * http://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm
 *
 *
 */const l=a.toEnum({FoxPro:48,FoxPro_Autoincrement:49,dBASE_II:2,FoxPro_Var:50,dBASE_III_plus:3,dBASE_III_plus_memo:131,dBASE_IV_SQL_table:67,dBASE_IV_SQL_system:99,dBASE_IV_memo:139,dBASE_IV_memo_SQL_table:203,FoxBase:251,dBase_v_7:4,FoxPro_2_x:245,HiPerSix_memo:229}),f=a.toEnum({Binary:"B",Character:"C",Date:"D",Numeric:"N",Logical:"L",Memo:"M",Timestamp:"@",Long:"I",Autoincrement:"+",Float:"F",Double:"O",OLE:"G"});class h{constructor(e={}){const t={manager:n.DefaultLoadingManager,logger:i.DefaultLogger,reader:new o.TBinaryReader,...e};this.manager=t.manager,this.logger=t.logger,this.reader=t.reader}get manager(){return this._manager}set manager(e){this._manager=e}get logger(){return this._logger}set logger(e){this._logger=e}get reader(){return this._reader}set reader(e){this._reader=e}setManager(e){return this.manager=e,this}setLogger(e){return this.logger=e,this}setReader(e){return this.reader=e,this}load(e,t,r,o){const i=this,a=new n.FileLoader(i.manager);a.setResponseType("arraybuffer"),a.load(e,(e=>{t(i.parse(e))}),r,o)}parse(e){this.reader.setEndianess(o.Endianness.Big).setBuffer(e);const t=this.reader.getInt8();if(!this._isValidVersion(t))return this.logger.error(`DBFLoader: Invalid version number: ${t}`),null;const r=this._parseHeader(t);return{header:r,datas:this._parseDatas(t,r)}}_isValidVersion(e){return l.includes(e)}_parseHeader(e){let t={};switch(e){case l.FoxPro:case l.FoxPro_Autoincrement:case l.FoxPro_Var:case l.dBASE_II:t=this._parseHeaderV2();break;case l.dBASE_III_plus:case l.dBASE_III_plus_memo:t=this._parseHeaderV2_5();break;case l.dBASE_IV_memo:case l.dBASE_IV_memo_SQL_table:case l.dBASE_IV_SQL_system:case l.dBASE_IV_SQL_table:t=this._parseHeaderV3();break;case l.dBase_v_7:case l.FoxPro_2_x:case l.HiPerSix_memo:t=this._parseHeaderV4();break;default:throw new RangeError(`Invalid version parameter: ${e}`)}return this.reader.getUint8()!==h.Terminator&&this.logger.error("DBFLoader: Invalid terminator after field descriptors !!!"),t}_parseHeaderV2(){const e=this.reader.getInt16(),t=this.reader.getInt8()+h.YearOffset,r=this.reader.getInt8(),n=this.reader.getInt8(),o=this.reader.getInt16();let i,a,c,s,u,m=[];for(let t=0;t<e;t++)i=this.reader.getString(11),a=this.reader.getChar(),c=this.reader.getUint8(),s=this.reader.getInt16(),u=this.reader.getInt8(),m.push({name:i,type:a,length:c,memoryAddress:s,decimalCount:u});return{numberOfRecords:e,year:t,month:r,day:n,lengthOfEachRecords:o,fields:m}}_parseHeaderV2_5(){const e=this.reader.getInt8()+h.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(o.Endianness.Little);const n=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(o.Endianness.Big),this.reader.skipOffsetOf(20);let c,s,u,m,d,l,f,g=[];for(let e=0;e<n;e++)c=this.reader.getString(11),s=this.reader.getChar(),m=this.reader.getInt32(),u=this.reader.getUint8(),d=this.reader.getUint8(),this.reader.skipOffsetOf(2),l=this.reader.getInt8(),this.reader.skipOffsetOf(2),f=this.reader.getInt8(),this.reader.skipOffsetOf(1),g.push({name:c,type:s,length:u,memoryAddress:m,decimalCount:d,workAreaId:l,MDXFlag:f});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:i,numberOfByteInRecord:a,fields:g}}_parseHeaderV3(){const e=this.reader.getInt8()+h.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(o.Endianness.Little);const n=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(o.Endianness.Big),this.reader.skipOffsetOf(2);const c=this.reader.getInt8(),s=this.reader.getInt8();this.reader.skipOffsetOf(12);const u=this.reader.getInt8(),m=this.reader.getInt8();this.reader.skipOffsetOf(2);let d,l,f,g,p,S,y=[];for(;this.reader.getOffset()<i-1;)d=this.reader.getString(11),l=this.reader.getChar(),this.reader.skipOffsetOf(4),f=this.reader.getUint8(),g=this.reader.getUint8(),this.reader.skipOffsetOf(2),p=this.reader.getInt8(),this.reader.skipOffsetOf(10),S=this.reader.getInt8(),y.push({name:d,type:l,length:f,decimalCount:g,workAreaId:p,MDXFieldFlag:S});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:i,numberOfByteInRecord:a,incompleteTransactionFlag:c,encryptionFlag:s,MDXFlag:u,languageDriverId:m,fields:y}}_parseHeaderV4(){const e=this.reader.getInt8()+h.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(o.Endianness.Little);const n=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(o.Endianness.Big),this.reader.skipOffsetOf(2);const c=this.reader.getInt8(),s=this.reader.getInt8();this.reader.skipOffsetOf(12);const u=this.reader.getInt8(),m=this.reader.getInt8();this.reader.skipOffsetOf(2);const d=this.reader.getString(32);this.reader.skipOffsetOf(4);let l,f,g,p,S,y,M=[];for(let e=0;e<n;e++)l=this.reader.getString(32),f=this.reader.getChar(),g=this.reader.getUint8(),p=this.reader.getUint8(),this.reader.skipOffsetOf(2),S=this.reader.getInt8(),this.reader.skipOffsetOf(2),y=this.reader.getInt32(),this.reader.skipOffsetOf(4),M.push({name:l,type:f,length:g,decimalCount:p,MDXFieldFlag:S,nextAutoincrementValue:y});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:i,numberOfByteInRecord:a,incompleteTransactionFlag:c,encryptionFlag:s,MDXFlag:u,languageDriverId:m,languageDriverName:d,fields:M}}_parseDatas(e,t){const r=t.numberOfRecords,n=t.fields;let o=[],i=null,a=null;for(let e=0;e<r;e++){i={},i.deleted=this.reader.getUint8()===h.DeletedRecord;for(let e=0,t=n.length;e<t;e++)switch(a=n[e],a.type){case f.Binary:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case f.Numeric:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case f.Character:case f.Date:i[a.name]=this.reader.getString(a.length);break;case f.Logical:{const e=this.reader.getChar().toLowerCase();i[a.name]="t"===e||"y"===e||"f"!==e&&"n"!==e&&null}break;case f.Memo:i[a.name]=this.reader.getString(a.length);break;case f.Timestamp:break;case f.Long:case f.Autoincrement:i[a.name]=this.reader.getInt32();break;case f.Float:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case f.Double:i[a.name]=this.reader.getFloat64();break;case f.OLE:i[a.name]=this.reader.getString(a.length);break;default:throw new RangeError(`Invalid data type parameter: ${a.type}`)}o.push(i)}return o}_parseFieldProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt16(),n=this.reader.getInt16(),o=this.reader.getInt16(),i=this.reader.getInt16(),a=this.reader.getInt16(),c=this.reader.getInt16();let s=[];for(let t=0;t<e;t++)s.push(this._getStandardProperties());let u=[];for(let e=0;e<r;e++)u.push(this._getCustomProperties());let m=[];for(let e=0;e<o;e++)m.push(this._getReferentialIntegrityProperties());return{numberOfStandardProperties:e,startOfStandardPropertiesDescriptor:t,numberOfCustomProperties:r,startOfCustomPropertiesDescriptor:n,numberOfReferentialIntegrityProperties:o,startOfReferentialIntegrityDescriptor:i,startOfData:a,sizeOfPropertiesStructure:c,standardProperties:s,customProperties:u,referentialIntegrityProperties:m}}_getStandardProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8(),n=this.reader.getInt8(),o=this.reader.getInt8();this.reader.skipOffsetOf(4);return{generationalNumber:e,tableFieldOffset:t,propertyDescribed:r,type:n,isConstraint:o,offsetFromStart:this.reader.getInt16(),widthOfDatabaseField:this.reader.getInt16()}}_getCustomProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8();this.reader.skipOffsetOf(1);return{generationalNumber:e,tableFieldOffset:t,type:r,offsetFromStartOfName:this.reader.getInt16(),lengthOfName:this.reader.getInt16(),offsetFromStartOfData:this.reader.getInt16(),lengthOfData:this.reader.getInt16()}}_getReferentialIntegrityProperties(){return{databaseState:this.reader.getInt8(),sequentialNumberRule:this.reader.getInt16(),offsetOfTheRIRuleName:this.reader.getInt16(),sizeOfTheRIRuleName:this.reader.getInt16(),offsetOfNameOfForeignTable:this.reader.getInt16(),sizeOfNameOfForeignTable:this.reader.getInt16(),stateBehaviour:this.reader.getInt8(),numberOfFieldsInLinkingKey:this.reader.getInt16(),offsetOfLocalTableTagName:this.reader.getInt16(),sizeOfTheLocalTableTagName:this.reader.getInt16(),offsetOfForeignTableTagName:this.reader.getInt16(),sizeOfTheForeignTableTagName:this.reader.getInt16()}}}h.Terminator=13,h.DeletedRecord=26,h.YearOffset=1900;
/**
 * @module Converters/DbfToThree
 * @desc Export JsonToThree converter class about .dbf files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link module:Loader/DBFLoader Loader/DBFLoader}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class g extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new h;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/FbxToThree
 * @desc Export JsonToThree converter class about .fbx files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class p extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.FBXLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Converters/JsonToThree
 * @desc Export JsonToThree converter class about .json files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class S extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.ObjectLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Converters/MtlToThree
 * @desc Export JsonToThree converter class about .mtl files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class y extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.String})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.MTLLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Converters/Obj2ToThree
 * @desc Export JsonToThree converter class about .obj files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class M extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.OBJLoader2;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Loader/SHPLoader
 * @desc Export SHPLoader to load .shp files
 *
 * @requires {@link https://github.com/Itee/itee-client itee-client}
 * @requires {@link https://github.com/Itee/itee-utils itee-utils}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 * @example Todo...
 *
 */const b=a.toEnum({NullShape:0,Point:1,Polyline:3,Polygon:5,MultiPoint:8,PointZ:11,PolyLineZ:13,PolygonZ:15,MultiPointZ:18,PointM:21,PolylineM:23,PolygonM:25,MultiPointM:28,MultiPatch:31});class T{constructor(e={}){const t={manager:n.DefaultLoadingManager,logger:i.DefaultLogger,reader:new o.TBinaryReader,globalOffset:new n.Vector3(0,0,0),worldAxis:{from:"zUp",to:"zForward"},...e};this.manager=t.manager,this.logger=t.logger,this.reader=t.reader,this.globalOffset=t.globalOffset,this.worldAxis=t.worldAxis}get globalOffset(){return this._globalOffset}set globalOffset(e){this._globalOffset=e}get worldAxis(){return this._worldAxis}set worldAxis(e){this._worldAxis=e}get manager(){return this._manager}set manager(e){this._manager=e}get logger(){return this._logger}set logger(e){this._logger=e}get reader(){return this._reader}set reader(e){this._reader=e}setGlobalOffset(e){return this.globalOffset=e,this}setWorldAxis(e){return this.worldAxis=e,this}setManager(e){return this.manager=e,this}setLogger(e){return this.logger=e,this}setReader(e){return this.reader=e,this}load(e,t,r,o){const i=this,a=new n.FileLoader(i.manager);a.setResponseType("arraybuffer"),a.load(e,(e=>{t(i.parse(e))}),r,o)}parse(e){this._reader.setEndianess(o.Endianness.Big).setBuffer(e);const t=this._parseHeader();if(t.fileCode!==T.FileCode)return this.logger.error("SHPLoader: Invalide Shape file code !"),null;if(t.fileLength<T.MinFileLength)return this.logger.error("SHPLoader: Shape file have an incorrect length !"),null;if(!Object.values(b).includes(t.shapeType))return this.logger.error("SHPLoader: Shape file have an incorrect shape type !"),null;t.version<T.MinVersion&&this.logger.warn("SHPLoader: Version of shape file below than 1000 could be incorrectly parsed !");const r=this._parseDatas(t);return this._convertToObjects(r)}_parseHeader(){const e=this._reader.getInt32();this._reader.skipOffsetOf(20);const t=this._reader.getInt32();this._reader.setEndianess(o.Endianness.Little);const r=this._reader.getInt32(),n=this._reader.getInt32(),i=this._reader.getInt32(),a=this._reader.getInt32();return{fileCode:e,fileLength:t,version:r,shapeType:n,boundingBox:{xMin:i,xMax:this._reader.getInt32(),yMin:a,yMax:this._reader.getInt32(),zMin:this._reader.getInt32(),zMax:this._reader.getInt32(),mMin:this._reader.getInt32(),mMax:this._reader.getInt32()}}}_parseDatas(e){this._reader.skipOffsetTo(100);let t,r,n,i=[];for(;!this._reader.isEndOfFile();)switch(t=this._parseRecordHeader(),r=this._reader.getOffset()+2*t.contentLength,this._reader.setEndianess(o.Endianness.Little),e.shapeType){case b.NullShape:this._reader.skipOffsetTo(r);break;case b.Point:case b.PointZ:case b.PointM:for(;this._reader.getOffset()<r;)n=this._parsePoint(),n&&i.push(n);break;case b.Polyline:case b.PolyLineZ:case b.PolylineM:for(;this._reader.getOffset()<r;)n=this._parsePolyLine(),n&&i.push(n);break;case b.Polygon:case b.PolygonZ:case b.PolygonM:for(;this._reader.getOffset()<r;)n=this._parsePolyLine(),n&&i.push(n);break;case b.MultiPoint:case b.MultiPointZ:case b.MultiPointM:for(;this._reader.getOffset()<r;)n=this._parseMultiPoint(),n&&i.push(n);break;case b.MultiPatch:for(;this._reader.getOffset()<r;)n=this._parseMultiPatch(),n&&i.push(n);break;default:this.logger.error(`SHPLoader: Invalid switch parameter: ${e.shapeType}`)}return i}_parseRecordHeader(){this._reader.setEndianess(o.Endianness.Big);return{recordNumber:this._reader.getInt32(),contentLength:this._reader.getInt32()}}_parseNull(){return this._reader.getInt32(),null}_parsePoint(){const e=this._reader.getInt32();if(e===b.NullShape)return null;return{shapeType:e,x:this._reader.getFloat64(),y:this._reader.getFloat64()}}_parsePolyLine(){const e=this._reader.getInt32();if(e===b.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=this._reader.getInt32(),o=new Array(r);for(let e=0;e<r;e++)o[e]=this._reader.getInt32();const i=new Array(n);for(let e=0;e<n;e++)i[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};return{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:n,parts:o,points:i}}_parsePolygon(){const e=this._reader.getInt32();if(e===b.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=this._reader.getInt32();let o=new Array(r);for(let e=0;e<r;e++)o[e]=this._reader.getInt32();let i=new Array(n);for(let e=0;e<n;e++)i[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};const c=[],s=[];return o.forEach(((e,t)=>{const r=i.slice(e,o[t+1]);a.ringClockwise(r)?c.push(r):s.push(r)})),s.forEach((e=>{c.some((t=>{if(a.ringContainsSome(t[0],e))return t.push(e),!0}))||c.push([e])})),{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:n,parts:o,polygons:c}}_parseMultiPoint(){const e=this._reader.getInt32();if(e===b.NullShape)return null;const t={xMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMin:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=new Array(r);for(let e=0;e<r;e++)n.push([this._reader.getFloat64(),this._reader.getFloat64()]);return{shapeType:e,boundingBox:t,numberOfPoints:r,points:n}}_parseMultiPatch(){const e=this._reader.getInt32();return e===b.NullShape?null:{shapeType:e}}_convertToObjects(e){let t=[];for(let t=0,n=e.length;t<n;t++){let n=e[t];n.shapeType!==b.Polygon&&n.shapeType!==b.PolygonZ&&n.shapeType!==b.PolygonM||(n.points&&Array.isArray(n.points[0])?r(n.points):o(n.points))}function r(e){for(let t=0,n=e.length;t<n;t++){let n=e[t];n?Array.isArray(n[0])?r(n):o(n):this.logger.log("no array, oups !")}}function o(e){t.push(new n.Shape(e))}return t}}T.FileCode=9994,T.MinFileLength=100,T.MinVersion=1e3;
/**
 * @module Converters/ShpToThree
 * @desc Export JsonToThree converter class about .shp files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link module:Loader/SHPLoader Loader/SHPLoader}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class F extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new T;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/StlToThree
 * @desc Export JsonToThree converter class about .stl files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class w extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.STLLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Converters/TdsToThree
 * @desc Export JsonToThree converter class about .3ds files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class v extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.TDSLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Inserters/ThreeToMongoDB
 * @desc Export ThreeToMongoDB mongodb inserter class.
 *
 * @requires {@link https://github.com/Itee/itee-client itee-client}
 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class _ extends e.TAbstractDataInserter{static _arrayify(e){let t=[];return r.isDefined(e)&&(t=r.isArray(e)?e:[e]),t}static _toLog(e){return JSON.stringify({type:e.type||"undefined",name:e.name||"undefined",uuid:e.uuid||"undefined",id:e._id||"undefined"})}constructor(e={}){const t={logger:i.DefaultLogger,...e};super(t),this.logger=t.logger,this.mergeStrategy="add",this._cache={}}async _save(e,t,n,o,i){const a=_._arrayify(e);if(r.isEmptyArray(a))return void i("No data to save in database. Abort insert !");const c=a.map((e=>e.name));this.logger.log(`ThreeToMongoDB: Saving ${c}`),t.mergeStrategy&&(this.mergeStrategy=t.mergeStrategy);try{const e=t.parentId;let o=null,c=null;if(r.isDefined(e)){const n=await this._readDocument("Objects3D",{_id:e});if(r.isNull(n))return void i(`Unable to retrieve parent with id (${t.parentId}). Abort insert !`);if("add"===this.mergeStrategy)o=await this._parseObjects(a,e),c=r.isDefined(o)?o.filter((e=>e)).map((e=>e._id)):[],await this._updateDocument(n,{$addToSet:{children:c}});else if("replace"===this.mergeStrategy){const t=await this._readDocuments("Objects3D",{parent:e}),i=a.map((e=>e.uuid)),s=t.filter((e=>!i.includes(e.uuid)));await this._removeChildrenDocuments(s),o=await this._parseObjects(a,e),c=r.isDefined(o)?o.filter((e=>e)).map((e=>e._id)):[],await this._updateDocument(n,{$set:{children:c}})}}else o=await this._parseObjects(a,null),c=r.isDefined(o)?o.filter((e=>e)).map((e=>e._id)):[];this.logger.log(`ThreeToMongoDB: Saved ${c}`),n()}catch(e){i(e)}finally{this._cache={}}}async _parseObjects(e=[],t=null){this.logger.debug("_parseObjects(...)");const n=_._arrayify(e);if(r.isEmptyArray(n))return null;const o=[];for(let e=0,r=n.length;e<r;e++)o.push(this._parseObject(n[e],t));return Promise.all(o)}async _parseObject(e,t=null){if(this.logger.debug(`_parseObject(${_._toLog(e)}, ${t})`),r.isNotDefined(e))return null;const n=e.type,o=e.name,i=e.geometry,a=_._arrayify(e.children),c=_._arrayify(e.material);if(r.isDefined(i)&&r.isEmptyArray(a))if(i.isGeometry){const e=i.vertices;if(r.isNotDefined(e)||r.isEmptyArray(e))return this.logger.error(`Leaf object ${o} have a geometry that doesn't contain vertices ! Skip it.`),null}else{if(!i.isBufferGeometry)return this.logger.error(`Object ${o} contain an unknown/unmanaged geometry of type ${i.type} ! Skip it.`),null;{const e=i.attributes;if(r.isNotDefined(e))return this.logger.error(`Buffer geometry of ${o} doesn't contain attributes ! Skip it.`),null;const t=e.position;if(r.isNotDefined(t)||0===t.count)return this.logger.error(`Leaf object ${o} have a buffer geometry that doesn't contain position attribute ! Skip it.`),null}}let s=null;if(_.AvailableLineTypes.includes(n)){if(r.isNotDefined(i))return this.logger.error(`Missing geometry for object ${e.name} of type ${n}. Only Sprite can contains material without geometry ! Skip it.`),null;s=_.AvailableLineMaterialTypes}else if(_.AvailablePointTypes.includes(n)){if(r.isNotDefined(i))return this.logger.error(`Missing geometry for object ${e.name} of type ${n}. Only Sprite can contains material without geometry ! Skip it.`),null;s=_.AvailablePointMaterialTypes}else _.AvailableSpriteTypes.includes(n)&&(s=_.AvailableSpriteMaterialTypes);if(s)for(let e=0,t=c.length;e<t;e++){const t=c[e].type;if(!s.includes(t))return this.logger.error(`Object ${o} of type ${n}, contain an invalid material of type ${t} ! Skip it.`),null}const u=await this._getOrCreateDocuments(i),m=r.isDefined(u)?u.filter((e=>e)).map((e=>e._id)).pop():null,d=await this._getOrCreateDocuments(c),l=r.isDefined(d)?d.filter((e=>e)).map((e=>e._id)):[];let f=await this._readDocument(n,{uuid:e.uuid,parent:t});if(r.isDefined(f))if("add"===this.mergeStrategy){const e=await this._parseObjects(a,f._id),t=r.isDefined(e)?e.filter((e=>e)).map((e=>e._id)):[];await this._updateDocument(f,{$addToSet:{children:t}})}else if("replace"===this.mergeStrategy){const e=await this._readDocuments("Objects3D",{parent:f._id}),t=a.map((e=>e.uuid)),n=e.filter((e=>!t.includes(e.uuid)));await this._removeChildrenDocuments(n);const o=await this._parseObjects(a,f._id),i=r.isDefined(o)?o.filter((e=>e)).map((e=>e._id)):[];await this._updateDocument(f,{$set:{children:i,geometry:m,material:l}})}else this.logger.error(`Unknown/Unmanaged merge srategy ${this.mergeStrategy}`);else{e.parent=t,e.children=[],e.geometry=m,e.material=l,f=await this._createDocument(e);const n=await this._parseObjects(a,f._id),o=r.isDefined(n)?n.filter((e=>e)).map((e=>e._id)):[];await this._updateDocument(f,{$set:{children:o,geometry:m,material:l}})}return f}async _getOrCreateDocuments(e=[]){this.logger.debug("_getOrCreateDocuments(...)");const t=_._arrayify(e);if(r.isEmptyArray(t))return null;const n=[];for(let e=0,r=t.length;e<r;e++)n.push(this._getOrCreateDocument(t[e]));return Promise.all(n)}async _getOrCreateDocument(e){if(this.logger.debug(`_getOrCreateDocument(${_._toLog(e)})`),r.isNotDefined(e))return null;let t=await this._readDocument(e.type,{uuid:e.uuid});return t=r.isDefined(t)?await this._updateDocument(t,e):await this._createDocument(e),t}async _createDocuments(e=[]){this.logger.debug("_createDocuments(...)");const t=_._arrayify(e);if(r.isEmptyArray(t))return null;const n=[];for(let e=0,r=t.length;e<r;e++)n.push(this._createDocument(t[e]));return Promise.all(n)}async _createDocument(e){if(this.logger.debug(`_createDocument(${_._toLog(e)})`),r.isNotDefined(e))return null;const t=await this._driver.model(e.type)(e).save(),n=r.isDefined(t)?t._doc:null;return n&&(this._cache[n.uuid]=n),n}async _readDocuments(e,t){if(this.logger.debug("_readDocuments(...)"),r.isNotDefined(e)||r.isNotDefined(t))return null;return(await this._driver.model(e).find(t).exec()).map((e=>e._doc))}async _readDocument(e,t){if(this.logger.debug(`_readDocument(${e}, ${JSON.stringify(t)})`),r.isNotDefined(e)||r.isNotDefined(t))return null;const n=this._cache[t.uuid];if(n)return n;const o=await this._driver.model(e).findOne(t).exec(),i=r.isDefined(o)?o._doc:null;return i&&(this._cache[i.uuid]=i),i}async _updateDocuments(e=[],t,n){this.logger.debug("_updateDocuments(...)");const o=_._arrayify(e);if(r.isEmptyArray(o))return null;const i=[];for(let e=0,r=o.length;e<r;e++)i.push(this._updateDocument(o[e],t,n));return Promise.all(i)}async _updateDocument(e,t,n={new:!0}){if(this.logger.debug(`_updateDocument(${_._toLog(e)}, ${JSON.stringify(t)}, ${JSON.stringify(n)})`),r.isNotDefined(e))return null;const o=await this._driver.model(e.type).findByIdAndUpdate(e._id,t,n).exec(),i=r.isDefined(o)?o._doc:null;return i&&(this._cache[i.uuid]=i),i}async _deleteDocuments(e=[]){this.logger.debug("_deleteDocuments(...)");const t=_._arrayify(e);if(r.isEmptyArray(t))return null;const n=[];for(let e=0,r=t.length;e<r;e++)n.push(this._deleteDocument(t[e]));return Promise.all(n)}async _deleteDocument(e){if(this.logger.debug(`_deleteDocument(${_._toLog(e)})`),r.isNotDefined(e))return null;const t=await this._driver.model(e.type).findByIdAndDelete(e._id).exec(),n=r.isDefined(t)?t._doc:null;return n&&delete this._cache[n.uuid],n}async _removeChildrenDocuments(e){this.logger.debug("_removeChildrenDocuments(...)");let t=[];for(let r=e.length-1;r>=0;r--)t.push(this._removeChildDocument(e[r]));return Promise.all(t)}async _removeChildDocument(e){this.logger.debug(`_removeChildDocument(${_._toLog(e)})`);const t=await this._readDocuments("Objects3D",{parent:e._id});await this._removeChildrenDocuments(t),await this._removeOrphanGeometryWithId(e.geometry),await this._removeOrphanMaterialsWithIds(e.material||[]),await this._deleteDocument(e)}async _removeOrphanGeometryWithId(e){if(this.logger.debug(`_removeOrphanGeometryWithId(${e})`),r.isNotDefined(e))return;if((await this._readDocuments("Objects3D",{geometry:e})).length>1)return;const t=await this._readDocument("Geometries",{_id:e});await this._deleteDocument(t)}async _removeOrphanMaterialsWithIds(e){this.logger.debug("_removeOrphanMaterialsWithIds(...)");const t=[];for(let r=0,n=e.length;r<n;r++)t.push(this._removeOrphanMaterialWithId(e[r]));return Promise.all(t)}async _removeOrphanMaterialWithId(e){this.logger.debug(`_removeOrphanMaterialWithId(${e})`);if((await this._readDocuments("Objects3D",{material:e})).length>1)return;const t=await this._readDocument("Materials",{_id:e});await this._deleteDocument(t)}}function N(e){if(e.__esModule)return e;var t=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})})),t}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Object3D
 *
 * @description Todo...
 */function B(){}_.AvailableCurveTypes=["Curve","ArcCurve","CatmullRomCurve3","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","CurvePath","Path","Shape"],_.AvailableLineTypes=["Line","LineLoop","LineSegments"],_.AvailableLineMaterialTypes=["LineBasicMaterial","LineDashedMaterial"],_.AvailablePointTypes=["Points"],_.AvailablePointMaterialTypes=["PointsMaterial"],_.AvailableSpriteTypes=["Sprite"],_.AvailableSpriteMaterialTypes=["SpriteMaterial"],B.getSchemaFrom=e=>(B._schema||B._createSchema(e),B._schema),B._createSchema=e=>{const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Mixed,i=r.Vector3,a=r.Quaternion,c=r.Matrix4,s=r.Euler;B._schema=new t({uuid:String,name:String,type:String,parent:n,children:[n],up:i,position:i,rotation:s,quaternion:a,scale:{type:i,default:{x:1,y:1,z:1}},modelViewMatrix:c,normalMatrix:c,matrix:c,matrixWorld:c,matrixAutoUpdate:Boolean,matrixWorldNeedsUpdate:Boolean,layers:{type:Number,set:e=>e.mask},visible:Boolean,castShadow:Boolean,receiveShadow:Boolean,frustumCulled:Boolean,renderOrder:Boolean,userData:{type:o,set:e=>function e(t){let r={};for(let n in t){if(!Object.prototype.hasOwnProperty.call(t,n))continue;let o=t[n];o.constructor===Object&&(o=e(o)),r[n.replace(/\./g,"")]=o}return r}(e)}},{collection:"objects",discriminatorKey:"type"})},B.getModelFrom=e=>(B._model||B._createModel(e),B._model),B._createModel=e=>{B._model=e.model("Objects3D",B.getSchemaFrom(e)),B._model.discriminator("Object3D",new e.Schema({}))},B.registerModelTo=e=>(B._model||B._createModel(e),e),B._schema=null,B._model=null;var C=N(Object.freeze({__proto__:null,Object3D:B}));
/**
 * @module Schemas/Audio/Audio
 * @desc Export the ThreeJs Audio Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Object3D:O}=C;let D,x;function I(e){return D||function(e){const t=e.Schema;D=new t({})}(e),D}function A(e){const t=O.getModelFrom(e);x=t.discriminator("Audio",I(e))}var E={name:"Audio",getSchemaFrom:I,getModelFrom:function(e){return x||A(e),x},registerModelTo:function(e){return x||A(e),e}};
/**
 * @module Schemas/Audio/AudioListener
 * @desc Export the ThreeJs AudioListener Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:G}=C;let L,P;function j(e){return L||function(e){const t=e.Schema;L=new t({})}(e),L}function $(e){const t=G.getModelFrom(e);P=t.discriminator("AudioListener",j(e))}var V={name:"AudioListener",getSchemaFrom:j,getModelFrom:function(e){return P||$(e),P},registerModelTo:function(e){return P||$(e),e}};
/**
 * @module Schemas/Audio/PositionalAudio
 * @desc Export the ThreeJs PositionalAudio Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:U}=C;let k,R;function H(e){return k||function(e){const t=e.Schema;k=new t({})}(e),k}function z(e){const t=U.getModelFrom(e);R=t.discriminator("PositionalAudio",H(e))}var Y={name:"PositionalAudio",getSchemaFrom:H,getModelFrom:function(e){return R||z(e),R},registerModelTo:function(e){return R||z(e),e}};
/**
 * @module Schemas/Camera/ArrayCamera
 * @desc Export the ThreeJs ArrayCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Q}=C;let W,X;function Z(e){return W||function(e){const t=e.Schema;W=new t({})}(e),W}function J(e){const t=Q.getModelFrom(e);X=t.discriminator("ArrayCamera",Z(e))}var q={name:"ArrayCamera",getSchemaFrom:Z,getModelFrom:function(e){return X||J(e),X},registerModelTo:function(e){return X||J(e),e}};
/**
 * @module Schemas/Camera/Camera
 * @desc Export the ThreeJs Camera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:K}=C;let ee,te;function re(e){return ee||function(e){const t=e.Schema;ee=new t({})}(e),ee}function ne(e){const t=K.getModelFrom(e);te=t.discriminator("Camera",re(e))}var oe={name:"Camera",getSchemaFrom:re,getModelFrom:function(e){return te||ne(e),te},registerModelTo:function(e){return te||ne(e),e}};
/**
 * @module Schemas/Camera/CubeCamera
 * @desc Export the ThreeJs CubeCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ie}=C;let ae,ce;function se(e){return ae||function(e){const t=e.Schema;ae=new t({})}(e),ae}function ue(e){const t=ie.getModelFrom(e);ce=t.discriminator("CubeCamera",se(e))}var me={name:"CubeCamera",getSchemaFrom:se,getModelFrom:function(e){return ce||ue(e),ce},registerModelTo:function(e){return ce||ue(e),e}};
/**
 * @module Schemas/Camera/OrthographicCamera
 * @desc Export the ThreeJs OrthographicCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:de}=C;let le,fe;function he(e){return le||function(e){const t=e.Schema;le=new t({})}(e),le}function ge(e){const t=de.getModelFrom(e);fe=t.discriminator("OrthographicCamera",he(e))}var pe={name:"OrthographicCamera",getSchemaFrom:he,getModelFrom:function(e){return fe||ge(e),fe},registerModelTo:function(e){return fe||ge(e),e}};
/**
 * @module Schemas/Camera/PerspectiveCamera
 * @desc Export the ThreeJs PerspectiveCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Se}=C;let ye,Me;function be(e){return ye||function(e){const t=e.Schema;ye=new t({})}(e),ye}function Te(e){const t=Se.getModelFrom(e);Me=t.discriminator("PerspectiveCamera",be(e))}var Fe={name:"PerspectiveCamera",getSchemaFrom:be,getModelFrom:function(e){return Me||Te(e),Me},registerModelTo:function(e){return Me||Te(e),e}};
/**
 * @module Schemas/Core/BufferAttribute
 * @desc Export the ThreeJs BufferAttribute Model and Schema for Mongoose.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{isInt8Array:we,isInt16Array:ve,isInt32Array:_e,isFloat32Array:Ne,isFloat64Array:Be,isUint8Array:Ce,isUint8ClampedArray:Oe,isUint16Array:De,isUint32Array:xe,isBigInt64Array:Ie,isBigUint64Array:Ae}=u.default;let Ee;var Ge={name:"BufferAttribute",getSchemaFrom:function(e){return Ee||function(e){const t=e.Schema,r=t.Types.Mixed,n=1,o=2,i=4,a=8,c={Int8Array:0,Uint8Array:1,Uint8ClampedArray:2,Int16Array:3,Uint16Array:4,Int32Array:5,Uint32Array:6,Float32Array:7,Float64Array:8,BigInt64Array:9,BigUint64Array:10};Ee=new t({array:{type:Buffer,set:e=>{const t=e.length;let r=null,s=0;if(we(e)){r=Buffer.allocUnsafe(n+t*n),s=r.writeUInt8(c.Int8Array,s);for(let n=0;n<t;n++)s=r.writeInt8(e[n],s)}else if(Ce(e)){r=Buffer.allocUnsafe(n+t*n),s=r.writeUInt8(c.Uint8Array,s);for(let n=0;n<t;n++)s=r.writeUInt8(e[n],s)}else if(Oe(e)){r=Buffer.allocUnsafe(n+t*n),s=r.writeUInt8(c.Uint8ClampedArray,s);for(let n=0;n<t;n++)s=r.writeUInt8(e[n],s)}else if(ve(e)){r=Buffer.allocUnsafe(n+t*o),s=r.writeUInt8(c.Int16Array,s);for(let n=0;n<t;n++)s=r.writeInt16BE(e[n],s)}else if(De(e)){r=Buffer.allocUnsafe(n+t*o),s=r.writeUInt8(c.Uint16Array,s);for(let n=0;n<t;n++)s=r.writeUInt16BE(e[n],s)}else if(_e(e)){r=Buffer.allocUnsafe(n+t*i),s=r.writeUInt8(c.Int32Array,s);for(let n=0;n<t;n++)s=r.writeInt32BE(e[n],s)}else if(xe(e)){r=Buffer.allocUnsafe(n+t*i),s=r.writeUInt8(c.Uint32Array,s);for(let n=0;n<t;n++)s=r.writeUInt32BE(e[n],s)}else if(Ne(e)){r=Buffer.allocUnsafe(n+t*i),s=r.writeUInt8(c.Float32Array,s);for(let n=0;n<t;n++)s=r.writeFloatBE(e[n],s)}else if(Be(e)){r=Buffer.allocUnsafe(n+t*a),s=r.writeUInt8(c.Float64Array,s);for(let n=0;n<t;n++)s=r.writeDoubleBE(e[n],s)}else if(Ie(e)){r=Buffer.allocUnsafe(n+t*a),s=r.writeUInt8(c.BigInt64Array,s);for(let n=0;n<t;n++)s=r.writeDoubleBE(e[n],s)}else{if(!Ae(e))throw new Error("Unable to determine the array type to bufferize.");r=Buffer.allocUnsafe(n+t*a),s=r.writeUInt8(c.BigUint64Array,s);for(let n=0;n<t;n++)s=r.writeDoubleBE(e[n],s)}return r}},count:Number,dynamic:Boolean,itemSize:Number,name:String,needsUpdate:Boolean,normalized:Boolean,updateRange:r,uuid:String,version:Number},{_id:!1,id:!1})}(e),Ee},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Core/BufferGeometry
 * @desc Export the ThreeJs BufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferAttribute Schemas/Core/BufferAttribute}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Le,Pe;function je(e){return Le||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Vector3,i=Ge.getSchemaFrom(e);Le=new t({uuid:String,name:String,type:String,index:i,attributes:{position:i,normal:i,color:i,uv:i},groups:n,boundingBox:{min:o,max:o},boundingSphere:{center:o,radius:Number},drawRange:n},{collection:"geometries",discriminatorKey:"type"})}(e),Le}function $e(e){Pe=e.model("BufferGeometries",je(e)),Pe.discriminator("BufferGeometry",new e.Schema({}))}const Ve={getSchemaFrom:je,getModelFrom:function(e){return Pe||$e(e),Pe},registerModelTo:function(e){return Pe||$e(e),e}};var Ue=Object.freeze({__proto__:null,BufferGeometry:Ve}),ke={};
/**
 * @module Schemas/Curves/Curve
 * @desc Export the ThreeJs Curve Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
let Re,He;function ze(e){return Re||function(e){const t=e.Schema;Re=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{collection:"curves",discriminatorKey:"type"})}(e),Re}function Ye(e){He=e.model("Curves",ze(e)),He.discriminator("Curve",new e.Schema({}))}var Qe=ke.Curve={name:"Curve",getSchemaFrom:ze,getModelFrom:function(e){return He||Ye(e),He},registerModelTo:function(e){return He||Ye(e),e}};
/**
 * @module Schemas/Core/CurvePath
 * @desc Export the ThreeJs CurvePath Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 * @augments module:Schemas/Curves/Curve
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:We}=ke;let Xe,Ze;function Je(e){return Xe||function(e){const t=e.Schema,r=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});Xe=new t({curves:[r],autoClose:{type:Boolean,default:!1}})}(e),Xe}function qe(e){const t=We.getModelFrom(e);Ze=t.discriminator("CurvePath",Je(e))}var Ke={name:"CurvePath",getSchemaFrom:Je,getModelFrom:function(e){return Ze||qe(e),Ze},registerModelTo:function(e){return Ze||qe(e),e}};
/**
 * @module Schemas/Core/Face3
 * @desc Export the ThreeJs Face3 Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let et;var tt={name:"Face3",getSchemaFrom:function(e){return et||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Vector3;et=new t({a:Number,b:Number,c:Number,normal:o,vertexNormals:[Number],color:n,vertexColors:[Number],materialIndex:Number},{_id:!1,id:!1})}(e),et},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Core/Geometry
 * @desc Export the ThreeJs Geometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Face3 Schemas/Core/Face3}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let rt,nt;function ot(e){return rt||function(e){const t=tt.getSchemaFrom(e),r=e.Schema,n=r.Types.Vector3;rt=new r({uuid:String,name:String,type:String,vertices:[n],colors:[Number],faces:[t],faceVertexUvs:[[Number]],morphTargets:[Number],morphNormals:[Number],skinWeights:[Number],skinIndices:[Number],lineDistances:[Number],boundingBox:{min:n,max:n},boundingSphere:{center:n,radius:Number},elementsNeedUpdate:Boolean,verticesNeedUpdate:Boolean,uvsNeedUpdate:Boolean,normalsNeedUpdate:Boolean,colorsNeedUpdate:Boolean,lineDistancesNeedUpdate:Boolean,groupsNeedUpdate:Boolean},{collection:"geometries",discriminatorKey:"type"})}(e),rt}function it(e){nt=e.model("Geometries",ot(e)),nt.discriminator("Geometry",new e.Schema({}))}const at={name:"Geometry",getSchemaFrom:ot,getModelFrom:function(e){return nt||it(e),nt},registerModelTo:function(e){return nt||it(e),e}};var ct=Object.freeze({__proto__:null,Geometry:at});
/**
 * @module Schemas/Core/Path
 * @desc Export the ThreeJs Path Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:st}=ke;let ut,mt;function dt(e){return ut||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});ut=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r})}(e),ut}function lt(e){const t=st.getModelFrom(e);mt=t.discriminator("Path",dt(e))}var ft={name:"Path",getSchemaFrom:dt,getModelFrom:function(e){return mt||lt(e),mt},registerModelTo:function(e){return mt||lt(e),e}};
/**
 * @module Schemas/Core/Shape
 * @desc Export the ThreeJs Shape Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:ht}=ke;let gt,pt;function St(e){return gt||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),o=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1});gt=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[o]})}(e),gt}function yt(e){const t=ht.getModelFrom(e);pt=t.discriminator("Shape",St(e))}var Mt={name:"Shape",getSchemaFrom:St,getModelFrom:function(e){return pt||yt(e),pt},registerModelTo:function(e){return pt||yt(e),e}};
/**
 * @module Schemas/Curves/ArcCurve
 * @desc Export the ThreeJs ArcCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:bt}=ke;let Tt,Ft;function wt(e){return Tt||function(e){const t=e.Schema;Tt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),Tt}function vt(e){const t=bt.getModelFrom(e);Ft=t.discriminator("ArcCurve",wt(e))}var _t={name:"ArcCurve",getSchemaFrom:wt,getModelFrom:function(e){return Ft||vt(e),Ft},registerModelTo:function(e){return Ft||vt(e),e}};
/**
 * @module Schemas/Curves/CatmullRomCurve3
 * @desc Export the ThreeJs CatmullRomCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Nt}=ke;let Bt,Ct;function Ot(e){return Bt||function(e){const t=e.Schema,r=t.Types.Vector3;Bt=new t({points:[r],closed:Boolean,curveType:String,tension:Number})}(e),Bt}function Dt(e){const t=Nt.getModelFrom(e);Ct=t.discriminator("CatmullRomCurve3",Ot(e))}var xt={name:"CatmullRomCurve3",getSchemaFrom:Ot,getModelFrom:function(e){return Ct||Dt(e),Ct},registerModelTo:function(e){return Ct||Dt(e),e}};
/**
 * @module Schemas/Curves/CubicBezierCurve
 * @desc Export the ThreeJs CubicBezierCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:It}=ke;let At,Et;function Gt(e){return At||function(e){const t=e.Schema,r=t.Types.Vector2;At=new t({v0:r,v1:r,v2:r,v3:r})}(e),At}function Lt(e){const t=It.getModelFrom(e);Et=t.discriminator("CubicBezierCurve",Gt(e))}var Pt={name:"CubicBezierCurve",getSchemaFrom:Gt,getModelFrom:function(e){return Et||Lt(e),Et},registerModelTo:function(e){return Et||Lt(e),e}};
/**
 * @module Schemas/Curves/CubicBezierCurve3
 * @desc Export the ThreeJs CubicBezierCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:jt}=ke;let $t,Vt;function Ut(e){return $t||function(e){const t=e.Schema,r=t.Types.Vector3;$t=new t({v0:r,v1:r,v2:r,v3:r})}(e),$t}function kt(e){const t=jt.getModelFrom(e);Vt=t.discriminator("CubicBezierCurve3",Ut(e))}var Rt={name:"CubicBezierCurve3",getSchemaFrom:Ut,getModelFrom:function(e){return Vt||kt(e),Vt},registerModelTo:function(e){return Vt||kt(e),e}};
/**
 * @module Schemas/Curves/CurveExtras
 * @desc Export the ThreeJs CurveExtras Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Ht}=ke;let zt,Yt;function Qt(e){return zt||function(e){const t=e.Schema;zt=new t({})}(e),zt}function Wt(e){const t=Ht.getModelFrom(e);Yt=t.discriminator("CurveExtras",Qt(e))}var Xt={name:"CurveExtras",getSchemaFrom:Qt,getModelFrom:function(e){return Yt||Wt(e),Yt},registerModelTo:function(e){return Yt||Wt(e),e}};
/**
 * @module Schemas/Curves/EllipseCurve
 * @desc Export the ThreeJs EllipseCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Zt}=ke;let Jt,qt;function Kt(e){return Jt||function(e){const t=e.Schema;Jt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),Jt}function er(e){const t=Zt.getModelFrom(e);qt=t.discriminator("EllipseCurve",Kt(e))}var tr={name:"EllipseCurve",getSchemaFrom:Kt,getModelFrom:function(e){return qt||er(e),qt},registerModelTo:function(e){return qt||er(e),e}};
/**
 * @module Schemas/Curves/LineCurve
 * @desc Export the ThreeJs LineCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:rr}=ke;let nr,or;function ir(e){return nr||function(e){const t=e.Schema,r=t.Types.Vector2;nr=new t({v0:r,v1:r})}(e),nr}function ar(e){const t=rr.getModelFrom(e);or=t.discriminator("LineCurve",ir(e))}var cr={name:"LineCurve",getSchemaFrom:ir,getModelFrom:function(e){return or||ar(e),or},registerModelTo:function(e){return or||ar(e),e}};
/**
 * @module Schemas/Curves/LineCurve3
 * @desc Export the ThreeJs LineCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:sr}=ke;let ur,mr;function dr(e){return ur||function(e){const t=e.Schema,r=t.Types.Vector3;ur=new t({v0:r,v1:r})}(e),ur}function lr(e){const t=sr.getModelFrom(e);mr=t.discriminator("LineCurve3",dr(e))}var fr={name:"LineCurve3",getSchemaFrom:dr,getModelFrom:function(e){return mr||lr(e),mr},registerModelTo:function(e){return mr||lr(e),e}};
/**
 * @module Schemas/Curves/NURBSCurve
 * @desc Export the ThreeJs NURBSCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:hr}=ke;let gr,pr;function Sr(e){return gr||function(e){const t=e.Schema;gr=new t({})}(e),gr}function yr(e){const t=hr.getModelFrom(e);pr=t.discriminator("NURBSCurve",Sr(e))}var Mr={name:"NURBSCurve",getSchemaFrom:Sr,getModelFrom:function(e){return pr||yr(e),pr},registerModelTo:function(e){return pr||yr(e),e}};
/**
 * @module Schemas/Curves/NURBSSurface
 * @desc Export the ThreeJs NURBSSurface Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:br}=ke;let Tr,Fr;function wr(e){return Tr||function(e){const t=e.Schema;Tr=new t({})}(e),Tr}function vr(e){const t=br.getModelFrom(e);Fr=t.discriminator("NURBSSurface",wr(e))}var _r={name:"NURBSSurface",getSchemaFrom:wr,getModelFrom:function(e){return Fr||vr(e),Fr},registerModelTo:function(e){return Fr||vr(e),e}};
/**
 * @module Schemas/Curves/QuadraticBezierCurve
 * @desc Export the ThreeJs QuadraticBezierCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Nr}=ke;let Br,Cr;function Or(e){return Br||function(e){const t=e.Schema,r=t.Types.Vector2;Br=new t({v0:r,v1:r,v2:r})}(e),Br}function Dr(e){const t=Nr.getModelFrom(e);Cr=t.discriminator("QuadraticBezierCurve",Or(e))}var xr={name:"QuadraticBezierCurve",getSchemaFrom:Or,getModelFrom:function(e){return Cr||Dr(e),Cr},registerModelTo:function(e){return Cr||Dr(e),e}};
/**
 * @module Schemas/Curves/QuadraticBezierCurve3
 * @desc Export the ThreeJs QuadraticBezierCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Ir}=ke;let Ar,Er;function Gr(e){return Ar||function(e){const t=e.Schema,r=t.Types.Vector3;Ar=new t({v0:r,v1:r,v2:r})}(e),Ar}function Lr(e){const t=Ir.getModelFrom(e);Er=t.discriminator("QuadraticBezierCurve3",Gr(e))}var Pr={name:"QuadraticBezierCurve3",getSchemaFrom:Gr,getModelFrom:function(e){return Er||Lr(e),Er},registerModelTo:function(e){return Er||Lr(e),e}};
/**
 * @module Schemas/Curves/SplineCurve
 * @desc Export the ThreeJs SplineCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:jr}=ke;let $r,Vr;function Ur(e){return $r||function(e){const t=e.Schema,r=t.Types.Vector3;$r=new t({points:[r]})}(e),$r}function kr(e){const t=jr.getModelFrom(e);Vr=t.discriminator("SplineCurve",Ur(e))}var Rr={name:"SplineCurve",getSchemaFrom:Ur,getModelFrom:function(e){return Vr||kr(e),Vr},registerModelTo:function(e){return Vr||kr(e),e}},Hr=N(Ue);
/**
 * @module Schemas/Geometries/BoxBufferGeometry
 * @desc Export the ThreeJs BoxBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{BufferGeometry:zr}=Hr;let Yr,Qr;function Wr(e){return Yr||function(e){const t=e.Schema;Yr=new t({})}(e),Yr}function Xr(e){const t=zr.getModelFrom(e);Qr=t.discriminator("BoxBufferGeometry",Wr(e))}var Zr={name:"BoxBufferGeometry",getSchemaFrom:Wr,getModelFrom:function(e){return Qr||Xr(e),Qr},registerModelTo:function(e){return Qr||Xr(e),e}},Jr=N(ct);
/**
 * @module Schemas/Geometries/BoxGeometry
 * @desc Export the ThreeJs BoxGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Geometry:qr}=Jr;let Kr,en;function tn(e){return Kr||function(e){const t=e.Schema;Kr=new t({})}(e),Kr}function rn(e){const t=qr.getModelFrom(e);en=t.discriminator("BoxGeometry",tn(e))}var nn={name:"BoxGeometry",getSchemaFrom:tn,getModelFrom:function(e){return en||rn(e),en},registerModelTo:function(e){return en||rn(e),e}};
/**
 * @module Schemas/Geometries/CircleBufferGeometry
 * @desc Export the ThreeJs CircleBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:on}=Hr;let an,cn;function sn(e){return an||function(e){const t=e.Schema;an=new t({})}(e),an}function un(e){const t=on.getModelFrom(e);cn=t.discriminator("CircleBufferGeometry",sn(e))}var mn={name:"CircleBufferGeometry",getSchemaFrom:sn,getModelFrom:function(e){return cn||un(e),cn},registerModelTo:function(e){return cn||un(e),e}};
/**
 * @module Schemas/Geometries/CircleGeometry
 * @desc Export the ThreeJs CircleGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:dn}=Jr;let ln,fn;function hn(e){return ln||function(e){const t=e.Schema;ln=new t({})}(e),ln}function gn(e){const t=dn.getModelFrom(e);fn=t.discriminator("CircleGeometry",hn(e))}var pn={name:"CircleGeometry",getSchemaFrom:hn,getModelFrom:function(e){return fn||gn(e),fn},registerModelTo:function(e){return fn||gn(e),e}};
/**
 * @module Schemas/Geometries/ConeBufferGeometry
 * @desc Export the ThreeJs ConeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Sn}=Hr;let yn,Mn;function bn(e){return yn||function(e){const t=e.Schema;yn=new t({})}(e),yn}function Tn(e){const t=Sn.getModelFrom(e);Mn=t.discriminator("ConeBufferGeometry",bn(e))}var Fn={name:"ConeBufferGeometry",getSchemaFrom:bn,getModelFrom:function(e){return Mn||Tn(e),Mn},registerModelTo:function(e){return Mn||Tn(e),e}};
/**
 * @module Schemas/Geometries/ConeGeometry
 * @desc Export the ThreeJs ConeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:wn}=Jr;let vn,_n;function Nn(e){return vn||function(e){const t=e.Schema;vn=new t({})}(e),vn}function Bn(e){const t=wn.getModelFrom(e);_n=t.discriminator("ConeGeometry",Nn(e))}var Cn={name:"ConeGeometry",getSchemaFrom:Nn,getModelFrom:function(e){return _n||Bn(e),_n},registerModelTo:function(e){return _n||Bn(e),e}};
/**
 * @module Schemas/Geometries/ConvexGeometry
 * @desc Export the ThreeJs ConvexGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:On}=Jr;let Dn,xn;function In(e){return Dn||function(e){const t=e.Schema;Dn=new t({})}(e),Dn}function An(e){const t=On.getModelFrom(e);xn=t.discriminator("ConvexGeometry",In(e))}var En={name:"ConvexGeometry",getSchemaFrom:In,getModelFrom:function(e){return xn||An(e),xn},registerModelTo:function(e){return xn||An(e),e}};
/**
 * @module Schemas/Geometries/CylinderBufferGeometry
 * @desc Export the ThreeJs CylinderBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Gn}=Hr;let Ln,Pn;function jn(e){return Ln||function(e){const t=e.Schema;Ln=new t({})}(e),Ln}function $n(e){const t=Gn.getModelFrom(e);Pn=t.discriminator("CylinderBufferGeometry",jn(e))}var Vn={name:"CylinderBufferGeometry",getSchemaFrom:jn,getModelFrom:function(e){return Pn||$n(e),Pn},registerModelTo:function(e){return Pn||$n(e),e}};
/**
 * @module Schemas/Geometries/CylinderGeometry
 * @desc Export the ThreeJs CylinderGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Un}=Jr;let kn,Rn;function Hn(e){return kn||function(e){const t=e.Schema;kn=new t({})}(e),kn}function zn(e){const t=Un.getModelFrom(e);Rn=t.discriminator("CylinderGeometry",Hn(e))}var Yn={name:"CylinderGeometry",getSchemaFrom:Hn,getModelFrom:function(e){return Rn||zn(e),Rn},registerModelTo:function(e){return Rn||zn(e),e}};
/**
 * @module Schemas/Geometries/DecalGeometry
 * @desc Export the ThreeJs DecalGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Qn}=Jr;let Wn,Xn;function Zn(e){return Wn||function(e){const t=e.Schema;Wn=new t({})}(e),Wn}function Jn(e){const t=Qn.getModelFrom(e);Xn=t.discriminator("DecalGeometry",Zn(e))}var qn={name:"DecalGeometry",getSchemaFrom:Zn,getModelFrom:function(e){return Xn||Jn(e),Xn},registerModelTo:function(e){return Xn||Jn(e),e}};
/**
 * @module Schemas/Geometries/DodecahedronGeometry
 * @desc Export the ThreeJs DodecahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Kn}=Jr;let eo,to;function ro(e){return eo||function(e){const t=e.Schema;eo=new t({})}(e),eo}function no(e){const t=Kn.getModelFrom(e);to=t.discriminator("DodecahedronGeometry",ro(e))}var oo={name:"DodecahedronGeometry",getSchemaFrom:ro,getModelFrom:function(e){return to||no(e),to},registerModelTo:function(e){return to||no(e),e}};
/**
 * @module Schemas/Geometries/EdgesGeometry
 * @desc Export the ThreeJs EdgesGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:io}=Jr;let ao,co;function so(e){return ao||function(e){const t=e.Schema;ao=new t({})}(e),ao}function uo(e){const t=io.getModelFrom(e);co=t.discriminator("EdgesGeometry",so(e))}var mo={name:"EdgesGeometry",getSchemaFrom:so,getModelFrom:function(e){return co||uo(e),co},registerModelTo:function(e){return co||uo(e),e}};
/**
 * @module Schemas/Geometries/ExtrudeBufferGeometry
 * @desc Export the ThreeJs ExtrudeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:lo}=Hr;let fo,ho;function go(e){return fo||function(e){const t=e.Schema;fo=new t({})}(e),fo}function po(e){const t=lo.getModelFrom(e);ho=t.discriminator("ExtrudeBufferGeometry",go(e))}var So={name:"ExtrudeBufferGeometry",getSchemaFrom:go,getModelFrom:function(e){return ho||po(e),ho},registerModelTo:function(e){return ho||po(e),e}};
/**
 * @module Schemas/Geometries/ExtrudeGeometry
 * @desc Export the ThreeJs ExtrudeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:yo}=Jr;let Mo,bo;function To(e){return Mo||function(e){const t=e.Schema;Mo=new t({})}(e),Mo}function Fo(e){const t=yo.getModelFrom(e);bo=t.discriminator("ExtrudeGeometry",To(e))}var wo={name:"ExtrudeGeometry",getSchemaFrom:To,getModelFrom:function(e){return bo||Fo(e),bo},registerModelTo:function(e){return bo||Fo(e),e}};
/**
 * @module Schemas/Geometries/IcosahedronBufferGeometry
 * @desc Export the ThreeJs IcosahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:vo}=Hr;let _o,No;function Bo(e){return _o||function(e){const t=e.Schema;_o=new t({})}(e),_o}function Co(e){const t=vo.getModelFrom(e);No=t.discriminator("IcosahedronBufferGeometry",Bo(e))}var Oo={name:"IcosahedronBufferGeometry",getSchemaFrom:Bo,getModelFrom:function(e){return No||Co(e),No},registerModelTo:function(e){return No||Co(e),e}};
/**
 * @module Schemas/Geometries/IcosahedronGeometry
 * @desc Export the ThreeJs IcosahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Do}=Jr;let xo,Io;function Ao(e){return xo||function(e){const t=e.Schema;xo=new t({})}(e),xo}function Eo(e){const t=Do.getModelFrom(e);Io=t.discriminator("IcosahedronGeometry",Ao(e))}var Go={name:"IcosahedronGeometry",getSchemaFrom:Ao,getModelFrom:function(e){return Io||Eo(e),Io},registerModelTo:function(e){return Io||Eo(e),e}};
/**
 * @module Schemas/Geometries/InstancedBufferGeometry
 * @desc Export the ThreeJs InstancedBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Lo}=Hr;let Po,jo;function $o(e){return Po||function(e){const t=e.Schema;Po=new t({})}(e),Po}function Vo(e){const t=Lo.getModelFrom(e);jo=t.discriminator("InstancedBufferGeometry",$o(e))}var Uo={name:"InstancedBufferGeometry",getSchemaFrom:$o,getModelFrom:function(e){return jo||Vo(e),jo},registerModelTo:function(e){return jo||Vo(e),e}};
/**
 * @module Schemas/Geometries/LatheBufferGeometry
 * @desc Export the ThreeJs LatheBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:ko}=Hr;let Ro,Ho;function zo(e){return Ro||function(e){const t=e.Schema;Ro=new t({})}(e),Ro}function Yo(e){const t=ko.getModelFrom(e);Ho=t.discriminator("LatheBufferGeometry",zo(e))}var Qo={name:"LatheBufferGeometry",getSchemaFrom:zo,getModelFrom:function(e){return Ho||Yo(e),Ho},registerModelTo:function(e){return Ho||Yo(e),e}};
/**
 * @module Schemas/Geometries/LatheGeometry
 * @desc Export the ThreeJs LatheGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Wo}=Jr;let Xo,Zo;function Jo(e){return Xo||function(e){const t=e.Schema;Xo=new t({})}(e),Xo}function qo(e){const t=Wo.getModelFrom(e);Zo=t.discriminator("LatheGeometry",Jo(e))}var Ko={name:"LatheGeometry",getSchemaFrom:Jo,getModelFrom:function(e){return Zo||qo(e),Zo},registerModelTo:function(e){return Zo||qo(e),e}};
/**
 * @module Schemas/Geometries/OctahedronBufferGeometry
 * @desc Export the ThreeJs OctahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:ei}=Hr;let ti,ri;function ni(e){return ti||function(e){const t=e.Schema;ti=new t({})}(e),ti}function oi(e){const t=ei.getModelFrom(e);ri=t.discriminator("OctahedronBufferGeometry",ni(e))}var ii={name:"OctahedronBufferGeometry",getSchemaFrom:ni,getModelFrom:function(e){return ri||oi(e),ri},registerModelTo:function(e){return ri||oi(e),e}};
/**
 * @module Schemas/Geometries/OctahedronGeometry
 * @desc Export the ThreeJs OctahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ai}=Jr;let ci,si;function ui(e){return ci||function(e){const t=e.Schema;ci=new t({})}(e),ci}function mi(e){const t=ai.getModelFrom(e);si=t.discriminator("OctahedronGeometry",ui(e))}var di={name:"OctahedronGeometry",getSchemaFrom:ui,getModelFrom:function(e){return si||mi(e),si},registerModelTo:function(e){return si||mi(e),e}};
/**
 * @module Schemas/Geometries/ParametricBufferGeometry
 * @desc Export the ThreeJs ParametricBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:li}=Hr;let fi,hi;function gi(e){return fi||function(e){const t=e.Schema;fi=new t({})}(e),fi}function pi(e){const t=li.getModelFrom(e);hi=t.discriminator("ParametricBufferGeometry",gi(e))}var Si={name:"ParametricBufferGeometry",getSchemaFrom:gi,getModelFrom:function(e){return hi||pi(e),hi},registerModelTo:function(e){return hi||pi(e),e}};
/**
 * @module Schemas/Geometries/ParametricGeometry
 * @desc Export the ThreeJs ParametricGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:yi}=Jr;let Mi,bi;function Ti(e){return Mi||function(e){const t=e.Schema;Mi=new t({})}(e),Mi}function Fi(e){const t=yi.getModelFrom(e);bi=t.discriminator("ParametricGeometry",Ti(e))}var wi={name:"ParametricGeometry",getSchemaFrom:Ti,getModelFrom:function(e){return bi||Fi(e),bi},registerModelTo:function(e){return bi||Fi(e),e}};
/**
 * @module Schemas/Geometries/PlaneBufferGeometry
 * @desc Export the ThreeJs PlaneBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:vi}=Hr;let _i,Ni;function Bi(e){return _i||function(e){const t=e.Schema;_i=new t({})}(e),_i}function Ci(e){const t=vi.getModelFrom(e);Ni=t.discriminator("PlaneBufferGeometry",Bi(e))}var Oi={name:"PlaneBufferGeometry",getSchemaFrom:Bi,getModelFrom:function(e){return Ni||Ci(e),Ni},registerModelTo:function(e){return Ni||Ci(e),e}};
/**
 * @module Schemas/Geometries/PlaneGeometry
 * @desc Export the ThreeJs PlaneGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Di}=Jr;let xi,Ii;function Ai(e){return xi||function(e){const t=e.Schema;xi=new t({})}(e),xi}function Ei(e){const t=Di.getModelFrom(e);Ii=t.discriminator("PlaneGeometry",Ai(e))}var Gi={name:"PlaneGeometry",getSchemaFrom:Ai,getModelFrom:function(e){return Ii||Ei(e),Ii},registerModelTo:function(e){return Ii||Ei(e),e}};
/**
 * @module Schemas/Geometries/PolyhedronBufferGeometry
 * @desc Export the ThreeJs PolyhedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Li}=Hr;let Pi,ji;function $i(e){return Pi||function(e){const t=e.Schema;Pi=new t({})}(e),Pi}function Vi(e){const t=Li.getModelFrom(e);ji=t.discriminator("PolyhedronBufferGeometry",$i(e))}var Ui={name:"PolyhedronBufferGeometry",getSchemaFrom:$i,getModelFrom:function(e){return ji||Vi(e),ji},registerModelTo:function(e){return ji||Vi(e),e}};
/**
 * @module Schemas/Geometries/PolyhedronGeometry
 * @desc Export the ThreeJs PolyhedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ki}=Jr;let Ri,Hi;function zi(e){return Ri||function(e){const t=e.Schema;Ri=new t({})}(e),Ri}function Yi(e){const t=ki.getModelFrom(e);Hi=t.discriminator("PolyhedronGeometry",zi(e))}var Qi={name:"PolyhedronGeometry",getSchemaFrom:zi,getModelFrom:function(e){return Hi||Yi(e),Hi},registerModelTo:function(e){return Hi||Yi(e),e}};
/**
 * @module Schemas/Geometries/RingBufferGeometry
 * @desc Export the ThreeJs RingBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Wi}=Hr;let Xi,Zi;function Ji(e){return Xi||function(e){const t=e.Schema;Xi=new t({})}(e),Xi}function qi(e){const t=Wi.getModelFrom(e);Zi=t.discriminator("RingBufferGeometry",Ji(e))}var Ki={name:"RingBufferGeometry",getSchemaFrom:Ji,getModelFrom:function(e){return Zi||qi(e),Zi},registerModelTo:function(e){return Zi||qi(e),e}};
/**
 * @module Schemas/Geometries/RingGeometry
 * @desc Export the ThreeJs RingGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ea}=Jr;let ta,ra;function na(e){return ta||function(e){const t=e.Schema;ta=new t({})}(e),ta}function oa(e){const t=ea.getModelFrom(e);ra=t.discriminator("RingGeometry",na(e))}var ia={name:"RingGeometry",getSchemaFrom:na,getModelFrom:function(e){return ra||oa(e),ra},registerModelTo:function(e){return ra||oa(e),e}};
/**
 * @module Schemas/Geometries/ShapeBufferGeometry
 * @desc Export the ThreeJs ShapeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:aa}=Hr;let ca,sa;function ua(e){return ca||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),o=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1}),i=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[o]},{id:!1,_id:!1});ca=new t({shapes:[i],curveSegments:Number})}(e),ca}function ma(e){const t=aa.getModelFrom(e);sa=t.discriminator("ShapeBufferGeometry",ua(e))}var da={name:"ShapeBufferGeometry",getSchemaFrom:ua,getModelFrom:function(e){return sa||ma(e),sa},registerModelTo:function(e){return sa||ma(e),e}};
/**
 * @module Schemas/Geometries/ShapeGeometry
 * @desc Export the ThreeJs ShapeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:la}=Jr;let fa,ha;function ga(e){return fa||function(e){const t=e.Schema;fa=new t({})}(e),fa}function pa(e){const t=la.getModelFrom(e);ha=t.discriminator("ShapeGeometry",ga(e))}var Sa={name:"ShapeGeometry",getSchemaFrom:ga,getModelFrom:function(e){return ha||pa(e),ha},registerModelTo:function(e){return ha||pa(e),e}};
/**
 * @module Schemas/Geometries/SphereBufferGeometry
 * @desc Export the ThreeJs SphereBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:ya}=Hr;let Ma,ba;function Ta(e){return Ma||function(e){const t=e.Schema;Ma=new t({})}(e),Ma}function Fa(e){const t=ya.getModelFrom(e);ba=t.discriminator("SphereBufferGeometry",Ta(e))}var wa={name:"SphereBufferGeometry",getSchemaFrom:Ta,getModelFrom:function(e){return ba||Fa(e),ba},registerModelTo:function(e){return ba||Fa(e),e}};
/**
 * @module Schemas/Geometries/SphereGeometry
 * @desc Export the ThreeJs SphereGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:va}=Jr;let _a,Na;function Ba(e){return _a||function(e){const t=e.Schema;_a=new t({})}(e),_a}function Ca(e){const t=va.getModelFrom(e);Na=t.discriminator("SphereGeometry",Ba(e))}var Oa={name:"SphereGeometry",getSchemaFrom:Ba,getModelFrom:function(e){return Na||Ca(e),Na},registerModelTo:function(e){return Na||Ca(e),e}};
/**
 * @module Schemas/Geometries/TeapotBufferGeometry
 * @desc Export the ThreeJs TeapotBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Da}=Hr;let xa,Ia;function Aa(e){return xa||function(e){const t=e.Schema;xa=new t({})}(e),xa}function Ea(e){const t=Da.getModelFrom(e);Ia=t.discriminator("TeapotBufferGeometry",Aa(e))}var Ga={name:"TeapotBufferGeometry",getSchemaFrom:Aa,getModelFrom:function(e){return Ia||Ea(e),Ia},registerModelTo:function(e){return Ia||Ea(e),e}};
/**
 * @module Schemas/Geometries/TetrahedronBufferGeometry
 * @desc Export the ThreeJs TetrahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:La}=Hr;let Pa,ja;function $a(e){return Pa||function(e){const t=e.Schema;Pa=new t({})}(e),Pa}function Va(e){const t=La.getModelFrom(e);ja=t.discriminator("TetrahedronBufferGeometry",$a(e))}var Ua={name:"TetrahedronBufferGeometry",getSchemaFrom:$a,getModelFrom:function(e){return ja||Va(e),ja},registerModelTo:function(e){return ja||Va(e),e}};
/**
 * @module Schemas/Geometries/TetrahedronGeometry
 * @desc Export the ThreeJs TetrahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ka}=Jr;let Ra,Ha;function za(e){return Ra||function(e){const t=e.Schema;Ra=new t({})}(e),Ra}function Ya(e){const t=ka.getModelFrom(e);Ha=t.discriminator("TetrahedronGeometry",za(e))}var Qa={name:"TetrahedronGeometry",getSchemaFrom:za,getModelFrom:function(e){return Ha||Ya(e),Ha},registerModelTo:function(e){return Ha||Ya(e),e}};
/**
 * @module Schemas/Geometries/TextBufferGeometry
 * @desc Export the ThreeJs TextBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Wa}=Hr;let Xa,Za;function Ja(e){return Xa||function(e){const t=e.Schema;Xa=new t({})}(e),Xa}function qa(e){const t=Wa.getModelFrom(e);Za=t.discriminator("TextBufferGeometry",Ja(e))}var Ka={name:"TextBufferGeometry",getSchemaFrom:Ja,getModelFrom:function(e){return Za||qa(e),Za},registerModelTo:function(e){return Za||qa(e),e}};
/**
 * @module Schemas/Geometries/TextGeometry
 * @desc Export the ThreeJs TextGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ec}=Jr;let tc,rc;function nc(e){return tc||function(e){const t=e.Schema;tc=new t({})}(e),tc}function oc(e){const t=ec.getModelFrom(e);rc=t.discriminator("TextGeometry",nc(e))}var ic={name:"TextGeometry",getSchemaFrom:nc,getModelFrom:function(e){return rc||oc(e),rc},registerModelTo:function(e){return rc||oc(e),e}};
/**
 * @module Schemas/Geometries/TorusBufferGeometry
 * @desc Export the ThreeJs TorusBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:ac}=Hr;let cc,sc;function uc(e){return cc||function(e){const t=e.Schema;cc=new t({})}(e),cc}function mc(e){const t=ac.getModelFrom(e);sc=t.discriminator("TorusBufferGeometry",uc(e))}var dc={name:"TorusBufferGeometry",getSchemaFrom:uc,getModelFrom:function(e){return sc||mc(e),sc},registerModelTo:function(e){return sc||mc(e),e}};
/**
 * @module Schemas/Geometries/TorusGeometry
 * @desc Export the ThreeJs TorusGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:lc}=Jr;let fc,hc;function gc(e){return fc||function(e){const t=e.Schema;fc=new t({})}(e),fc}function pc(e){const t=lc.getModelFrom(e);hc=t.discriminator("TorusGeometry",gc(e))}var Sc={name:"TorusGeometry",getSchemaFrom:gc,getModelFrom:function(e){return hc||pc(e),hc},registerModelTo:function(e){return hc||pc(e),e}};
/**
 * @module Schemas/Geometries/TorusKnotBufferGeometry
 * @desc Export the ThreeJs TorusKnotBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:yc}=Hr;let Mc,bc;function Tc(e){return Mc||function(e){const t=e.Schema;Mc=new t({})}(e),Mc}function Fc(e){const t=yc.getModelFrom(e);bc=t.discriminator("TorusKnotBufferGeometry",Tc(e))}var wc={name:"TorusKnotBufferGeometry",getSchemaFrom:Tc,getModelFrom:function(e){return bc||Fc(e),bc},registerModelTo:function(e){return bc||Fc(e),e}};
/**
 * @module Schemas/Geometries/TorusKnotGeometry
 * @desc Export the ThreeJs TorusKnotGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:vc}=Jr;let _c,Nc;function Bc(e){return _c||function(e){const t=e.Schema;_c=new t({})}(e),_c}function Cc(e){const t=vc.getModelFrom(e);Nc=t.discriminator("TorusKnotGeometry",Bc(e))}var Oc={name:"TorusKnotGeometry",getSchemaFrom:Bc,getModelFrom:function(e){return Nc||Cc(e),Nc},registerModelTo:function(e){return Nc||Cc(e),e}};
/**
 * @module Schemas/Geometries/TubeBufferGeometry
 * @desc Export the ThreeJs TubeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Dc}=Hr;let xc,Ic;function Ac(e){return xc||function(e){const t=e.Schema;xc=new t({})}(e),xc}function Ec(e){const t=Dc.getModelFrom(e);Ic=t.discriminator("TubeBufferGeometry",Ac(e))}var Gc={name:"TubeBufferGeometry",getSchemaFrom:Ac,getModelFrom:function(e){return Ic||Ec(e),Ic},registerModelTo:function(e){return Ic||Ec(e),e}};
/**
 * @module Schemas/Geometries/TubeGeometry
 * @desc Export the ThreeJs TubeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Lc}=Jr;let Pc,jc;function $c(e){return Pc||function(e){const t=e.Schema;Pc=new t({})}(e),Pc}function Vc(e){const t=Lc.getModelFrom(e);jc=t.discriminator("TubeGeometry",$c(e))}var Uc={name:"TubeGeometry",getSchemaFrom:$c,getModelFrom:function(e){return jc||Vc(e),jc},registerModelTo:function(e){return jc||Vc(e),e}};
/**
 * @module Schemas/Geometries/WireframeGeometry
 * @desc Export the ThreeJs WireframeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:kc}=Jr;let Rc,Hc;function zc(e){return Rc||function(e){const t=e.Schema;Rc=new t({})}(e),Rc}function Yc(e){const t=kc.getModelFrom(e);Hc=t.discriminator("WireframeGeometry",zc(e))}var Qc={name:"WireframeGeometry",getSchemaFrom:zc,getModelFrom:function(e){return Hc||Yc(e),Hc},registerModelTo:function(e){return Hc||Yc(e),e}};
/**
 * @module Schemas/Helpers/ArrowHelper
 * @desc Export the ThreeJs ArrowHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Wc}=C;let Xc,Zc;function Jc(e){return Xc||function(e){const t=e.Schema;Xc=new t({})}(e),Xc}function qc(e){const t=Wc.getModelFrom(e);Zc=t.discriminator("ArrowHelper",Jc(e))}var Kc={name:"ArrowHelper",getSchemaFrom:Jc,getModelFrom:function(e){return Zc||qc(e),Zc},registerModelTo:function(e){return Zc||qc(e),e}};
/**
 * @module Schemas/Helpers/AxesHelper
 * @desc Export the ThreeJs AxesHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:es}=C;let ts,rs;function ns(e){return ts||function(e){const t=e.Schema;ts=new t({})}(e),ts}function os(e){const t=es.getModelFrom(e);rs=t.discriminator("AxesHelper",ns(e))}var is={name:"AxesHelper",getSchemaFrom:ns,getModelFrom:function(e){return rs||os(e),rs},registerModelTo:function(e){return rs||os(e),e}};
/**
 * @module Schemas/Helpers/Box3Helper
 * @desc Export the ThreeJs Box3Helper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:as}=C;let cs,ss;function us(e){return cs||function(e){const t=e.Schema;cs=new t({})}(e),cs}function ms(e){const t=as.getModelFrom(e);ss=t.discriminator("Box3Helper",us(e))}var ds={name:"Box3Helper",getSchemaFrom:us,getModelFrom:function(e){return ss||ms(e),ss},registerModelTo:function(e){return ss||ms(e),e}};
/**
 * @module Schemas/Helpers/BoxHelper
 * @desc Export the ThreeJs BoxHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ls}=C;let fs,hs;function gs(e){return fs||function(e){const t=e.Schema;fs=new t({})}(e),fs}function ps(e){const t=ls.getModelFrom(e);hs=t.discriminator("BoxHelper",gs(e))}var Ss={name:"BoxHelper",getSchemaFrom:gs,getModelFrom:function(e){return hs||ps(e),hs},registerModelTo:function(e){return hs||ps(e),e}};
/**
 * @module Schemas/Helpers/CameraHelper
 * @desc Export the ThreeJs CameraHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ys}=C;let Ms,bs;function Ts(e){return Ms||function(e){const t=e.Schema;Ms=new t({})}(e),Ms}function Fs(e){const t=ys.getModelFrom(e);bs=t.discriminator("CameraHelper",Ts(e))}var ws={name:"CameraHelper",getSchemaFrom:Ts,getModelFrom:function(e){return bs||Fs(e),bs},registerModelTo:function(e){return bs||Fs(e),e}};
/**
 * @module Schemas/Helpers/DirectionalLightHelper
 * @desc Export the ThreeJs DirectionalLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:vs}=C;let _s,Ns;function Bs(e){return _s||function(e){const t=e.Schema;_s=new t({})}(e),_s}function Cs(e){const t=vs.getModelFrom(e);Ns=t.discriminator("DirectionalLightHelper",Bs(e))}var Os={name:"DirectionalLightHelper",getSchemaFrom:Bs,getModelFrom:function(e){return Ns||Cs(e),Ns},registerModelTo:function(e){return Ns||Cs(e),e}};
/**
 * @module Schemas/Helpers/FaceNormalsHelper
 * @desc Export the ThreeJs FaceNormalsHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ds}=C;let xs,Is;function As(e){return xs||function(e){const t=e.Schema;xs=new t({})}(e),xs}function Es(e){const t=Ds.getModelFrom(e);Is=t.discriminator("FaceNormalsHelper",As(e))}var Gs={name:"FaceNormalsHelper",getSchemaFrom:As,getModelFrom:function(e){return Is||Es(e),Is},registerModelTo:function(e){return Is||Es(e),e}};
/**
 * @module Schemas/Helpers/GridHelper
 * @desc Export the ThreeJs GridHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ls}=C;let Ps,js;function $s(e){return Ps||function(e){const t=e.Schema;Ps=new t({})}(e),Ps}function Vs(e){const t=Ls.getModelFrom(e);js=t.discriminator("GridHelper",$s(e))}var Us={name:"GridHelper",getSchemaFrom:$s,getModelFrom:function(e){return js||Vs(e),js},registerModelTo:function(e){return js||Vs(e),e}};
/**
 * @module Schemas/Helpers/HemisphereLightHelper
 * @desc Export the ThreeJs HemisphereLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ks}=C;let Rs,Hs;function zs(e){return Rs||function(e){const t=e.Schema;Rs=new t({})}(e),Rs}function Ys(e){const t=ks.getModelFrom(e);Hs=t.discriminator("HemisphereLightHelper",zs(e))}var Qs={name:"HemisphereLightHelper",getSchemaFrom:zs,getModelFrom:function(e){return Hs||Ys(e),Hs},registerModelTo:function(e){return Hs||Ys(e),e}};
/**
 * @module Schemas/Helpers/PlaneHelper
 * @desc Export the ThreeJs PlaneHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ws}=C;let Xs,Zs;function Js(e){return Xs||function(e){const t=e.Schema;Xs=new t({})}(e),Xs}function qs(e){const t=Ws.getModelFrom(e);Zs=t.discriminator("PlaneHelper",Js(e))}var Ks={name:"PlaneHelper",getSchemaFrom:Js,getModelFrom:function(e){return Zs||qs(e),Zs},registerModelTo:function(e){return Zs||qs(e),e}};
/**
 * @module Schemas/Helpers/PointLightHelper
 * @desc Export the ThreeJs PointLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:eu}=C;let tu,ru;function nu(e){return tu||function(e){const t=e.Schema;tu=new t({})}(e),tu}function ou(e){const t=eu.getModelFrom(e);ru=t.discriminator("PointLightHelper",nu(e))}var iu={name:"PointLightHelper",getSchemaFrom:nu,getModelFrom:function(e){return ru||ou(e),ru},registerModelTo:function(e){return ru||ou(e),e}};
/**
 * @module Schemas/Helpers/PolarGridHelper
 * @desc Export the ThreeJs PolarGridHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:au}=C;let cu,su;function uu(e){return cu||function(e){const t=e.Schema;cu=new t({})}(e),cu}function mu(e){const t=au.getModelFrom(e);su=t.discriminator("PolarGridHelper",uu(e))}var du={name:"PolarGridHelper",getSchemaFrom:uu,getModelFrom:function(e){return su||mu(e),su},registerModelTo:function(e){return su||mu(e),e}};
/**
 * @module Schemas/Helpers/RectAreaLightHelper
 * @desc Export the ThreeJs RectAreaLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:lu}=C;let fu,hu;function gu(e){return fu||function(e){const t=e.Schema;fu=new t({})}(e),fu}function pu(e){const t=lu.getModelFrom(e);hu=t.discriminator("RectAreaLightHelper",gu(e))}var Su={name:"RectAreaLightHelper",getSchemaFrom:gu,getModelFrom:function(e){return hu||pu(e),hu},registerModelTo:function(e){return hu||pu(e),e}};
/**
 * @module Schemas/Helpers/SkeletonHelper
 * @desc Export the ThreeJs SkeletonHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:yu}=C;let Mu,bu;function Tu(e){return Mu||function(e){const t=e.Schema;Mu=new t({})}(e),Mu}function Fu(e){const t=yu.getModelFrom(e);bu=t.discriminator("SkeletonHelper",Tu(e))}var wu={name:"SkeletonHelper",getSchemaFrom:Tu,getModelFrom:function(e){return bu||Fu(e),bu},registerModelTo:function(e){return bu||Fu(e),e}};
/**
 * @module Schemas/Helpers/SpotLightHelper
 * @desc Export the ThreeJs SpotLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:vu}=C;let _u,Nu;function Bu(e){return _u||function(e){const t=e.Schema;_u=new t({})}(e),_u}function Cu(e){const t=vu.getModelFrom(e);Nu=t.discriminator("SpotLightHelper",Bu(e))}var Ou={name:"SpotLightHelper",getSchemaFrom:Bu,getModelFrom:function(e){return Nu||Cu(e),Nu},registerModelTo:function(e){return Nu||Cu(e),e}};
/**
 * @module Schemas/Helpers/VertexNormalsHelper
 * @desc Export the ThreeJs VertexNormalsHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Du}=C;let xu,Iu;function Au(e){return xu||function(e){const t=e.Schema;xu=new t({})}(e),xu}function Eu(e){const t=Du.getModelFrom(e);Iu=t.discriminator("VertexNormalsHelper",Au(e))}var Gu={name:"VertexNormalsHelper",getSchemaFrom:Au,getModelFrom:function(e){return Iu||Eu(e),Iu},registerModelTo:function(e){return Iu||Eu(e),e}};
/**
 * @module Schemas/Lights/AmbientLight
 * @desc Export the ThreeJs AmbientLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Lu}=C;let Pu,ju;function $u(e){return Pu||function(e){const t=e.Schema;Pu=new t({})}(e),Pu}function Vu(e){const t=Lu.getModelFrom(e);ju=t.discriminator("AmbientLight",$u(e))}var Uu={name:"AmbientLight",getSchemaFrom:$u,getModelFrom:function(e){return ju||Vu(e),ju},registerModelTo:function(e){return ju||Vu(e),e}};
/**
 * @module Schemas/Lights/DirectionalLight
 * @desc Export the ThreeJs DirectionalLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ku}=C;let Ru,Hu;function zu(e){return Ru||function(e){const t=e.Schema;Ru=new t({})}(e),Ru}function Yu(e){const t=ku.getModelFrom(e);Hu=t.discriminator("DirectionalLight",zu(e))}var Qu={name:"DirectionalLight",getSchemaFrom:zu,getModelFrom:function(e){return Hu||Yu(e),Hu},registerModelTo:function(e){return Hu||Yu(e),e}};
/**
 * @module Schemas/Lights/HemisphereLight
 * @desc Export the ThreeJs HemisphereLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Wu}=C;let Xu,Zu;function Ju(e){return Xu||function(e){const t=e.Schema;Xu=new t({})}(e),Xu}function qu(e){const t=Wu.getModelFrom(e);Zu=t.discriminator("HemisphereLight",Ju(e))}var Ku={name:"HemisphereLight",getSchemaFrom:Ju,getModelFrom:function(e){return Zu||qu(e),Zu},registerModelTo:function(e){return Zu||qu(e),e}};
/**
 * @module Schemas/Lights/Light
 * @desc Export the ThreeJs Light Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:em}=C;let tm,rm;function nm(e){return tm||function(e){const t=e.Schema;tm=new t({})}(e),tm}function om(e){const t=em.getModelFrom(e);rm=t.discriminator("Light",nm(e))}var im={name:"Light",getSchemaFrom:nm,getModelFrom:function(e){return rm||om(e),rm},registerModelTo:function(e){return rm||om(e),e}};
/**
 * @module Schemas/Lights/PointLight
 * @desc Export the ThreeJs PointLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:am}=C;let cm,sm;function um(e){return cm||function(e){const t=e.Schema;cm=new t({})}(e),cm}function mm(e){const t=am.getModelFrom(e);sm=t.discriminator("PointLight",um(e))}var dm={name:"PointLight",getSchemaFrom:um,getModelFrom:function(e){return sm||mm(e),sm},registerModelTo:function(e){return sm||mm(e),e}};
/**
 * @module Schemas/Lights/RectAreaLight
 * @desc Export the ThreeJs RectAreaLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:lm}=C;let fm,hm;function gm(e){return fm||function(e){const t=e.Schema;fm=new t({})}(e),fm}function pm(e){const t=lm.getModelFrom(e);hm=t.discriminator("RectAreaLight",gm(e))}var Sm={name:"RectAreaLight",getSchemaFrom:gm,getModelFrom:function(e){return hm||pm(e),hm},registerModelTo:function(e){return hm||pm(e),e}};
/**
 * @module Schemas/Lights/SpotLight
 * @desc Export the ThreeJs SpotLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ym}=C;let Mm,bm;function Tm(e){return Mm||function(e){const t=e.Schema;Mm=new t({})}(e),Mm}function Fm(e){const t=ym.getModelFrom(e);bm=t.discriminator("SpotLight",Tm(e))}var wm={name:"SpotLight",getSchemaFrom:Tm,getModelFrom:function(e){return bm||Fm(e),bm},registerModelTo:function(e){return bm||Fm(e),e}},vm={};
/**
 * @module Schemas/Materials/Material
 * @desc Export the ThreeJs Material Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
let _m,Nm;function Bm(e){return _m||function(e){const t=e.Schema,r=t.Types.Mixed;_m=new t({uuid:String,name:String,type:String,fog:Boolean,lights:Boolean,blending:Number,side:Number,flatShading:Boolean,vertexColors:Number,opacity:Number,transparent:Boolean,blendSrc:Number,blendDst:Number,blendEquation:Number,blendSrcAlpha:String,blendDstAlpha:String,blendEquationAlpha:String,depthFunc:Number,depthTest:Boolean,depthWrite:Boolean,clippingPlanes:r,clipIntersection:Boolean,clipShadows:Boolean,colorWrite:Boolean,precision:Number,polygonOffset:Boolean,polygonOffsetFactor:Number,polygonOffsetUnits:Number,dithering:Boolean,alphaTest:Number,premultipliedAlpha:Boolean,overdraw:Number,visible:Boolean,userData:r,needsUpdate:Boolean},{collection:"materials",discriminatorKey:"type"})}(e),_m}function Cm(e){Nm=e.model("Materials",Bm(e)),Nm.discriminator("Material",new e.Schema({}))}var Om=vm.Material={name:"Material",getSchemaFrom:Bm,getModelFrom:function(e){return Nm||Cm(e),Nm},registerModelTo:function(e){return Nm||Cm(e),e}};
/**
 * @module Schemas/Materials/LineBasicMaterial
 * @desc Export the ThreeJs LineBasicMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Dm}=vm;let xm,Im;function Am(e){return xm||function(e){const t=e.Schema,r=t.Types.Color;xm=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String})}(e),xm}function Em(e){const t=Dm.getModelFrom(e);Im=t.discriminator("LineBasicMaterial",Am(e))}var Gm={name:"LineBasicMaterial",getSchemaFrom:Am,getModelFrom:function(e){return Im||Em(e),Im},registerModelTo:function(e){return Im||Em(e),e}};
/**
 * @module Schemas/Materials/LineDashedMaterial
 * @desc Export the ThreeJs LineDashedMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Lm}=vm;let Pm,jm;function $m(e){return Pm||function(e){const t=e.Schema,r=t.Types.Color;Pm=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String,dashSize:Number,gapSize:Number,scale:Number})}(e),Pm}function Vm(e){const t=Lm.getModelFrom(e);jm=t.discriminator("LineDashedMaterial",$m(e))}var Um={name:"LineDashedMaterial",getSchemaFrom:$m,getModelFrom:function(e){return jm||Vm(e),jm},registerModelTo:function(e){return jm||Vm(e),e}};
/**
 * @module Schemas/Materials/MeshBasicMaterial
 * @desc Export the ThreeJs MeshBasicMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:km}=vm;let Rm,Hm;function zm(e){return Rm||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color;Rm=new t({color:o,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,light:Boolean})}(e),Rm}function Ym(e){const t=km.getModelFrom(e);Hm=t.discriminator("MeshBasicMaterial",zm(e))}var Qm={name:"MeshBasicMaterial",getSchemaFrom:zm,getModelFrom:function(e){return Hm||Ym(e),Hm},registerModelTo:function(e){return Hm||Ym(e),e}};
/**
 * @module Schemas/Materials/MeshDepthMaterial
 * @desc Export the ThreeJs MeshDepthMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Wm}=vm;let Xm,Zm;function Jm(e){return Xm||function(e){const t=e.Schema,r=t.Types.Mixed;Xm=new t({depthPacking:Number,skinning:Boolean,morphTargets:Boolean,map:r,alphaMap:r,displacementMap:r,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean})}(e),Xm}function qm(e){const t=Wm.getModelFrom(e);Zm=t.discriminator("MeshDepthMaterial",Jm(e))}var Km={name:"MeshDepthMaterial",getSchemaFrom:Jm,getModelFrom:function(e){return Zm||qm(e),Zm},registerModelTo:function(e){return Zm||qm(e),e}};
/**
 * @module Schemas/Materials/MeshLambertMaterial
 * @desc Export the ThreeJs MeshLambertMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:ed}=vm;let td,rd;function nd(e){return td||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;td=new t({color:n,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,emissive:n,emissiveIntensity:Number,emissiveMap:o,specularMap:o,alphaMap:o,envMap:o,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),td}function od(e){const t=ed.getModelFrom(e);rd=t.discriminator("MeshLambertMaterial",nd(e))}var id={name:"MeshLambertMaterial",getSchemaFrom:nd,getModelFrom:function(e){return rd||od(e),rd},registerModelTo:function(e){return rd||od(e),e}};
/**
 * @module Schemas/Materials/MeshNormalMaterial
 * @desc Export the ThreeJs MeshNormalMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:ad}=vm;let cd,sd;function ud(e){return cd||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Vector2;cd=new t({bumpMap:n,bumpScale:Number,normalMap:n,normalScale:o,displacementMap:n,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),cd}function md(e){const t=ad.getModelFrom(e);sd=t.discriminator("MeshNormalMaterial",ud(e))}var dd={name:"MeshNormalMaterial",getSchemaFrom:ud,getModelFrom:function(e){return sd||md(e),sd},registerModelTo:function(e){return sd||md(e),e}};
/**
 * @module Schemas/Materials/MeshPhongMaterial
 * @desc Export the ThreeJs MeshPhongMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:ld}=vm;let fd,hd;function gd(e){return fd||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,i=r.Vector2;fd=new t({color:o,specular:o,shininess:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:i,displacementMap:n,displacementScale:Number,displacementBias:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),fd}function pd(e){const t=ld.getModelFrom(e);hd=t.discriminator("MeshPhongMaterial",gd(e))}var Sd={name:"MeshPhongMaterial",getSchemaFrom:gd,getModelFrom:function(e){return hd||pd(e),hd},registerModelTo:function(e){return hd||pd(e),e}};
/**
 * @module Schemas/Materials/MeshPhysicalMaterial
 * @desc Export the ThreeJs MeshPhysicalMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:yd}=vm;let Md,bd;function Td(e){return Md||function(e){const t=e.Schema;Md=new t({reflectivity:Number,clearCoat:Number,clearCoatRoughness:Number})}(e),Md}function Fd(e){const t=yd.getModelFrom(e);bd=t.discriminator("MeshPhysicalMaterial",Td(e))}var wd={name:"MeshPhysicalMaterial",getSchemaFrom:Td,getModelFrom:function(e){return bd||Fd(e),bd},registerModelTo:function(e){return bd||Fd(e),e}};
/**
 * @module Schemas/Materials/MeshStandardMaterial
 * @desc Export the ThreeJs MeshStandardMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:vd}=vm;let _d,Nd;function Bd(e){return _d||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,i=r.Vector2;_d=new t({color:o,roughness:Number,metalness:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:i,displacementMap:n,displacementScale:Number,displacementBias:Number,roughnessMap:n,metalnessMap:n,alphaMap:n,envMap:n,envMapIntensity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),_d}function Cd(e){const t=vd.getModelFrom(e);Nd=t.discriminator("MeshStandardMaterial",Bd(e))}var Od={name:"MeshStandardMaterial",getSchemaFrom:Bd,getModelFrom:function(e){return Nd||Cd(e),Nd},registerModelTo:function(e){return Nd||Cd(e),e}};
/**
 * @module Schemas/Materials/MeshToonMaterial
 * @desc Export the ThreeJs MeshToonMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Dd}=vm;let xd,Id;function Ad(e){return xd||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,i=r.Vector2;xd=new t({color:o,specular:o,shininess:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:i,displacementMap:n,displacementScale:Number,displacementBias:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,gradientMap:n})}(e),xd}function Ed(e){const t=Dd.getModelFrom(e);Id=t.discriminator("MeshToonMaterial",Ad(e))}var Gd={name:"MeshToonMaterial",getSchemaFrom:Ad,getModelFrom:function(e){return Id||Ed(e),Id},registerModelTo:function(e){return Id||Ed(e),e}};
/**
 * @module Schemas/Materials/PointsMaterial
 * @desc Export the ThreeJs PointsMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Ld}=vm;let Pd,jd;function $d(e){return Pd||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;Pd=new t({color:n,map:o,size:Number,sizeAttenuation:Boolean,lights:Boolean})}(e),Pd}function Vd(e){const t=Ld.getModelFrom(e);jd=t.discriminator("PointsMaterial",$d(e))}var Ud={name:"PointsMaterial",getSchemaFrom:$d,getModelFrom:function(e){return jd||Vd(e),jd},registerModelTo:function(e){return jd||Vd(e),e}};
/**
 * @module Schemas/Materials/RawShaderMaterial
 * @desc Export the ThreeJs RawShaderMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:kd}=vm;let Rd,Hd;function zd(e){return Rd||function(e){const t=e.Schema,r=t.Types.Mixed;Rd=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),Rd}function Yd(e){const t=kd.getModelFrom(e);Hd=t.discriminator("RawShaderMaterial",zd(e))}var Qd={name:"RawShaderMaterial",getSchemaFrom:zd,getModelFrom:function(e){return Hd||Yd(e),Hd},registerModelTo:function(e){return Hd||Yd(e),e}};
/**
 * @module Schemas/Materials/ShaderMaterial
 * @desc Export the ThreeJs ShaderMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Wd}=vm;let Xd,Zd;function Jd(e){return Xd||function(e){const t=e.Schema,r=t.Types.Mixed;Xd=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),Xd}function qd(e){const t=Wd.getModelFrom(e);Zd=t.discriminator("ShaderMaterial",Jd(e))}var Kd={name:"ShaderMaterial",getSchemaFrom:Jd,getModelFrom:function(e){return Zd||qd(e),Zd},registerModelTo:function(e){return Zd||qd(e),e}};
/**
 * @module Schemas/Materials/ShadowMaterial
 * @desc Export the ThreeJs ShadowMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:el}=vm;let tl,rl;function nl(e){return tl||function(e){const t=e.Schema,r=t.Types.Color;tl=new t({color:r,opacity:Number,lights:Boolean,transparent:Boolean})}(e),tl}function ol(e){const t=el.getModelFrom(e);rl=t.discriminator("ShadowMaterial",nl(e))}var il={name:"ShadowMaterial",getSchemaFrom:nl,getModelFrom:function(e){return rl||ol(e),rl},registerModelTo:function(e){return rl||ol(e),e}};
/**
 * @module Schemas/Materials/SpriteMaterial
 * @desc Export the ThreeJs SpriteMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:al}=vm;let cl,sl;function ul(e){return cl||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;cl=new t({color:n,map:o,rotation:Number,fog:Boolean,lights:Boolean})}(e),cl}function ml(e){const t=al.getModelFrom(e);sl=t.discriminator("SpriteMaterial",ul(e))}var dl={name:"SpriteMaterial",getSchemaFrom:ul,getModelFrom:function(e){return sl||ml(e),sl},registerModelTo:function(e){return sl||ml(e),e}};
/**
 * @module Schemas/Math/Box2
 * @desc Export the ThreeJs Box2 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let ll;var fl={name:"Box2",getSchemaFrom:function(e){return ll||function(e){const t=e.Schema,r=t.Types.Vector2;ll=new t({min:r,max:r},{_id:!1,id:!1})}(e),ll},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Box3
 * @desc Export the ThreeJs Box3 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let hl;var gl={name:"Box3",getSchemaFrom:function(e){return hl||function(e){const t=e.Schema,r=t.Types.Vector3;hl=new t({min:r,max:r},{_id:!1,id:!1})}(e),hl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Line3
 * @desc Export the ThreeJs Line3 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let pl;var Sl={name:"Line3",getSchemaFrom:function(e){return pl||function(e){const t=e.Schema,r=t.Types.Vector3;pl=new t({start:r,end:r},{_id:!1,id:!1})}(e),pl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Plane
 * @desc Export the ThreeJs Plane Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let yl;var Ml={name:"Plane",getSchemaFrom:function(e){return yl||function(e){const t=e.Schema,r=t.Types.Vector3;yl=new t({normal:r,constant:Number},{_id:!1,id:!1})}(e),yl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Ray
 * @desc Export the ThreeJs Ray Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let bl;var Tl={name:"Ray",getSchemaFrom:function(e){return bl||function(e){const t=e.Schema,r=t.Types.Vector3;bl=new t({origin:r,direction:r},{_id:!1,id:!1})}(e),bl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Sphere
 * @desc Export the ThreeJs Sphere Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Fl;var wl={name:"Sphere",getSchemaFrom:function(e){return Fl||function(e){const t=e.Schema,r=t.Types.Vector3;Fl=new t({center:r,radius:Number},{_id:!1,id:!1})}(e),Fl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Spherical
 * @desc Export the ThreeJs Spherical Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let vl;var _l={name:"Spherical",getSchemaFrom:function(e){return vl||function(e){const t=e.Schema;vl=new t({radius:Number,phi:Number,theta:Number},{_id:!1,id:!1})}(e),vl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Triangle
 * @desc Export the ThreeJs Triangle Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Nl;var Bl={name:"Triangle",getSchemaFrom:function(e){return Nl||function(e){const t=e.Schema,r=t.Types.Vector3;Nl=new t({a:r,b:r,c:r},{_id:!1,id:!1})}(e),Nl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Objects/Bone
 * @desc Export the ThreeJs Bone Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Cl}=C;let Ol,Dl;function xl(e){return Ol||function(e){const t=e.Schema;Ol=new t({})}(e),Ol}function Il(e){const t=Cl.getModelFrom(e);Dl=t.discriminator("Bone",xl(e))}var Al={name:"Bone",getSchemaFrom:xl,getModelFrom:function(e){return Dl||Il(e),Dl},registerModelTo:function(e){return Dl||Il(e),e}};
/**
 * @module Schemas/Objects/Group
 * @desc Export the ThreeJs Group Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let El,Gl;function Ll(e){return El||function(e){const t=e.Schema;El=new t({})}(e),El}function Pl(e){const t=B.getModelFrom(e);Gl=t.discriminator("Group",Ll(e))}const jl={name:"Group",getSchemaFrom:Ll,getModelFrom:function(e){return Gl||Pl(e),Gl},registerModelTo:function(e){return Gl||Pl(e),e}},{Object3D:$l}=C;
/**
 * @module Schemas/Objects/ImmediateRenderObject
 * @desc Export the ThreeJs ImmediateRenderObject Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Vl,Ul;function kl(e){return Vl||function(e){const t=e.Schema;Vl=new t({})}(e),Vl}function Rl(e){const t=$l.getModelFrom(e);Ul=t.discriminator("ImmediateRenderObject",kl(e))}var Hl={name:"ImmediateRenderObject",getSchemaFrom:kl,getModelFrom:function(e){return Ul||Rl(e),Ul},registerModelTo:function(e){return Ul||Rl(e),e}};
/**
 * @module Schemas/Objects/LensFlare
 * @desc Export the ThreeJs LensFlare Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:zl}=C;let Yl,Ql;function Wl(e){return Yl||function(e){const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Color,i=r.Vector3;Yl=new t({lensFlares:[{texture:n,size:Number,distance:Number,x:Number,y:Number,z:Number,scale:Number,rotation:Number,opacity:Number,color:o,blending:Number}],positionScreen:i})}(e),Yl}function Xl(e){const t=zl.getModelFrom(e);Ql=t.discriminator("LensFlare",Wl(e))}var Zl={name:"LensFlare",getSchemaFrom:Wl,getModelFrom:function(e){return Ql||Xl(e),Ql},registerModelTo:function(e){return Ql||Xl(e),e}};
/**
 * @module Schemas/Objects/Line
 * @desc Export the ThreeJs Line Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Jl}=C;let ql,Kl;function ef(e){return ql||function(e){const t=e.Schema,r=t.Types.ObjectId;ql=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),ql}function tf(e){const t=Jl.getModelFrom(e);Kl=t.discriminator("Line",ef(e))}var rf={name:"Line",getSchemaFrom:ef,getModelFrom:function(e){return Kl||tf(e),Kl},registerModelTo:function(e){return Kl||tf(e),e}};
/**
 * @module Schemas/Objects/LineLoop
 * @desc Export the ThreeJs LineLoop Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:nf}=C;let of,af;function cf(e){return of||function(e){const t=e.Schema,r=t.Types.ObjectId;of=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),of}function sf(e){const t=nf.getModelFrom(e);af=t.discriminator("LineLoop",cf(e))}var uf={name:"LineLoop",getSchemaFrom:cf,getModelFrom:function(e){return af||sf(e),af},registerModelTo:function(e){return af||sf(e),e}};
/**
 * @module Schemas/Objects/LineSegments
 * @desc Export the ThreeJs LineSegments Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:mf}=C;let df,lf;function ff(e){return df||function(e){const t=e.Schema,r=t.Types.ObjectId;df=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),df}function hf(e){const t=mf.getModelFrom(e);lf=t.discriminator("LineSegments",ff(e))}var gf={name:"LineSegments",getSchemaFrom:ff,getModelFrom:function(e){return lf||hf(e),lf},registerModelTo:function(e){return lf||hf(e),e}};
/**
 * @module Schemas/Objects/LOD
 * @desc Export the ThreeJs LOD Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:pf}=C;let Sf,yf;function Mf(e){return Sf||function(e){const t=e.Schema,r=t.Types.Mixed;Sf=new t({levels:[r]})}(e),Sf}function bf(e){const t=pf.getModelFrom(e);yf=t.discriminator("LOD",Mf(e))}var Tf={name:"LOD",getSchemaFrom:Mf,getModelFrom:function(e){return yf||bf(e),yf},registerModelTo:function(e){return yf||bf(e),e}};
/**
 * @module Schemas/Objects/Mesh
 * @desc Export the ThreeJs Mesh Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ff}=C;let wf,vf;function _f(e){return wf||function(e){const t=e.Schema,r=t.Types.ObjectId;wf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number})}(e),wf}function Nf(e){const t=Ff.getModelFrom(e);vf=t.discriminator("Mesh",_f(e))}var Bf={name:"Mesh",getSchemaFrom:_f,getModelFrom:function(e){return vf||Nf(e),vf},registerModelTo:function(e){return vf||Nf(e),e}};
/**
 * @module Schemas/Objects/Points
 * @desc Export the ThreeJs Points Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Cf}=C;let Of,Df;function xf(e){return Of||function(e){const t=e.Schema,r=t.Types.ObjectId;Of=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"PointsMaterial"}],drawMode:Number})}(e),Of}function If(e){const t=Cf.getModelFrom(e);Df=t.discriminator("Points",xf(e))}var Af={name:"Points",getSchemaFrom:xf,getModelFrom:function(e){return Df||If(e),Df},registerModelTo:function(e){return Df||If(e),e}};
/**
 * @module Schemas/Objects/Skeleton
 * @desc Export the ThreeJs Skeleton Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ef}=C;let Gf,Lf;function Pf(e){return Gf||function(e){const t=e.Schema,r=t.Types.ObjectId;Gf=new t({bones:[r],boneMatrices:[Number]})}(e),Gf}function jf(e){const t=Ef.getModelFrom(e);Lf=t.discriminator("Skeleton",Pf(e))}var $f={name:"Skeleton",getSchemaFrom:Pf,getModelFrom:function(e){return Lf||jf(e),Lf},registerModelTo:function(e){return Lf||jf(e),e}};
/**
 * @module Schemas/Objects/SkinnedMesh
 * @desc Export the ThreeJs SkinnedMesh Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Vf}=C;let Uf,kf;function Rf(e){return Uf||function(e){const t=e.Schema,r=t.Types.ObjectId;Uf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number,bindMode:String,bindMatrix:[Number],bindMatrixInverse:[Number]})}(e),Uf}function Hf(e){const t=Vf.getModelFrom(e);kf=t.discriminator("SkinnedMesh",Rf(e))}var zf={name:"SkinnedMesh",getSchemaFrom:Rf,getModelFrom:function(e){return kf||Hf(e),kf},registerModelTo:function(e){return kf||Hf(e),e}};
/**
 * @module Schemas/Objects/Sprite
 * @desc Export the ThreeJs Sprite Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Yf}=C;let Qf,Wf;function Xf(e){return Qf||function(e){const t=e.Schema,r=t.Types.ObjectId;Qf=new t({material:[{type:r,ref:"SpriteMaterial"}]})}(e),Qf}function Zf(e){const t=Yf.getModelFrom(e);Wf=t.discriminator("Sprite",Xf(e))}var Jf={name:"Sprite",getSchemaFrom:Xf,getModelFrom:function(e){return Wf||Zf(e),Wf},registerModelTo:function(e){return Wf||Zf(e),e}},qf={};
/**
 * @module Schemas/Scenes/Fog
 * @desc Export the ThreeJs Fog Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Scenes/Scene Schemas/Scenes/Scene}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
let Kf;var eh=qf.Fog={name:"Fog",getSchemaFrom:function(e){return Kf||function(e){const t=e.Schema;Kf=new t({coordinates:{x:Number,y:Number,z:Number},orientation:{x:Number,y:Number,z:Number},thumbnail:Buffer,path:String},{_id:!1,id:!1})}(e),Kf},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Scenes/FogExp2
 * @desc Export the ThreeJs FogExp2 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 * @requires {@link module:Schemas/Scenes/Fog Schemas/Scenes/Fog}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:th}=C,{Fog:rh}=qf;let nh,oh;function ih(e){return nh||function(e){const t=rh.getSchemaFrom(e),r=e.Schema,n=r.Types.Color;nh=new r({background:n,fog:t,overrideMaterial:String,autoUpdate:Boolean})}(e),nh}function ah(e){const t=th.getModelFrom(e);oh=t.discriminator("Scene",ih(e))}var ch={name:"Scene",getSchemaFrom:ih,getModelFrom:function(e){return oh||ah(e),oh},registerModelTo:function(e){return oh||ah(e),e}},sh={};
/**
 * @module Schemas/Textures/Texture
 * @desc Export the ThreeJs Texture Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
let uh,mh;function dh(e){return uh||function(e){const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Vector2,i=r.Matrix3;uh=new t({uuid:String,name:String,image:n,mipmaps:[],mapping:Number,wrapS:Number,wrapT:Number,magFilter:Number,minFilter:Number,anisotropy:Number,format:Number,type:Number,offset:o,repeat:o,center:o,rotation:Number,matrixAutoUpdate:Boolean,matrix:i,generateMipmaps:Boolean,premultiplyAlpha:Boolean,flipY:Boolean,unpackAlignment:Number,encoding:Number,version:Number},{collection:"textures",discriminatorKey:"type"})}(e),uh}function lh(e){mh=e.model("Textures",dh(e)),mh.discriminator("Texture",new e.Schema({}))}var fh=sh.Texture={name:"Texture",getSchemaFrom:dh,getModelFrom:function(e){return mh||lh(e),mh},registerModelTo:function(e){return mh||lh(e),e}};
/**
 * @module Schemas/Textures/CanvasTexture
 * @desc Export the ThreeJs CanvasTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:hh}=sh;let gh,ph;function Sh(e){return gh||function(e){const t=e.Schema;gh=new t({needsUpdate:Boolean})}(e),gh}function yh(e){const t=hh.getModelFrom(e);ph=t.discriminator("CanvasTexture",Sh(e))}var Mh={name:"CanvasTexture",getSchemaFrom:Sh,getModelFrom:function(e){return ph||yh(e),ph},registerModelTo:function(e){return ph||yh(e),e}};
/**
 * @module Schemas/Textures/CompressedTexture
 * @desc Export the ThreeJs CompressedTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:bh}=sh;let Th,Fh;function wh(e){return Th||function(e){const t=e.Schema;Th=new t({})}(e),Th}function vh(e){const t=bh.getModelFrom(e);Fh=t.discriminator("CompressedTexture",wh(e))}var _h={name:"CompressedTexture",getSchemaFrom:wh,getModelFrom:function(e){return Fh||vh(e),Fh},registerModelTo:function(e){return Fh||vh(e),e}};
/**
 * @module Schemas/Textures/CubeTexture
 * @desc Export the ThreeJs CubeTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Nh}=sh;let Bh,Ch;function Oh(e){return Bh||function(e){const t=e.Schema;Bh=new t({})}(e),Bh}function Dh(e){const t=Nh.getModelFrom(e);Ch=t.discriminator("CubeTexture",Oh(e))}var xh={name:"CubeTexture",getSchemaFrom:Oh,getModelFrom:function(e){return Ch||Dh(e),Ch},registerModelTo:function(e){return Ch||Dh(e),e}};
/**
 * @module Schemas/Textures/DataTexture
 * @desc Export the ThreeJs DataTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Ih}=sh;let Ah,Eh;function Gh(e){return Ah||function(e){const t=e.Schema;Ah=new t({})}(e),Ah}function Lh(e){const t=Ih.getModelFrom(e);Eh=t.discriminator("DataTexture",Gh(e))}var Ph={name:"DataTexture",getSchemaFrom:Gh,getModelFrom:function(e){return Eh||Lh(e),Eh},registerModelTo:function(e){return Eh||Lh(e),e}};
/**
 * @module Schemas/Textures/DepthTexture
 * @desc Export the ThreeJs DepthTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:jh}=sh;let $h,Vh;function Uh(e){return $h||function(e){const t=e.Schema;$h=new t({})}(e),$h}function kh(e){const t=jh.getModelFrom(e);Vh=t.discriminator("DepthTexture",Uh(e))}var Rh={name:"DepthTexture",getSchemaFrom:Uh,getModelFrom:function(e){return Vh||kh(e),Vh},registerModelTo:function(e){return Vh||kh(e),e}};
/**
 * @module Schemas/Textures/VideoTexture
 * @desc Export the ThreeJs VideoTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Hh}=sh;let zh,Yh;function Qh(e){return zh||function(e){const t=e.Schema;zh=new t({})}(e),zh}function Wh(e){const t=Hh.getModelFrom(e);Yh=t.discriminator("VideoTexture",Qh(e))}var Xh={name:"VideoTexture",getSchemaFrom:Qh,getModelFrom:function(e){return Yh||Wh(e),Yh},registerModelTo:function(e){return Yh||Wh(e),e}};
/**
 * @module Types/Color
 * @desc Export the three js Color type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function Zh(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Color")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Color: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isColor)throw new e.SchemaType.CastError(`Color: ${t} is not a object or Three.Color instance`);if(!("r"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain r property`);if(r.isNotNumber(t.r))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("g"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain g property`);if(r.isNotNumber(t.g))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("b"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain b property`);if(r.isNotNumber(t.b))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);return{r:t.r,g:t.g,b:t.b}}}return t.COLOR_BSON_TYPE=c.BSON_DATA_OBJECT,e.Schema.Types.Color=t,e}
/**
 * @module Types/Euler
 * @desc Export the three js Euler type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function Jh(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Euler")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Euler: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isEuler)throw new e.SchemaType.CastError(`Euler: ${t} is not a object or Euler instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Euler: ${t} expected x to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Euler: ${t} expected y to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Euler: ${t} expected z to be a number`);if(!("order"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain order property`);if(r.isNotString(t.order))throw new e.SchemaType.CastError(`Euler: ${t} expected order to be a string`);if(!["XYZ","YZX","ZXY","XZY","YXZ","ZYX"].includes(t.order.toUpperCase()))throw new e.SchemaType.CastError(`Euler: ${t} expected order to be a string in ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX']`);return{x:t.x,y:t.y,z:t.z,order:t.order.toUpperCase()}}}return t.EULER_BSON_TYPE=c.BSON_DATA_OBJECT,e.Schema.Types.Euler=t,e}
/**
 * @module Types/Matrix3
 * @desc Export the three js Matrix3 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function qh(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Matrix3")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Matrix3: ${t} is null or undefined`);if(r.isNotArray(t)&&!t.isMatrix3)throw new e.SchemaType.CastError(`Matrix3: ${t} is not an array or Matrix3 instance`);let n;n=t.isMatrix3?t.toArray():t;const o=n.length;if(9!==o)throw new e.SchemaType.CastError(`Matrix3: ${t} does not contain the right number of values. Expect 9 values and found ${o}`);for(let i,a=0;a<o;a++){if(i=n[a],r.isNotNumber(i))throw new e.SchemaType.CastError(`Matrix3: ${t} does not seem to contain right values. Expect values in range 0 and 1.`);if(r.isNaN(i))throw new e.SchemaType.CastError(`Matrix3: ${t} does not seem to contain right values. Expect values in range 0 and 1.`)}return n}}return t.MATRIX3_BSON_TYPE=c.BSON_DATA_ARRAY,e.Schema.Types.Matrix3=t,e}
/**
 * @module Types/Matrix4
 * @desc Export the three js Matrix4 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function Kh(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Matrix4")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Matrix4: ${t} is null or undefined`);if(r.isNotArray(t)&&!t.isMatrix4)throw new e.SchemaType.CastError(`Matrix4: ${t} is not an array or Matrix4 instance`);let n;n=t.isMatrix4?t.toArray():t;const o=n.length;if(16!==o)throw new e.SchemaType.CastError(`Matrix4: ${t} does not contain the right number of values. Expect 9 values and found ${o}`);for(let i,a=0;a<o;a++){if(i=n[a],r.isNotNumber(i))throw new e.SchemaType.CastError(`Matrix4: ${t} does not seem to contain right values. Expect values in range 0 and 1.`);if(r.isNaN(i))throw new e.SchemaType.CastError(`Matrix4: ${t} does not seem to contain right values. Expect values in range 0 and 1.`)}return n}}return t.MATRIX4_BSON_TYPE=c.BSON_DATA_ARRAY,e.Schema.Types.Matrix4=t,e}
/**
 * @module Types/Quaternion
 * @desc Export the three js Quaternion type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function eg(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Quaternion")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Quaternion: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isQuaternion)throw new e.SchemaType.CastError(`Quaternion: ${t} is not a object or Quaternion instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("w"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain w property`);if(r.isNotNumber(t.w))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z,w:t.w}}}return t.QUATERNION_BSON_TYPE=c.BSON_DATA_OBJECT,e.Schema.Types.Quaternion=t,e}
/**
 * @module Types/Vector2
 * @desc Export the three js Vector2 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function tg(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector2")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Vector2: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isVector2)throw new e.SchemaType.CastError(`Vector2: ${t} is not a object or Vector2 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector2: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector2: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector2: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector2: ${t} expected to be a number`);return{x:t.x,y:t.y}}}return t.VECTOR2_BSON_TYPE=c.BSON_DATA_OBJECT,e.Schema.Types.Vector2=t,e}
/**
 * @module Types/Vector3
 * @desc Export the three js Vector3 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function rg(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector3")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Vector3: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isVector3)throw new e.SchemaType.CastError(`Vector3: ${t} is not a object or Vector3 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z}}}return t.VECTOR3_BSON_TYPE=c.BSON_DATA_OBJECT,e.Schema.Types.Vector3=t,e}
/**
 * @module Types/Vector4
 * @desc Export the three js Vector4 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function ng(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector4")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Vector4: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isVector4)throw new e.SchemaType.CastError(`Vector4: ${t} is not a object or Vector4 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("w"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain w property`);if(r.isNotNumber(t.w))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z,w:t.w}}}return t.VECTOR4_BSON_TYPE=c.BSON_DATA_OBJECT,e.Schema.Types.Vector4=t,e}
/**
 * @module MongoDBThreePlugin
 * @desc Three way to register Types and Schema
 * using cjs module under types and schemas folder.
 * using FunctionRegistrator for type and add to plugin using .addType( myFunctionRegistrator ), extending class AbstractMongooseRegistrator for Schema and add to plugin using .addSchema(
 * MySchemaRegistrator ) using direct registration importing mongoose in the file (care to the loading order ! An no output about what is registered.)
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [MIT]{@link https://opensource.org/licenses/MIT}
 */module.exports=r=>new t.TMongoDBPlugin(r).addType(Zh).addType(Jh).addType(qh).addType(Kh).addType(eg).addType(tg).addType(rg).addType(ng).addSchema(E).addSchema(V).addSchema(Y).addSchema(q).addSchema(oe).addSchema(me).addSchema(pe).addSchema(Fe).addSchema(Ge).addSchema(Ve).addSchema(Ke).addSchema(tt).addSchema(at).addSchema(B).addSchema(ft).addSchema(Mt).addSchema(_t).addSchema(xt).addSchema(Pt).addSchema(Rt).addSchema(Qe).addSchema(Xt).addSchema(tr).addSchema(cr).addSchema(fr).addSchema(Mr).addSchema(_r).addSchema(xr).addSchema(Pr).addSchema(Rr).addSchema(Zr).addSchema(nn).addSchema(mn).addSchema(pn).addSchema(Fn).addSchema(Cn).addSchema(En).addSchema(Vn).addSchema(Yn).addSchema(qn).addSchema(oo).addSchema(mo).addSchema(So).addSchema(wo).addSchema(Oo).addSchema(Go).addSchema(Uo).addSchema(Qo).addSchema(Ko).addSchema(ii).addSchema(di).addSchema(Si).addSchema(wi).addSchema(Oi).addSchema(Gi).addSchema(Ui).addSchema(Qi).addSchema(Ki).addSchema(ia).addSchema(da).addSchema(Sa).addSchema(wa).addSchema(Oa).addSchema(Ga).addSchema(Ua).addSchema(Qa).addSchema(Ka).addSchema(ic).addSchema(dc).addSchema(Sc).addSchema(wc).addSchema(Oc).addSchema(Gc).addSchema(Uc).addSchema(Qc).addSchema(Kc).addSchema(is).addSchema(ds).addSchema(Ss).addSchema(ws).addSchema(Os).addSchema(Gs).addSchema(Us).addSchema(Qs).addSchema(Ks).addSchema(iu).addSchema(du).addSchema(Su).addSchema(wu).addSchema(Ou).addSchema(Gu).addSchema(Uu).addSchema(Qu).addSchema(Ku).addSchema(im).addSchema(dm).addSchema(Sm).addSchema(wm).addSchema(Sd).addSchema(Gm).addSchema(Um).addSchema(Om).addSchema(Qm).addSchema(Km).addSchema(id).addSchema(dd).addSchema(wd).addSchema(Od).addSchema(Gd).addSchema(Ud).addSchema(Qd).addSchema(Kd).addSchema(il).addSchema(dl).addSchema(fl).addSchema(gl).addSchema(Sl).addSchema(Ml).addSchema(Tl).addSchema(wl).addSchema(_l).addSchema(Bl).addSchema(Al).addSchema(jl).addSchema(Hl).addSchema(Zl).addSchema(rf).addSchema(uf).addSchema(gf).addSchema(Tf).addSchema(Bf).addSchema(Af).addSchema($f).addSchema(zf).addSchema(Jf).addSchema(eh).addSchema(ch).addSchema(Mh).addSchema(_h).addSchema(xh).addSchema(Ph).addSchema(Rh).addSchema(fh).addSchema(Xh).addController(m).addDescriptor({route:"/objects",controller:{name:"TObjects3DController",options:{schemaName:"Objects3D"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addController(t.TMongooseController).addDescriptor({route:"/curves",controller:{name:"TMongooseController",options:{schemaName:"Curves"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/geometries",controller:{name:"TMongooseController",options:{schemaName:"Geometries"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/materials",controller:{name:"TMongooseController",options:{schemaName:"Materials"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/textures",controller:{name:"TMongooseController",options:{schemaName:"Textures"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addController(e.TAbstractConverterManager).addDescriptor({route:"/uploads",controller:{name:"TAbstractConverterManager",options:{useNext:!0,converters:{JsonToThree:new S,ShpToThree:new F,DbfToThree:new g,FbxToThree:new p,ColladaToThree:new d,StlToThree:new w,TdsToThree:new v,MtlToThree:new y,ObjToThree:new M},rules:[{on:".json",use:"JsonToThree"},{on:".dae",use:"ColladaToThree"},{on:".fbx",use:"FbxToThree"},{on:".stl",use:"StlToThree"},{on:".3ds",use:"TdsToThree"},{on:".shp",use:"ShpToThree"},{on:".dbf",use:"DbfToThree"},{on:[".shp",".dbf"],use:["ShpToThree","DbfToThree"]},{on:".mtl",use:"MtlToThree"},{on:".obj",use:"ObjToThree"},{on:[".mtl",".obj"],use:["MtlToThree","ObjToThree"]}],inserter:_},can:{processFiles:{on:"post",over:"/"}}}});
