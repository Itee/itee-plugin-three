"use strict";var e=require("itee-database"),t=require("itee-mongodb"),r=require("itee-validators"),n=require("three-full"),o=require("itee-client"),a=require("itee-utils"),i=require("bson");function c(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=c(r);
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @see [IFC Standard]{@link http://standards.buildingsmart.org/IFC/RELEASE/IFC4_1/FINAL/HTML/}
 *
 */class u extends t.TMongooseController{constructor(e={}){super(e)}async _readOneDocument(e,t){if(r.isNotDefined(e)||r.isNotDefined(t))return null;const n=await this._driver.model(e).findOne(t).exec();return r.isDefined(n)?n._doc:null}async _readManyDocument(e,t,n){if(r.isNotDefined(e)||r.isNotDefined(t))return null;return(await this._driver.model(e).find(t,n).lean().exec()).map((e=>e._doc))}async _updateDocument(e,t,n){if(r.isNotDefined(e))return null;return await this._driver.model(e.type).findByIdAndUpdate(e._id,t,n).exec()}async getAllChildrenIds(e,t=!1){const n={children:[],geometries:[],materials:[]},o=[],a=await this._readManyDocument("Objects3D",{parent:e},{_id:!0,geometry:!0,material:!0,children:!0});for(let e=0,i=a.length;e<i;e++){const i=a[e],c=i._id.toString();r.isDefined(c)&&n.children.push(c);const s=i.geometry;r.isDefined(s)&&n.geometries.push(s.toString());const u=i.material;if(u){const e=r.isArray(u)?u.map((e=>e.toString())):[u.toString()];n.materials.push(...e)}if(i.children){const e=this.getAllChildrenIds(c,t);o.push(e)}}if(o.length>0){const e=await Promise.all(o);for(let t=0,r=e.length;t<r;t++){const r=e[t];n.children.push(...r.children),n.geometries.push(...r.geometries),n.materials.push(...r.materials)}}return n}async _deleteOne(e,r){try{const n="allInOneByParentId";if("oneByOne"===n){const n=await this._readOneDocument("Objects3D",{_id:e}),o=await this._removeParentReference(n),a={...await this._removeChildDocument(n),parent:o};t.TMongooseController.returnData(a,r)}else if("allInOneByParentId"===n){const n=await this.getAllChildrenIds(e,!0);n.children.push(e);const o={children:[...new Set(n.children)],geometries:[...new Set(n.geometries)],materials:[...new Set(n.materials)]},[a,i,c]=await Promise.all([this._deleteDocuments("Objects3D",o.children),this._deleteDocuments("Geometries",o.geometries),this._deleteDocuments("Materials",o.materials)]);t.TMongooseController.returnData({deletedObjectsCount:a,deletedGeometriesResult:i,deletedMaterialsResult:c},r)}}catch(e){t.TMongooseController.returnError(e,r)}}async _deleteDocuments(e,t){if(r.isEmptyArray(t))return 0;return(await this._driver.model(e).deleteMany({_id:{$in:t}}).exec()).deletedCount}async _deleteDocument(e){if(r.isNotDefined(e))return null;const t=await this._driver.model(e.type).findByIdAndDelete(e._id).exec();return t&&t._doc?t._doc._id:null}async _removeParentReference(e){const t=e.parent;if(r.isNotDefined(t))return null;const n=await this._readOneDocument("Objects3D",{_id:t}),o=n.children,a=o.indexOf(e._id);o.splice(a,1);return await this._updateDocument(n,{$set:{children:o}})}async _removeChildrenDocuments(e){let t=[];for(let r=e.length-1;r>=0;r--)t.push(this._removeChildDocument(e[r]));return Promise.all(t)}async _removeChildDocument(e){const t=await this._readManyDocument("Objects3D",{parent:e._id}),r=await this._removeChildrenDocuments(t),n=await this._removeOrphanGeometryWithId(e.geometry),o=await this._removeOrphanMaterialsWithIds(e.material||[]);return{object:await this._deleteDocument(e),children:r,geometry:n,materials:o}}async _removeOrphanGeometryWithId(e){if(r.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{geometry:e})).length>1)return;const t=await this._readOneDocument("Geometries",{_id:e});return await this._deleteDocument(t)}async _removeOrphanMaterialsWithIds(e){if(r.isNotDefined(e))return;if(r.isEmptyArray(e))return;const t=[];for(let r=0,n=e.length;r<n;r++)t.push(this._removeOrphanMaterialWithId(e[r]));return Promise.all(t)}async _removeOrphanMaterialWithId(e){if(r.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{material:e})).length>1)return;const t=await this._readOneDocument("Materials",{_id:e});return await this._deleteDocument(t)}}
/**
 * @module Converters/ColladaToThree
 * @desc Export JsonToThree converter class about .dae files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class m extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,a){super._convert(e,t,r,o,a);try{const t=new n.ColladaLoader;r(t.parse(e))}catch(e){a(e)}}}
/**
 * @module Loader/DBFLoader
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * From:
 * https://www.clicketyclick.dk/databases/xbase/format/db2_dbf.html#DBII_DBF_STRUCT
 * http://web.archive.org/web/20150323061445/http://ulisse.elettra.trieste.it/services/doc/dbase/DBFstruct.htm
 * http://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm
 *
 *
 */const d=a.toEnum({FoxPro:48,FoxPro_Autoincrement:49,dBASE_II:2,FoxPro_Var:50,dBASE_III_plus:3,dBASE_III_plus_memo:131,dBASE_IV_SQL_table:67,dBASE_IV_SQL_system:99,dBASE_IV_memo:139,dBASE_IV_memo_SQL_table:203,FoxBase:251,dBase_v_7:4,FoxPro_2_x:245,HiPerSix_memo:229}),l=a.toEnum({Binary:"B",Character:"C",Date:"D",Numeric:"N",Logical:"L",Memo:"M",Timestamp:"@",Long:"I",Autoincrement:"+",Float:"F",Double:"O",OLE:"G"});class f{constructor(e={}){const t={manager:n.DefaultLoadingManager,logger:o.DefaultLogger,reader:new o.TBinaryReader,...e};this.manager=t.manager,this.logger=t.logger,this.reader=t.reader}get manager(){return this._manager}set manager(e){this._manager=e}get logger(){return this._logger}set logger(e){this._logger=e}get reader(){return this._reader}set reader(e){this._reader=e}setManager(e){return this.manager=e,this}setLogger(e){return this.logger=e,this}setReader(e){return this.reader=e,this}load(e,t,r,o){const a=this,i=new n.FileLoader(a.manager);i.setResponseType("arraybuffer"),i.load(e,(e=>{t(a.parse(e))}),r,o)}parse(e){this.reader.setEndianess(o.Endianness.Big).setBuffer(e);const t=this.reader.getInt8();if(!this._isValidVersion(t))return this.logger.error(`DBFLoader: Invalid version number: ${t}`),null;const r=this._parseHeader(t);return{header:r,datas:this._parseDatas(t,r)}}_isValidVersion(e){return d.includes(e)}_parseHeader(e){let t={};switch(e){case d.FoxPro:case d.FoxPro_Autoincrement:case d.FoxPro_Var:case d.dBASE_II:t=this._parseHeaderV2();break;case d.dBASE_III_plus:case d.dBASE_III_plus_memo:t=this._parseHeaderV2_5();break;case d.dBASE_IV_memo:case d.dBASE_IV_memo_SQL_table:case d.dBASE_IV_SQL_system:case d.dBASE_IV_SQL_table:t=this._parseHeaderV3();break;case d.dBase_v_7:case d.FoxPro_2_x:case d.HiPerSix_memo:t=this._parseHeaderV4();break;default:throw new RangeError(`Invalid version parameter: ${e}`)}return this.reader.getUint8()!==f.Terminator&&this.logger.error("DBFLoader: Invalid terminator after field descriptors !!!"),t}_parseHeaderV2(){const e=this.reader.getInt16(),t=this.reader.getInt8()+f.YearOffset,r=this.reader.getInt8(),n=this.reader.getInt8(),o=this.reader.getInt16();let a,i,c,s,u,m=[];for(let t=0;t<e;t++)a=this.reader.getString(11),i=this.reader.getChar(),c=this.reader.getUint8(),s=this.reader.getInt16(),u=this.reader.getInt8(),m.push({name:a,type:i,length:c,memoryAddress:s,decimalCount:u});return{numberOfRecords:e,year:t,month:r,day:n,lengthOfEachRecords:o,fields:m}}_parseHeaderV2_5(){const e=this.reader.getInt8()+f.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(o.Endianness.Little);const n=this.reader.getInt32(),a=this.reader.getInt16(),i=this.reader.getInt16();this.reader.setEndianess(o.Endianness.Big),this.reader.skipOffsetOf(20);let c,s,u,m,d,l,h,g=[];for(let e=0;e<n;e++)c=this.reader.getString(11),s=this.reader.getChar(),m=this.reader.getInt32(),u=this.reader.getUint8(),d=this.reader.getUint8(),this.reader.skipOffsetOf(2),l=this.reader.getInt8(),this.reader.skipOffsetOf(2),h=this.reader.getInt8(),this.reader.skipOffsetOf(1),g.push({name:c,type:s,length:u,memoryAddress:m,decimalCount:d,workAreaId:l,MDXFlag:h});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:a,numberOfByteInRecord:i,fields:g}}_parseHeaderV3(){const e=this.reader.getInt8()+f.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(o.Endianness.Little);const n=this.reader.getInt32(),a=this.reader.getInt16(),i=this.reader.getInt16();this.reader.setEndianess(o.Endianness.Big),this.reader.skipOffsetOf(2);const c=this.reader.getInt8(),s=this.reader.getInt8();this.reader.skipOffsetOf(12);const u=this.reader.getInt8(),m=this.reader.getInt8();this.reader.skipOffsetOf(2);let d,l,h,g,p,S,y=[];for(;this.reader.getOffset()<a-1;)d=this.reader.getString(11),l=this.reader.getChar(),this.reader.skipOffsetOf(4),h=this.reader.getUint8(),g=this.reader.getUint8(),this.reader.skipOffsetOf(2),p=this.reader.getInt8(),this.reader.skipOffsetOf(10),S=this.reader.getInt8(),y.push({name:d,type:l,length:h,decimalCount:g,workAreaId:p,MDXFieldFlag:S});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:a,numberOfByteInRecord:i,incompleteTransactionFlag:c,encryptionFlag:s,MDXFlag:u,languageDriverId:m,fields:y}}_parseHeaderV4(){const e=this.reader.getInt8()+f.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(o.Endianness.Little);const n=this.reader.getInt32(),a=this.reader.getInt16(),i=this.reader.getInt16();this.reader.setEndianess(o.Endianness.Big),this.reader.skipOffsetOf(2);const c=this.reader.getInt8(),s=this.reader.getInt8();this.reader.skipOffsetOf(12);const u=this.reader.getInt8(),m=this.reader.getInt8();this.reader.skipOffsetOf(2);const d=this.reader.getString(32);this.reader.skipOffsetOf(4);let l,h,g,p,S,y,M=[];for(let e=0;e<n;e++)l=this.reader.getString(32),h=this.reader.getChar(),g=this.reader.getUint8(),p=this.reader.getUint8(),this.reader.skipOffsetOf(2),S=this.reader.getInt8(),this.reader.skipOffsetOf(2),y=this.reader.getInt32(),this.reader.skipOffsetOf(4),M.push({name:l,type:h,length:g,decimalCount:p,MDXFieldFlag:S,nextAutoincrementValue:y});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:a,numberOfByteInRecord:i,incompleteTransactionFlag:c,encryptionFlag:s,MDXFlag:u,languageDriverId:m,languageDriverName:d,fields:M}}_parseDatas(e,t){const r=t.numberOfRecords,n=t.fields;let o=[],a=null,i=null;for(let e=0;e<r;e++){a={},a.deleted=this.reader.getUint8()===f.DeletedRecord;for(let e=0,t=n.length;e<t;e++)switch(i=n[e],i.type){case l.Binary:{const e=this.reader.getString(i.length);a[i.name]=parseInt(e)}break;case l.Numeric:{const e=this.reader.getString(i.length);a[i.name]=parseInt(e)}break;case l.Character:case l.Date:a[i.name]=this.reader.getString(i.length);break;case l.Logical:{const e=this.reader.getChar().toLowerCase();a[i.name]="t"===e||"y"===e||"f"!==e&&"n"!==e&&null}break;case l.Memo:a[i.name]=this.reader.getString(i.length);break;case l.Timestamp:break;case l.Long:case l.Autoincrement:a[i.name]=this.reader.getInt32();break;case l.Float:{const e=this.reader.getString(i.length);a[i.name]=parseInt(e)}break;case l.Double:a[i.name]=this.reader.getFloat64();break;case l.OLE:a[i.name]=this.reader.getString(i.length);break;default:throw new RangeError(`Invalid data type parameter: ${i.type}`)}o.push(a)}return o}_parseFieldProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt16(),n=this.reader.getInt16(),o=this.reader.getInt16(),a=this.reader.getInt16(),i=this.reader.getInt16(),c=this.reader.getInt16();let s=[];for(let t=0;t<e;t++)s.push(this._getStandardProperties());let u=[];for(let e=0;e<r;e++)u.push(this._getCustomProperties());let m=[];for(let e=0;e<o;e++)m.push(this._getReferentialIntegrityProperties());return{numberOfStandardProperties:e,startOfStandardPropertiesDescriptor:t,numberOfCustomProperties:r,startOfCustomPropertiesDescriptor:n,numberOfReferentialIntegrityProperties:o,startOfReferentialIntegrityDescriptor:a,startOfData:i,sizeOfPropertiesStructure:c,standardProperties:s,customProperties:u,referentialIntegrityProperties:m}}_getStandardProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8(),n=this.reader.getInt8(),o=this.reader.getInt8();this.reader.skipOffsetOf(4);return{generationalNumber:e,tableFieldOffset:t,propertyDescribed:r,type:n,isConstraint:o,offsetFromStart:this.reader.getInt16(),widthOfDatabaseField:this.reader.getInt16()}}_getCustomProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8();this.reader.skipOffsetOf(1);return{generationalNumber:e,tableFieldOffset:t,type:r,offsetFromStartOfName:this.reader.getInt16(),lengthOfName:this.reader.getInt16(),offsetFromStartOfData:this.reader.getInt16(),lengthOfData:this.reader.getInt16()}}_getReferentialIntegrityProperties(){return{databaseState:this.reader.getInt8(),sequentialNumberRule:this.reader.getInt16(),offsetOfTheRIRuleName:this.reader.getInt16(),sizeOfTheRIRuleName:this.reader.getInt16(),offsetOfNameOfForeignTable:this.reader.getInt16(),sizeOfNameOfForeignTable:this.reader.getInt16(),stateBehaviour:this.reader.getInt8(),numberOfFieldsInLinkingKey:this.reader.getInt16(),offsetOfLocalTableTagName:this.reader.getInt16(),sizeOfTheLocalTableTagName:this.reader.getInt16(),offsetOfForeignTableTagName:this.reader.getInt16(),sizeOfTheForeignTableTagName:this.reader.getInt16()}}}f.Terminator=13,f.DeletedRecord=26,f.YearOffset=1900;
/**
 * @module Converters/DbfToThree
 * @desc Export JsonToThree converter class about .dbf files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link module:Loader/DBFLoader Loader/DBFLoader}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class h extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new f;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/FbxToThree
 * @desc Export JsonToThree converter class about .fbx files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class g extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,a){super._convert(e,t,r,o,a);try{const t=new n.FBXLoader;r(t.parse(e))}catch(e){a(e)}}}
/**
 * @module Converters/JsonToThree
 * @desc Export JsonToThree converter class about .json files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class p extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,o,a){super._convert(e,t,r,o,a);try{const t=new n.ObjectLoader;r(t.parse(e))}catch(e){a(e)}}}
/**
 * @module Converters/MtlToThree
 * @desc Export JsonToThree converter class about .mtl files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class S extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.String})}_convert(e,t,r,o,a){super._convert(e,t,r,o,a);try{const t=new n.MTLLoader;r(t.parse(e))}catch(e){a(e)}}}
/**
 * @module Converters/Obj2ToThree
 * @desc Export JsonToThree converter class about .obj files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class y extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,o,a){super._convert(e,t,r,o,a);try{const t=new n.OBJLoader2;r(t.parse(e))}catch(e){a(e)}}}
/**
 * @module Loader/SHPLoader
 * @desc Export SHPLoader to load .shp files
 *
 * @requires {@link https://github.com/Itee/itee-client itee-client}
 * @requires {@link https://github.com/Itee/itee-utils itee-utils}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 * @example Todo...
 *
 */const M=a.toEnum({NullShape:0,Point:1,Polyline:3,Polygon:5,MultiPoint:8,PointZ:11,PolyLineZ:13,PolygonZ:15,MultiPointZ:18,PointM:21,PolylineM:23,PolygonM:25,MultiPointM:28,MultiPatch:31});class b{constructor(e={}){const t={manager:n.DefaultLoadingManager,logger:o.DefaultLogger,reader:new o.TBinaryReader,globalOffset:new n.Vector3(0,0,0),worldAxis:{from:"zUp",to:"zForward"},...e};this.manager=t.manager,this.logger=t.logger,this.reader=t.reader,this.globalOffset=t.globalOffset,this.worldAxis=t.worldAxis}get globalOffset(){return this._globalOffset}set globalOffset(e){this._globalOffset=e}get worldAxis(){return this._worldAxis}set worldAxis(e){this._worldAxis=e}get manager(){return this._manager}set manager(e){this._manager=e}get logger(){return this._logger}set logger(e){this._logger=e}get reader(){return this._reader}set reader(e){this._reader=e}setGlobalOffset(e){return this.globalOffset=e,this}setWorldAxis(e){return this.worldAxis=e,this}setManager(e){return this.manager=e,this}setLogger(e){return this.logger=e,this}setReader(e){return this.reader=e,this}load(e,t,r,o){const a=this,i=new n.FileLoader(a.manager);i.setResponseType("arraybuffer"),i.load(e,(e=>{t(a.parse(e))}),r,o)}parse(e){this._reader.setEndianess(o.Endianness.Big).setBuffer(e);const t=this._parseHeader();if(t.fileCode!==b.FileCode)return this.logger.error("SHPLoader: Invalide Shape file code !"),null;if(t.fileLength<b.MinFileLength)return this.logger.error("SHPLoader: Shape file have an incorrect length !"),null;if(!Object.values(M).includes(t.shapeType))return this.logger.error("SHPLoader: Shape file have an incorrect shape type !"),null;t.version<b.MinVersion&&this.logger.warn("SHPLoader: Version of shape file below than 1000 could be incorrectly parsed !");const r=this._parseDatas(t);return this._convertToObjects(r)}_parseHeader(){const e=this._reader.getInt32();this._reader.skipOffsetOf(20);const t=this._reader.getInt32();this._reader.setEndianess(o.Endianness.Little);const r=this._reader.getInt32(),n=this._reader.getInt32(),a=this._reader.getInt32(),i=this._reader.getInt32();return{fileCode:e,fileLength:t,version:r,shapeType:n,boundingBox:{xMin:a,xMax:this._reader.getInt32(),yMin:i,yMax:this._reader.getInt32(),zMin:this._reader.getInt32(),zMax:this._reader.getInt32(),mMin:this._reader.getInt32(),mMax:this._reader.getInt32()}}}_parseDatas(e){this._reader.skipOffsetTo(100);let t,r,n,a=[];for(;!this._reader.isEndOfFile();)switch(t=this._parseRecordHeader(),r=this._reader.getOffset()+2*t.contentLength,this._reader.setEndianess(o.Endianness.Little),e.shapeType){case M.NullShape:this._reader.skipOffsetTo(r);break;case M.Point:case M.PointZ:case M.PointM:for(;this._reader.getOffset()<r;)n=this._parsePoint(),n&&a.push(n);break;case M.Polyline:case M.PolyLineZ:case M.PolylineM:for(;this._reader.getOffset()<r;)n=this._parsePolyLine(),n&&a.push(n);break;case M.Polygon:case M.PolygonZ:case M.PolygonM:for(;this._reader.getOffset()<r;)n=this._parsePolyLine(),n&&a.push(n);break;case M.MultiPoint:case M.MultiPointZ:case M.MultiPointM:for(;this._reader.getOffset()<r;)n=this._parseMultiPoint(),n&&a.push(n);break;case M.MultiPatch:for(;this._reader.getOffset()<r;)n=this._parseMultiPatch(),n&&a.push(n);break;default:this.logger.error(`SHPLoader: Invalid switch parameter: ${e.shapeType}`)}return a}_parseRecordHeader(){this._reader.setEndianess(o.Endianness.Big);return{recordNumber:this._reader.getInt32(),contentLength:this._reader.getInt32()}}_parseNull(){return this._reader.getInt32(),null}_parsePoint(){const e=this._reader.getInt32();if(e===M.NullShape)return null;return{shapeType:e,x:this._reader.getFloat64(),y:this._reader.getFloat64()}}_parsePolyLine(){const e=this._reader.getInt32();if(e===M.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=this._reader.getInt32(),o=new Array(r);for(let e=0;e<r;e++)o[e]=this._reader.getInt32();const a=new Array(n);for(let e=0;e<n;e++)a[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};return{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:n,parts:o,points:a}}_parsePolygon(){const e=this._reader.getInt32();if(e===M.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=this._reader.getInt32();let o=new Array(r);for(let e=0;e<r;e++)o[e]=this._reader.getInt32();let i=new Array(n);for(let e=0;e<n;e++)i[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};const c=[],s=[];return o.forEach(((e,t)=>{const r=i.slice(e,o[t+1]);a.ringClockwise(r)?c.push(r):s.push(r)})),s.forEach((e=>{c.some((t=>{if(a.ringContainsSome(t[0],e))return t.push(e),!0}))||c.push([e])})),{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:n,parts:o,polygons:c}}_parseMultiPoint(){const e=this._reader.getInt32();if(e===M.NullShape)return null;const t={xMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMin:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=new Array(r);for(let e=0;e<r;e++)n.push([this._reader.getFloat64(),this._reader.getFloat64()]);return{shapeType:e,boundingBox:t,numberOfPoints:r,points:n}}_parseMultiPatch(){const e=this._reader.getInt32();return e===M.NullShape?null:{shapeType:e}}_convertToObjects(e){let t=[];for(let t=0,n=e.length;t<n;t++){let n=e[t];n.shapeType!==M.Polygon&&n.shapeType!==M.PolygonZ&&n.shapeType!==M.PolygonM||(n.points&&Array.isArray(n.points[0])?r(n.points):o(n.points))}function r(e){for(let t=0,n=e.length;t<n;t++){let n=e[t];n?Array.isArray(n[0])?r(n):o(n):this.logger.log("no array, oups !")}}function o(e){t.push(new n.Shape(e))}return t}}b.FileCode=9994,b.MinFileLength=100,b.MinVersion=1e3;
/**
 * @module Converters/ShpToThree
 * @desc Export JsonToThree converter class about .shp files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link module:Loader/SHPLoader Loader/SHPLoader}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class T extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new b;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/StlToThree
 * @desc Export JsonToThree converter class about .stl files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class F extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,o,a){super._convert(e,t,r,o,a);try{const t=new n.STLLoader;r(t.parse(e))}catch(e){a(e)}}}
/**
 * @module Converters/TdsToThree
 * @desc Export JsonToThree converter class about .3ds files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class w extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,a){super._convert(e,t,r,o,a);try{const t=new n.TDSLoader;r(t.parse(e))}catch(e){a(e)}}}
/**
 * @module Inserters/ThreeToMongoDB
 * @desc Export ThreeToMongoDB mongodb inserter class.
 *
 * @requires {@link https://github.com/Itee/itee-client itee-client}
 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class v extends e.TAbstractDataInserter{constructor(e={}){const t={logger:o.DefaultLogger,...e};super(t),this.logger=t.logger,this.mergeStrategy="add"}static _arrayify(e){let t=[];return r.isDefined(e)&&(t=r.isArray(e)?e:[e]),t}async _save(e,t,n,o,a){const i=v._arrayify(e);if(r.isEmptyArray(i))return void a("No data to save in database. Abort insert !");const c=i.map((e=>e.name));this.logger.log(`ThreeToMongoDB: Saving ${c}`),t.mergeStrategy&&(this.mergeStrategy=t.mergeStrategy);try{const e=t.parentId;let o=null,c=null;if(r.isDefined(e)){const n=await this._readOneDocument("Objects3D",{_id:e});if(r.isNull(n))return void a(`Unable to retrieve parent with id (${t.parentId}). Abort insert !`);if("add"===this.mergeStrategy)o=await this._parseObjects(i,e),c=r.isDefined(o)?o.filter((e=>e)).map((e=>e._id)):[],await this._updateDocument(n,{$addToSet:{children:c}});else if("replace"===this.mergeStrategy){const t=await this._readManyDocument("Objects3D",{parent:e}),a=i.map((e=>e.uuid)),s=t.filter((e=>!a.includes(e.uuid)));await this._removeChildrenDocuments(s),o=await this._parseObjects(i,e),c=r.isDefined(o)?o.filter((e=>e)).map((e=>e._id)):[],await this._updateDocument(n,{$set:{children:c}})}}else o=await this._parseObjects(i,null),c=r.isDefined(o)?o.filter((e=>e)).map((e=>e._id)):[];this.logger.log(`ThreeToMongoDB: Saved ${c}`),n()}catch(e){a(e)}}async _parseObjects(e=[],t=null){const n=v._arrayify(e);if(r.isEmptyArray(n))return null;const o=[];for(let e=0,r=n.length;e<r;e++)o.push(this._parseObject(n[e],t));return Promise.all(o)}async _parseObject(e,t=null){if(r.isNotDefined(e))return null;const n=e.type,o=e.name,a=e.geometry,i=v._arrayify(e.children),c=v._arrayify(e.material);if(r.isDefined(a)&&r.isEmptyArray(i))if(a.isGeometry){const e=a.vertices;if(r.isNotDefined(e)||r.isEmptyArray(e))return this.logger.error(`Leaf object ${o} have a geometry that doesn't contain vertices ! Skip it.`),null}else{if(!a.isBufferGeometry)return this.logger.error(`Object ${o} contain an unknown/unmanaged geometry of type ${a.type} ! Skip it.`),null;{const e=a.attributes;if(r.isNotDefined(e))return this.logger.error(`Buffer geometry of ${o} doesn't contain attributes ! Skip it.`),null;const t=e.position;if(r.isNotDefined(t)||0===t.count)return this.logger.error(`Leaf object ${o} have a buffer geometry that doesn't contain position attribute ! Skip it.`),null}}let s=null;if(v.AvailableLineTypes.includes(n)){if(r.isNotDefined(a))return this.logger.error(`Missing geometry for object ${e.name} of type ${n}. Only Sprite can contains material without geometry ! Skip it.`),null;s=v.AvailableLineMaterialTypes}else if(v.AvailablePointTypes.includes(n)){if(r.isNotDefined(a))return this.logger.error(`Missing geometry for object ${e.name} of type ${n}. Only Sprite can contains material without geometry ! Skip it.`),null;s=v.AvailablePointMaterialTypes}else v.AvailableSpriteTypes.includes(n)&&(s=v.AvailableSpriteMaterialTypes);if(s)for(let e=0,t=c.length;e<t;e++){const t=c[e].type;if(!s.includes(t))return this.logger.error(`Object ${o} of type ${n}, contain an invalid material of type ${t} ! Skip it.`),null}const u=await this._getOrCreateDocuments(a),m=r.isDefined(u)?u.filter((e=>e)).map((e=>e._id)).pop():null,d=await this._getOrCreateDocuments(c),l=r.isDefined(d)?d.filter((e=>e)).map((e=>e._id)):[];let f=await this._readOneDocument(n,{uuid:e.uuid,parent:t});if(r.isDefined(f))if("add"===this.mergeStrategy){const e=await this._parseObjects(i,f._id),t=r.isDefined(e)?e.filter((e=>e)).map((e=>e._id)):[];await this._updateDocument(f,{$addToSet:{children:t}})}else if("replace"===this.mergeStrategy){const e=await this._readManyDocument("Objects3D",{parent:f._id}),t=i.map((e=>e.uuid)),n=e.filter((e=>!t.includes(e.uuid)));await this._removeChildrenDocuments(n);const o=await this._parseObjects(i,f._id),a=r.isDefined(o)?o.filter((e=>e)).map((e=>e._id)):[];await this._updateDocument(f,{$set:{children:a,geometry:m,material:l}})}else this.logger.error(`Unknown/Unmanaged merge srategy ${this.mergeStrategy}`);else{e.parent=t,e.children=[],e.geometry=m,e.material=l,f=await this._createDocument(e);const n=await this._parseObjects(i,f._id),o=r.isDefined(n)?n.filter((e=>e)).map((e=>e._id)):[];await this._updateDocument(f,{$set:{children:o,geometry:m,material:l}})}return f}async _getOrCreateDocuments(e=[]){const t=v._arrayify(e);if(r.isEmptyArray(t))return null;const n=[];for(let e=0,r=t.length;e<r;e++)n.push(this._getOrCreateDocument(t[e]));return Promise.all(n)}async _getOrCreateDocument(e){if(r.isNotDefined(e))return null;let t=await this._readOneDocument(e.type,{uuid:e.uuid});return t=r.isDefined(t)?await this._updateDocument(t,e):await this._createDocument(e),t}async _createDocuments(e=[]){const t=v._arrayify(e);if(r.isEmptyArray(t))return null;const n=[];for(let e=0,r=t.length;e<r;e++)n.push(this._createDocument(t[e]));return Promise.all(n)}async _createDocument(e){if(r.isNotDefined(e))return null;const t=this._driver.model(e.type);return(await t(e).save())._doc}async _readOneDocument(e,t){if(r.isNotDefined(e)||r.isNotDefined(t))return null;const n=await this._driver.model(e).findOne(t).exec();return r.isDefined(n)?n._doc:null}async _readManyDocument(e,t){if(r.isNotDefined(e)||r.isNotDefined(t))return null;return(await this._driver.model(e).find(t).exec()).map((e=>e._doc))}async _updateDocuments(e=[],t,n){const o=v._arrayify(e);if(r.isEmptyArray(o))return null;const a=[];for(let e=0,r=o.length;e<r;e++)a.push(this._updateDocument(o[e],t,n));return Promise.all(a)}async _updateDocument(e,t,n){return r.isNotDefined(e)?null:await this._driver.model(e.type).findByIdAndUpdate(e._id,t,n).exec()}async _deleteDocuments(e=[]){const t=v._arrayify(e);if(r.isEmptyArray(t))return null;const n=[];for(let e=0,r=t.length;e<r;e++)n.push(this._deleteDocument(t[e]));return Promise.all(n)}async _deleteDocument(e){return r.isNotDefined(e)?null:await this._driver.model(e.type).findByIdAndDelete(e._id).exec()}async _removeChildrenDocuments(e){let t=[];for(let r=e.length-1;r>=0;r--)t.push(this._removeChildDocument(e[r]));return Promise.all(t)}async _removeChildDocument(e){const t=await this._readManyDocument("Objects3D",{parent:e._id});await this._removeChildrenDocuments(t),await this._removeOrphanGeometryWithId(e.geometry),await this._removeOrphanMaterialsWithIds(e.material||[]),await this._deleteDocument(e)}async _removeOrphanGeometryWithId(e){if(r.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{geometry:e})).length>1)return;const t=await this._readOneDocument("Geometries",{_id:e});await this._deleteDocument(t)}async _removeOrphanMaterialsWithIds(e){const t=[];for(let r=0,n=e.length;r<n;r++)t.push(this._removeOrphanMaterialWithId(e[r]));return Promise.all(t)}async _removeOrphanMaterialWithId(e){if((await this._readManyDocument("Objects3D",{material:e})).length>1)return;const t=await this._readOneDocument("Materials",{_id:e});await this._deleteDocument(t)}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Object3D
 *
 * @description Todo...
 */
function _(){}v.AvailableCurveTypes=["Curve","ArcCurve","CatmullRomCurve3","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","CurvePath","Path","Shape"],v.AvailableLineTypes=["Line","LineLoop","LineSegments"],v.AvailableLineMaterialTypes=["LineBasicMaterial","LineDashedMaterial"],v.AvailablePointTypes=["Points"],v.AvailablePointMaterialTypes=["PointsMaterial"],v.AvailableSpriteTypes=["Sprite"],v.AvailableSpriteMaterialTypes=["SpriteMaterial"],_.getSchemaFrom=e=>(_._schema||_._createSchema(e),_._schema),_._createSchema=e=>{const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Mixed,a=r.Vector3,i=r.Quaternion,c=r.Matrix4,s=r.Euler;_._schema=new t({uuid:String,name:String,type:String,parent:n,children:[n],up:a,position:a,rotation:s,quaternion:i,scale:{type:a,default:{x:1,y:1,z:1}},modelViewMatrix:c,normalMatrix:c,matrix:c,matrixWorld:c,matrixAutoUpdate:Boolean,matrixWorldNeedsUpdate:Boolean,layers:{type:Number,set:e=>e.mask},visible:Boolean,castShadow:Boolean,receiveShadow:Boolean,frustumCulled:Boolean,renderOrder:Boolean,userData:{type:o,set:e=>function e(t){let r={};for(let n in t){if(!Object.prototype.hasOwnProperty.call(t,n))continue;let o=t[n];o.constructor===Object&&(o=e(o)),r[n.replace(/\./g,"")]=o}return r}(e)}},{collection:"objects",discriminatorKey:"type"})},_.getModelFrom=e=>(_._model||_._createModel(e),_._model),_._createModel=e=>{_._model=e.model("Objects3D",_.getSchemaFrom(e)),_._model.discriminator("Object3D",new e.Schema({}))},_.registerModelTo=e=>(_._model||_._createModel(e),e),_._schema=null,_._model=null;var N=Object.freeze({__proto__:null,Object3D:_});
/**
 * @module Schemas/Audio/Audio
 * @desc Export the ThreeJs Audio Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:B}=N;let C,O;function D(e){return C||function(e){const t=e.Schema;C=new t({})}(e),C}function x(e){const t=B.getModelFrom(e);O=t.discriminator("Audio",D(e))}var I={name:"Audio",getSchemaFrom:D,getModelFrom:function(e){return O||x(e),O},registerModelTo:function(e){return O||x(e),e}};
/**
 * @module Schemas/Audio/AudioListener
 * @desc Export the ThreeJs AudioListener Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:A}=N;let E,G;function L(e){return E||function(e){const t=e.Schema;E=new t({})}(e),E}function P(e){const t=A.getModelFrom(e);G=t.discriminator("AudioListener",L(e))}var j={name:"AudioListener",getSchemaFrom:L,getModelFrom:function(e){return G||P(e),G},registerModelTo:function(e){return G||P(e),e}};
/**
 * @module Schemas/Audio/PositionalAudio
 * @desc Export the ThreeJs PositionalAudio Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:V}=N;let $,U;function R(e){return $||function(e){const t=e.Schema;$=new t({})}(e),$}function k(e){const t=V.getModelFrom(e);U=t.discriminator("PositionalAudio",R(e))}var H={name:"PositionalAudio",getSchemaFrom:R,getModelFrom:function(e){return U||k(e),U},registerModelTo:function(e){return U||k(e),e}};
/**
 * @module Schemas/Camera/ArrayCamera
 * @desc Export the ThreeJs ArrayCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:z}=N;let Y,Q;function W(e){return Y||function(e){const t=e.Schema;Y=new t({})}(e),Y}function X(e){const t=z.getModelFrom(e);Q=t.discriminator("ArrayCamera",W(e))}var Z={name:"ArrayCamera",getSchemaFrom:W,getModelFrom:function(e){return Q||X(e),Q},registerModelTo:function(e){return Q||X(e),e}};
/**
 * @module Schemas/Camera/Camera
 * @desc Export the ThreeJs Camera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:J}=N;let q,K;function ee(e){return q||function(e){const t=e.Schema;q=new t({})}(e),q}function te(e){const t=J.getModelFrom(e);K=t.discriminator("Camera",ee(e))}var re={name:"Camera",getSchemaFrom:ee,getModelFrom:function(e){return K||te(e),K},registerModelTo:function(e){return K||te(e),e}};
/**
 * @module Schemas/Camera/CubeCamera
 * @desc Export the ThreeJs CubeCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ne}=N;let oe,ae;function ie(e){return oe||function(e){const t=e.Schema;oe=new t({})}(e),oe}function ce(e){const t=ne.getModelFrom(e);ae=t.discriminator("CubeCamera",ie(e))}var se={name:"CubeCamera",getSchemaFrom:ie,getModelFrom:function(e){return ae||ce(e),ae},registerModelTo:function(e){return ae||ce(e),e}};
/**
 * @module Schemas/Camera/OrthographicCamera
 * @desc Export the ThreeJs OrthographicCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ue}=N;let me,de;function le(e){return me||function(e){const t=e.Schema;me=new t({})}(e),me}function fe(e){const t=ue.getModelFrom(e);de=t.discriminator("OrthographicCamera",le(e))}var he={name:"OrthographicCamera",getSchemaFrom:le,getModelFrom:function(e){return de||fe(e),de},registerModelTo:function(e){return de||fe(e),e}};
/**
 * @module Schemas/Camera/PerspectiveCamera
 * @desc Export the ThreeJs PerspectiveCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ge}=N;let pe,Se;function ye(e){return pe||function(e){const t=e.Schema;pe=new t({})}(e),pe}function Me(e){const t=ge.getModelFrom(e);Se=t.discriminator("PerspectiveCamera",ye(e))}var be={name:"PerspectiveCamera",getSchemaFrom:ye,getModelFrom:function(e){return Se||Me(e),Se},registerModelTo:function(e){return Se||Me(e),e}};
/**
 * @module Schemas/Core/BufferAttribute
 * @desc Export the ThreeJs BufferAttribute Model and Schema for Mongoose.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{isInt8Array:Te,isInt16Array:Fe,isInt32Array:we,isFloat32Array:ve,isFloat64Array:_e,isUint8Array:Ne,isUint8ClampedArray:Be,isUint16Array:Ce,isUint32Array:Oe,isBigInt64Array:De,isBigUint64Array:xe}=s.default;let Ie;var Ae={name:"BufferAttribute",getSchemaFrom:function(e){return Ie||function(e){const t=e.Schema,r=t.Types.Mixed,n=1,o=2,a=4,i=8,c={Int8Array:0,Uint8Array:1,Uint8ClampedArray:2,Int16Array:3,Uint16Array:4,Int32Array:5,Uint32Array:6,Float32Array:7,Float64Array:8,BigInt64Array:9,BigUint64Array:10};Ie=new t({array:{type:Buffer,set:e=>{const t=e.length;let r=null,s=0;if(Te(e)){r=Buffer.allocUnsafe(n+t*n),s=r.writeUInt8(c.Int8Array,s);for(let n=0;n<t;n++)s=r.writeInt8(e[n],s)}else if(Ne(e)){r=Buffer.allocUnsafe(n+t*n),s=r.writeUInt8(c.Uint8Array,s);for(let n=0;n<t;n++)s=r.writeUInt8(e[n],s)}else if(Be(e)){r=Buffer.allocUnsafe(n+t*n),s=r.writeUInt8(c.Uint8ClampedArray,s);for(let n=0;n<t;n++)s=r.writeUInt8(e[n],s)}else if(Fe(e)){r=Buffer.allocUnsafe(n+t*o),s=r.writeUInt8(c.Int16Array,s);for(let n=0;n<t;n++)s=r.writeInt16BE(e[n],s)}else if(Ce(e)){r=Buffer.allocUnsafe(n+t*o),s=r.writeUInt8(c.Uint16Array,s);for(let n=0;n<t;n++)s=r.writeUInt16BE(e[n],s)}else if(we(e)){r=Buffer.allocUnsafe(n+t*a),s=r.writeUInt8(c.Int32Array,s);for(let n=0;n<t;n++)s=r.writeInt32BE(e[n],s)}else if(Oe(e)){r=Buffer.allocUnsafe(n+t*a),s=r.writeUInt8(c.Uint32Array,s);for(let n=0;n<t;n++)s=r.writeUInt32BE(e[n],s)}else if(ve(e)){r=Buffer.allocUnsafe(n+t*a),s=r.writeUInt8(c.Float32Array,s);for(let n=0;n<t;n++)s=r.writeFloatBE(e[n],s)}else if(_e(e)){r=Buffer.allocUnsafe(n+t*i),s=r.writeUInt8(c.Float64Array,s);for(let n=0;n<t;n++)s=r.writeDoubleBE(e[n],s)}else if(De(e)){r=Buffer.allocUnsafe(n+t*i),s=r.writeUInt8(c.BigInt64Array,s);for(let n=0;n<t;n++)s=r.writeDoubleBE(e[n],s)}else{if(!xe(e))throw new Error("Unable to determine the array type to bufferize.");r=Buffer.allocUnsafe(n+t*i),s=r.writeUInt8(c.BigUint64Array,s);for(let n=0;n<t;n++)s=r.writeDoubleBE(e[n],s)}return r}},count:Number,dynamic:Boolean,itemSize:Number,name:String,needsUpdate:Boolean,normalized:Boolean,updateRange:r,uuid:String,version:Number},{_id:!1,id:!1})}(e),Ie},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Core/BufferGeometry
 * @desc Export the ThreeJs BufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferAttribute Schemas/Core/BufferAttribute}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Ee,Ge;function Le(e){return Ee||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Vector3,a=Ae.getSchemaFrom(e);Ee=new t({uuid:String,name:String,type:String,index:a,attributes:{position:a,normal:a,color:a,uv:a},groups:n,boundingBox:{min:o,max:o},boundingSphere:{center:o,radius:Number},drawRange:n},{collection:"geometries",discriminatorKey:"type"})}(e),Ee}function Pe(e){Ge=e.model("BufferGeometries",Le(e)),Ge.discriminator("BufferGeometry",new e.Schema({}))}const je={getSchemaFrom:Le,getModelFrom:function(e){return Ge||Pe(e),Ge},registerModelTo:function(e){return Ge||Pe(e),e}};var Ve=Object.freeze({__proto__:null,BufferGeometry:je});
/**
 * @module Schemas/Curves/Curve
 * @desc Export the ThreeJs Curve Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let $e,Ue;function Re(e){return $e||function(e){const t=e.Schema;$e=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{collection:"curves",discriminatorKey:"type"})}(e),$e}function ke(e){Ue=e.model("Curves",Re(e)),Ue.discriminator("Curve",new e.Schema({}))}var He={name:"Curve",getSchemaFrom:Re,getModelFrom:function(e){return Ue||ke(e),Ue},registerModelTo:function(e){return Ue||ke(e),e}},ze={Curve:He};
/**
 * @module Schemas/Core/CurvePath
 * @desc Export the ThreeJs CurvePath Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 * @augments module:Schemas/Curves/Curve
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Curve:Ye}=ze;let Qe,We;function Xe(e){return Qe||function(e){const t=e.Schema,r=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});Qe=new t({curves:[r],autoClose:{type:Boolean,default:!1}})}(e),Qe}function Ze(e){const t=Ye.getModelFrom(e);We=t.discriminator("CurvePath",Xe(e))}var Je={name:"CurvePath",getSchemaFrom:Xe,getModelFrom:function(e){return We||Ze(e),We},registerModelTo:function(e){return We||Ze(e),e}};
/**
 * @module Schemas/Core/Face3
 * @desc Export the ThreeJs Face3 Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let qe;var Ke={name:"Face3",getSchemaFrom:function(e){return qe||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Vector3;qe=new t({a:Number,b:Number,c:Number,normal:o,vertexNormals:[Number],color:n,vertexColors:[Number],materialIndex:Number},{_id:!1,id:!1})}(e),qe},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Core/Geometry
 * @desc Export the ThreeJs Geometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Face3 Schemas/Core/Face3}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let et,tt;function rt(e){return et||function(e){const t=Ke.getSchemaFrom(e),r=e.Schema,n=r.Types.Vector3;et=new r({uuid:String,name:String,type:String,vertices:[n],colors:[Number],faces:[t],faceVertexUvs:[[Number]],morphTargets:[Number],morphNormals:[Number],skinWeights:[Number],skinIndices:[Number],lineDistances:[Number],boundingBox:{min:n,max:n},boundingSphere:{center:n,radius:Number},elementsNeedUpdate:Boolean,verticesNeedUpdate:Boolean,uvsNeedUpdate:Boolean,normalsNeedUpdate:Boolean,colorsNeedUpdate:Boolean,lineDistancesNeedUpdate:Boolean,groupsNeedUpdate:Boolean},{collection:"geometries",discriminatorKey:"type"})}(e),et}function nt(e){tt=e.model("Geometries",rt(e)),tt.discriminator("Geometry",new e.Schema({}))}const ot={name:"Geometry",getSchemaFrom:rt,getModelFrom:function(e){return tt||nt(e),tt},registerModelTo:function(e){return tt||nt(e),e}};var at=Object.freeze({__proto__:null,Geometry:ot});
/**
 * @module Schemas/Core/Path
 * @desc Export the ThreeJs Path Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:it}=ze;let ct,st;function ut(e){return ct||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});ct=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r})}(e),ct}function mt(e){const t=it.getModelFrom(e);st=t.discriminator("Path",ut(e))}var dt={name:"Path",getSchemaFrom:ut,getModelFrom:function(e){return st||mt(e),st},registerModelTo:function(e){return st||mt(e),e}};
/**
 * @module Schemas/Core/Shape
 * @desc Export the ThreeJs Shape Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:lt}=ze;let ft,ht;function gt(e){return ft||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),o=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1});ft=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[o]})}(e),ft}function pt(e){const t=lt.getModelFrom(e);ht=t.discriminator("Shape",gt(e))}var St={name:"Shape",getSchemaFrom:gt,getModelFrom:function(e){return ht||pt(e),ht},registerModelTo:function(e){return ht||pt(e),e}};
/**
 * @module Schemas/Curves/ArcCurve
 * @desc Export the ThreeJs ArcCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:yt}=ze;let Mt,bt;function Tt(e){return Mt||function(e){const t=e.Schema;Mt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),Mt}function Ft(e){const t=yt.getModelFrom(e);bt=t.discriminator("ArcCurve",Tt(e))}var wt={name:"ArcCurve",getSchemaFrom:Tt,getModelFrom:function(e){return bt||Ft(e),bt},registerModelTo:function(e){return bt||Ft(e),e}};
/**
 * @module Schemas/Curves/CatmullRomCurve3
 * @desc Export the ThreeJs CatmullRomCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:vt}=ze;let _t,Nt;function Bt(e){return _t||function(e){const t=e.Schema,r=t.Types.Vector3;_t=new t({points:[r],closed:Boolean,curveType:String,tension:Number})}(e),_t}function Ct(e){const t=vt.getModelFrom(e);Nt=t.discriminator("CatmullRomCurve3",Bt(e))}var Ot={name:"CatmullRomCurve3",getSchemaFrom:Bt,getModelFrom:function(e){return Nt||Ct(e),Nt},registerModelTo:function(e){return Nt||Ct(e),e}};
/**
 * @module Schemas/Curves/CubicBezierCurve
 * @desc Export the ThreeJs CubicBezierCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Dt}=ze;let xt,It;function At(e){return xt||function(e){const t=e.Schema,r=t.Types.Vector2;xt=new t({v0:r,v1:r,v2:r,v3:r})}(e),xt}function Et(e){const t=Dt.getModelFrom(e);It=t.discriminator("CubicBezierCurve",At(e))}var Gt={name:"CubicBezierCurve",getSchemaFrom:At,getModelFrom:function(e){return It||Et(e),It},registerModelTo:function(e){return It||Et(e),e}};
/**
 * @module Schemas/Curves/CubicBezierCurve3
 * @desc Export the ThreeJs CubicBezierCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Lt}=ze;let Pt,jt;function Vt(e){return Pt||function(e){const t=e.Schema,r=t.Types.Vector3;Pt=new t({v0:r,v1:r,v2:r,v3:r})}(e),Pt}function $t(e){const t=Lt.getModelFrom(e);jt=t.discriminator("CubicBezierCurve3",Vt(e))}var Ut={name:"CubicBezierCurve3",getSchemaFrom:Vt,getModelFrom:function(e){return jt||$t(e),jt},registerModelTo:function(e){return jt||$t(e),e}};
/**
 * @module Schemas/Curves/CurveExtras
 * @desc Export the ThreeJs CurveExtras Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Rt}=ze;let kt,Ht;function zt(e){return kt||function(e){const t=e.Schema;kt=new t({})}(e),kt}function Yt(e){const t=Rt.getModelFrom(e);Ht=t.discriminator("CurveExtras",zt(e))}var Qt={name:"CurveExtras",getSchemaFrom:zt,getModelFrom:function(e){return Ht||Yt(e),Ht},registerModelTo:function(e){return Ht||Yt(e),e}};
/**
 * @module Schemas/Curves/EllipseCurve
 * @desc Export the ThreeJs EllipseCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Wt}=ze;let Xt,Zt;function Jt(e){return Xt||function(e){const t=e.Schema;Xt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),Xt}function qt(e){const t=Wt.getModelFrom(e);Zt=t.discriminator("EllipseCurve",Jt(e))}var Kt={name:"EllipseCurve",getSchemaFrom:Jt,getModelFrom:function(e){return Zt||qt(e),Zt},registerModelTo:function(e){return Zt||qt(e),e}};
/**
 * @module Schemas/Curves/LineCurve
 * @desc Export the ThreeJs LineCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:er}=ze;let tr,rr;function nr(e){return tr||function(e){const t=e.Schema,r=t.Types.Vector2;tr=new t({v0:r,v1:r})}(e),tr}function or(e){const t=er.getModelFrom(e);rr=t.discriminator("LineCurve",nr(e))}var ar={name:"LineCurve",getSchemaFrom:nr,getModelFrom:function(e){return rr||or(e),rr},registerModelTo:function(e){return rr||or(e),e}};
/**
 * @module Schemas/Curves/LineCurve3
 * @desc Export the ThreeJs LineCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:ir}=ze;let cr,sr;function ur(e){return cr||function(e){const t=e.Schema,r=t.Types.Vector3;cr=new t({v0:r,v1:r})}(e),cr}function mr(e){const t=ir.getModelFrom(e);sr=t.discriminator("LineCurve3",ur(e))}var dr={name:"LineCurve3",getSchemaFrom:ur,getModelFrom:function(e){return sr||mr(e),sr},registerModelTo:function(e){return sr||mr(e),e}};
/**
 * @module Schemas/Curves/NURBSCurve
 * @desc Export the ThreeJs NURBSCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:lr}=ze;let fr,hr;function gr(e){return fr||function(e){const t=e.Schema;fr=new t({})}(e),fr}function pr(e){const t=lr.getModelFrom(e);hr=t.discriminator("NURBSCurve",gr(e))}var Sr={name:"NURBSCurve",getSchemaFrom:gr,getModelFrom:function(e){return hr||pr(e),hr},registerModelTo:function(e){return hr||pr(e),e}};
/**
 * @module Schemas/Curves/NURBSSurface
 * @desc Export the ThreeJs NURBSSurface Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:yr}=ze;let Mr,br;function Tr(e){return Mr||function(e){const t=e.Schema;Mr=new t({})}(e),Mr}function Fr(e){const t=yr.getModelFrom(e);br=t.discriminator("NURBSSurface",Tr(e))}var wr={name:"NURBSSurface",getSchemaFrom:Tr,getModelFrom:function(e){return br||Fr(e),br},registerModelTo:function(e){return br||Fr(e),e}};
/**
 * @module Schemas/Curves/QuadraticBezierCurve
 * @desc Export the ThreeJs QuadraticBezierCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:vr}=ze;let _r,Nr;function Br(e){return _r||function(e){const t=e.Schema,r=t.Types.Vector2;_r=new t({v0:r,v1:r,v2:r})}(e),_r}function Cr(e){const t=vr.getModelFrom(e);Nr=t.discriminator("QuadraticBezierCurve",Br(e))}var Or={name:"QuadraticBezierCurve",getSchemaFrom:Br,getModelFrom:function(e){return Nr||Cr(e),Nr},registerModelTo:function(e){return Nr||Cr(e),e}};
/**
 * @module Schemas/Curves/QuadraticBezierCurve3
 * @desc Export the ThreeJs QuadraticBezierCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Dr}=ze;let xr,Ir;function Ar(e){return xr||function(e){const t=e.Schema,r=t.Types.Vector3;xr=new t({v0:r,v1:r,v2:r})}(e),xr}function Er(e){const t=Dr.getModelFrom(e);Ir=t.discriminator("QuadraticBezierCurve3",Ar(e))}var Gr={name:"QuadraticBezierCurve3",getSchemaFrom:Ar,getModelFrom:function(e){return Ir||Er(e),Ir},registerModelTo:function(e){return Ir||Er(e),e}};
/**
 * @module Schemas/Curves/SplineCurve
 * @desc Export the ThreeJs SplineCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Lr}=ze;let Pr,jr;function Vr(e){return Pr||function(e){const t=e.Schema,r=t.Types.Vector3;Pr=new t({points:[r]})}(e),Pr}function $r(e){const t=Lr.getModelFrom(e);jr=t.discriminator("SplineCurve",Vr(e))}var Ur={name:"SplineCurve",getSchemaFrom:Vr,getModelFrom:function(e){return jr||$r(e),jr},registerModelTo:function(e){return jr||$r(e),e}};
/**
 * @module Schemas/Geometries/BoxBufferGeometry
 * @desc Export the ThreeJs BoxBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Rr}=Ve;let kr,Hr;function zr(e){return kr||function(e){const t=e.Schema;kr=new t({})}(e),kr}function Yr(e){const t=Rr.getModelFrom(e);Hr=t.discriminator("BoxBufferGeometry",zr(e))}var Qr={name:"BoxBufferGeometry",getSchemaFrom:zr,getModelFrom:function(e){return Hr||Yr(e),Hr},registerModelTo:function(e){return Hr||Yr(e),e}};
/**
 * @module Schemas/Geometries/BoxGeometry
 * @desc Export the ThreeJs BoxGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Wr}=at;let Xr,Zr;function Jr(e){return Xr||function(e){const t=e.Schema;Xr=new t({})}(e),Xr}function qr(e){const t=Wr.getModelFrom(e);Zr=t.discriminator("BoxGeometry",Jr(e))}var Kr={name:"BoxGeometry",getSchemaFrom:Jr,getModelFrom:function(e){return Zr||qr(e),Zr},registerModelTo:function(e){return Zr||qr(e),e}};
/**
 * @module Schemas/Geometries/CircleBufferGeometry
 * @desc Export the ThreeJs CircleBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:en}=Ve;let tn,rn;function nn(e){return tn||function(e){const t=e.Schema;tn=new t({})}(e),tn}function on(e){const t=en.getModelFrom(e);rn=t.discriminator("CircleBufferGeometry",nn(e))}var an={name:"CircleBufferGeometry",getSchemaFrom:nn,getModelFrom:function(e){return rn||on(e),rn},registerModelTo:function(e){return rn||on(e),e}};
/**
 * @module Schemas/Geometries/CircleGeometry
 * @desc Export the ThreeJs CircleGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:cn}=at;let sn,un;function mn(e){return sn||function(e){const t=e.Schema;sn=new t({})}(e),sn}function dn(e){const t=cn.getModelFrom(e);un=t.discriminator("CircleGeometry",mn(e))}var ln={name:"CircleGeometry",getSchemaFrom:mn,getModelFrom:function(e){return un||dn(e),un},registerModelTo:function(e){return un||dn(e),e}};
/**
 * @module Schemas/Geometries/ConeBufferGeometry
 * @desc Export the ThreeJs ConeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:fn}=Ve;let hn,gn;function pn(e){return hn||function(e){const t=e.Schema;hn=new t({})}(e),hn}function Sn(e){const t=fn.getModelFrom(e);gn=t.discriminator("ConeBufferGeometry",pn(e))}var yn={name:"ConeBufferGeometry",getSchemaFrom:pn,getModelFrom:function(e){return gn||Sn(e),gn},registerModelTo:function(e){return gn||Sn(e),e}};
/**
 * @module Schemas/Geometries/ConeGeometry
 * @desc Export the ThreeJs ConeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Mn}=at;let bn,Tn;function Fn(e){return bn||function(e){const t=e.Schema;bn=new t({})}(e),bn}function wn(e){const t=Mn.getModelFrom(e);Tn=t.discriminator("ConeGeometry",Fn(e))}var vn={name:"ConeGeometry",getSchemaFrom:Fn,getModelFrom:function(e){return Tn||wn(e),Tn},registerModelTo:function(e){return Tn||wn(e),e}};
/**
 * @module Schemas/Geometries/ConvexGeometry
 * @desc Export the ThreeJs ConvexGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:_n}=at;let Nn,Bn;function Cn(e){return Nn||function(e){const t=e.Schema;Nn=new t({})}(e),Nn}function On(e){const t=_n.getModelFrom(e);Bn=t.discriminator("ConvexGeometry",Cn(e))}var Dn={name:"ConvexGeometry",getSchemaFrom:Cn,getModelFrom:function(e){return Bn||On(e),Bn},registerModelTo:function(e){return Bn||On(e),e}};
/**
 * @module Schemas/Geometries/CylinderBufferGeometry
 * @desc Export the ThreeJs CylinderBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:xn}=Ve;let In,An;function En(e){return In||function(e){const t=e.Schema;In=new t({})}(e),In}function Gn(e){const t=xn.getModelFrom(e);An=t.discriminator("CylinderBufferGeometry",En(e))}var Ln={name:"CylinderBufferGeometry",getSchemaFrom:En,getModelFrom:function(e){return An||Gn(e),An},registerModelTo:function(e){return An||Gn(e),e}};
/**
 * @module Schemas/Geometries/CylinderGeometry
 * @desc Export the ThreeJs CylinderGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Pn}=at;let jn,Vn;function $n(e){return jn||function(e){const t=e.Schema;jn=new t({})}(e),jn}function Un(e){const t=Pn.getModelFrom(e);Vn=t.discriminator("CylinderGeometry",$n(e))}var Rn={name:"CylinderGeometry",getSchemaFrom:$n,getModelFrom:function(e){return Vn||Un(e),Vn},registerModelTo:function(e){return Vn||Un(e),e}};
/**
 * @module Schemas/Geometries/DecalGeometry
 * @desc Export the ThreeJs DecalGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:kn}=at;let Hn,zn;function Yn(e){return Hn||function(e){const t=e.Schema;Hn=new t({})}(e),Hn}function Qn(e){const t=kn.getModelFrom(e);zn=t.discriminator("DecalGeometry",Yn(e))}var Wn={name:"DecalGeometry",getSchemaFrom:Yn,getModelFrom:function(e){return zn||Qn(e),zn},registerModelTo:function(e){return zn||Qn(e),e}};
/**
 * @module Schemas/Geometries/DodecahedronGeometry
 * @desc Export the ThreeJs DodecahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Xn}=at;let Zn,Jn;function qn(e){return Zn||function(e){const t=e.Schema;Zn=new t({})}(e),Zn}function Kn(e){const t=Xn.getModelFrom(e);Jn=t.discriminator("DodecahedronGeometry",qn(e))}var eo={name:"DodecahedronGeometry",getSchemaFrom:qn,getModelFrom:function(e){return Jn||Kn(e),Jn},registerModelTo:function(e){return Jn||Kn(e),e}};
/**
 * @module Schemas/Geometries/EdgesGeometry
 * @desc Export the ThreeJs EdgesGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:to}=at;let ro,no;function oo(e){return ro||function(e){const t=e.Schema;ro=new t({})}(e),ro}function ao(e){const t=to.getModelFrom(e);no=t.discriminator("EdgesGeometry",oo(e))}var io={name:"EdgesGeometry",getSchemaFrom:oo,getModelFrom:function(e){return no||ao(e),no},registerModelTo:function(e){return no||ao(e),e}};
/**
 * @module Schemas/Geometries/ExtrudeBufferGeometry
 * @desc Export the ThreeJs ExtrudeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:co}=Ve;let so,uo;function mo(e){return so||function(e){const t=e.Schema;so=new t({})}(e),so}function lo(e){const t=co.getModelFrom(e);uo=t.discriminator("ExtrudeBufferGeometry",mo(e))}var fo={name:"ExtrudeBufferGeometry",getSchemaFrom:mo,getModelFrom:function(e){return uo||lo(e),uo},registerModelTo:function(e){return uo||lo(e),e}};
/**
 * @module Schemas/Geometries/ExtrudeGeometry
 * @desc Export the ThreeJs ExtrudeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ho}=at;let go,po;function So(e){return go||function(e){const t=e.Schema;go=new t({})}(e),go}function yo(e){const t=ho.getModelFrom(e);po=t.discriminator("ExtrudeGeometry",So(e))}var Mo={name:"ExtrudeGeometry",getSchemaFrom:So,getModelFrom:function(e){return po||yo(e),po},registerModelTo:function(e){return po||yo(e),e}};
/**
 * @module Schemas/Geometries/IcosahedronBufferGeometry
 * @desc Export the ThreeJs IcosahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:bo}=Ve;let To,Fo;function wo(e){return To||function(e){const t=e.Schema;To=new t({})}(e),To}function vo(e){const t=bo.getModelFrom(e);Fo=t.discriminator("IcosahedronBufferGeometry",wo(e))}var _o={name:"IcosahedronBufferGeometry",getSchemaFrom:wo,getModelFrom:function(e){return Fo||vo(e),Fo},registerModelTo:function(e){return Fo||vo(e),e}};
/**
 * @module Schemas/Geometries/IcosahedronGeometry
 * @desc Export the ThreeJs IcosahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:No}=at;let Bo,Co;function Oo(e){return Bo||function(e){const t=e.Schema;Bo=new t({})}(e),Bo}function Do(e){const t=No.getModelFrom(e);Co=t.discriminator("IcosahedronGeometry",Oo(e))}var xo={name:"IcosahedronGeometry",getSchemaFrom:Oo,getModelFrom:function(e){return Co||Do(e),Co},registerModelTo:function(e){return Co||Do(e),e}};
/**
 * @module Schemas/Geometries/InstancedBufferGeometry
 * @desc Export the ThreeJs InstancedBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Io}=Ve;let Ao,Eo;function Go(e){return Ao||function(e){const t=e.Schema;Ao=new t({})}(e),Ao}function Lo(e){const t=Io.getModelFrom(e);Eo=t.discriminator("InstancedBufferGeometry",Go(e))}var Po={name:"InstancedBufferGeometry",getSchemaFrom:Go,getModelFrom:function(e){return Eo||Lo(e),Eo},registerModelTo:function(e){return Eo||Lo(e),e}};
/**
 * @module Schemas/Geometries/LatheBufferGeometry
 * @desc Export the ThreeJs LatheBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:jo}=Ve;let Vo,$o;function Uo(e){return Vo||function(e){const t=e.Schema;Vo=new t({})}(e),Vo}function Ro(e){const t=jo.getModelFrom(e);$o=t.discriminator("LatheBufferGeometry",Uo(e))}var ko={name:"LatheBufferGeometry",getSchemaFrom:Uo,getModelFrom:function(e){return $o||Ro(e),$o},registerModelTo:function(e){return $o||Ro(e),e}};
/**
 * @module Schemas/Geometries/LatheGeometry
 * @desc Export the ThreeJs LatheGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ho}=at;let zo,Yo;function Qo(e){return zo||function(e){const t=e.Schema;zo=new t({})}(e),zo}function Wo(e){const t=Ho.getModelFrom(e);Yo=t.discriminator("LatheGeometry",Qo(e))}var Xo={name:"LatheGeometry",getSchemaFrom:Qo,getModelFrom:function(e){return Yo||Wo(e),Yo},registerModelTo:function(e){return Yo||Wo(e),e}};
/**
 * @module Schemas/Geometries/OctahedronBufferGeometry
 * @desc Export the ThreeJs OctahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Zo}=Ve;let Jo,qo;function Ko(e){return Jo||function(e){const t=e.Schema;Jo=new t({})}(e),Jo}function ea(e){const t=Zo.getModelFrom(e);qo=t.discriminator("OctahedronBufferGeometry",Ko(e))}var ta={name:"OctahedronBufferGeometry",getSchemaFrom:Ko,getModelFrom:function(e){return qo||ea(e),qo},registerModelTo:function(e){return qo||ea(e),e}};
/**
 * @module Schemas/Geometries/OctahedronGeometry
 * @desc Export the ThreeJs OctahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ra}=at;let na,oa;function aa(e){return na||function(e){const t=e.Schema;na=new t({})}(e),na}function ia(e){const t=ra.getModelFrom(e);oa=t.discriminator("OctahedronGeometry",aa(e))}var ca={name:"OctahedronGeometry",getSchemaFrom:aa,getModelFrom:function(e){return oa||ia(e),oa},registerModelTo:function(e){return oa||ia(e),e}};
/**
 * @module Schemas/Geometries/ParametricBufferGeometry
 * @desc Export the ThreeJs ParametricBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:sa}=Ve;let ua,ma;function da(e){return ua||function(e){const t=e.Schema;ua=new t({})}(e),ua}function la(e){const t=sa.getModelFrom(e);ma=t.discriminator("ParametricBufferGeometry",da(e))}var fa={name:"ParametricBufferGeometry",getSchemaFrom:da,getModelFrom:function(e){return ma||la(e),ma},registerModelTo:function(e){return ma||la(e),e}};
/**
 * @module Schemas/Geometries/ParametricGeometry
 * @desc Export the ThreeJs ParametricGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ha}=at;let ga,pa;function Sa(e){return ga||function(e){const t=e.Schema;ga=new t({})}(e),ga}function ya(e){const t=ha.getModelFrom(e);pa=t.discriminator("ParametricGeometry",Sa(e))}var Ma={name:"ParametricGeometry",getSchemaFrom:Sa,getModelFrom:function(e){return pa||ya(e),pa},registerModelTo:function(e){return pa||ya(e),e}};
/**
 * @module Schemas/Geometries/PlaneBufferGeometry
 * @desc Export the ThreeJs PlaneBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:ba}=Ve;let Ta,Fa;function wa(e){return Ta||function(e){const t=e.Schema;Ta=new t({})}(e),Ta}function va(e){const t=ba.getModelFrom(e);Fa=t.discriminator("PlaneBufferGeometry",wa(e))}var _a={name:"PlaneBufferGeometry",getSchemaFrom:wa,getModelFrom:function(e){return Fa||va(e),Fa},registerModelTo:function(e){return Fa||va(e),e}};
/**
 * @module Schemas/Geometries/PlaneGeometry
 * @desc Export the ThreeJs PlaneGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Na}=at;let Ba,Ca;function Oa(e){return Ba||function(e){const t=e.Schema;Ba=new t({})}(e),Ba}function Da(e){const t=Na.getModelFrom(e);Ca=t.discriminator("PlaneGeometry",Oa(e))}var xa={name:"PlaneGeometry",getSchemaFrom:Oa,getModelFrom:function(e){return Ca||Da(e),Ca},registerModelTo:function(e){return Ca||Da(e),e}};
/**
 * @module Schemas/Geometries/PolyhedronBufferGeometry
 * @desc Export the ThreeJs PolyhedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ia}=Ve;let Aa,Ea;function Ga(e){return Aa||function(e){const t=e.Schema;Aa=new t({})}(e),Aa}function La(e){const t=Ia.getModelFrom(e);Ea=t.discriminator("PolyhedronBufferGeometry",Ga(e))}var Pa={name:"PolyhedronBufferGeometry",getSchemaFrom:Ga,getModelFrom:function(e){return Ea||La(e),Ea},registerModelTo:function(e){return Ea||La(e),e}};
/**
 * @module Schemas/Geometries/PolyhedronGeometry
 * @desc Export the ThreeJs PolyhedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ja}=at;let Va,$a;function Ua(e){return Va||function(e){const t=e.Schema;Va=new t({})}(e),Va}function Ra(e){const t=ja.getModelFrom(e);$a=t.discriminator("PolyhedronGeometry",Ua(e))}var ka={name:"PolyhedronGeometry",getSchemaFrom:Ua,getModelFrom:function(e){return $a||Ra(e),$a},registerModelTo:function(e){return $a||Ra(e),e}};
/**
 * @module Schemas/Geometries/RingBufferGeometry
 * @desc Export the ThreeJs RingBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ha}=Ve;let za,Ya;function Qa(e){return za||function(e){const t=e.Schema;za=new t({})}(e),za}function Wa(e){const t=Ha.getModelFrom(e);Ya=t.discriminator("RingBufferGeometry",Qa(e))}var Xa={name:"RingBufferGeometry",getSchemaFrom:Qa,getModelFrom:function(e){return Ya||Wa(e),Ya},registerModelTo:function(e){return Ya||Wa(e),e}};
/**
 * @module Schemas/Geometries/RingGeometry
 * @desc Export the ThreeJs RingGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Za}=at;let Ja,qa;function Ka(e){return Ja||function(e){const t=e.Schema;Ja=new t({})}(e),Ja}function ei(e){const t=Za.getModelFrom(e);qa=t.discriminator("RingGeometry",Ka(e))}var ti={name:"RingGeometry",getSchemaFrom:Ka,getModelFrom:function(e){return qa||ei(e),qa},registerModelTo:function(e){return qa||ei(e),e}};
/**
 * @module Schemas/Geometries/ShapeBufferGeometry
 * @desc Export the ThreeJs ShapeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:ri}=Ve;let ni,oi;function ai(e){return ni||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),o=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1}),a=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[o]},{id:!1,_id:!1});ni=new t({shapes:[a],curveSegments:Number})}(e),ni}function ii(e){const t=ri.getModelFrom(e);oi=t.discriminator("ShapeBufferGeometry",ai(e))}var ci={name:"ShapeBufferGeometry",getSchemaFrom:ai,getModelFrom:function(e){return oi||ii(e),oi},registerModelTo:function(e){return oi||ii(e),e}};
/**
 * @module Schemas/Geometries/ShapeGeometry
 * @desc Export the ThreeJs ShapeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:si}=at;let ui,mi;function di(e){return ui||function(e){const t=e.Schema;ui=new t({})}(e),ui}function li(e){const t=si.getModelFrom(e);mi=t.discriminator("ShapeGeometry",di(e))}var fi={name:"ShapeGeometry",getSchemaFrom:di,getModelFrom:function(e){return mi||li(e),mi},registerModelTo:function(e){return mi||li(e),e}};
/**
 * @module Schemas/Geometries/SphereBufferGeometry
 * @desc Export the ThreeJs SphereBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:hi}=Ve;let gi,pi;function Si(e){return gi||function(e){const t=e.Schema;gi=new t({})}(e),gi}function yi(e){const t=hi.getModelFrom(e);pi=t.discriminator("SphereBufferGeometry",Si(e))}var Mi={name:"SphereBufferGeometry",getSchemaFrom:Si,getModelFrom:function(e){return pi||yi(e),pi},registerModelTo:function(e){return pi||yi(e),e}};
/**
 * @module Schemas/Geometries/SphereGeometry
 * @desc Export the ThreeJs SphereGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:bi}=at;let Ti,Fi;function wi(e){return Ti||function(e){const t=e.Schema;Ti=new t({})}(e),Ti}function vi(e){const t=bi.getModelFrom(e);Fi=t.discriminator("SphereGeometry",wi(e))}var _i={name:"SphereGeometry",getSchemaFrom:wi,getModelFrom:function(e){return Fi||vi(e),Fi},registerModelTo:function(e){return Fi||vi(e),e}};
/**
 * @module Schemas/Geometries/TeapotBufferGeometry
 * @desc Export the ThreeJs TeapotBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ni}=Ve;let Bi,Ci;function Oi(e){return Bi||function(e){const t=e.Schema;Bi=new t({})}(e),Bi}function Di(e){const t=Ni.getModelFrom(e);Ci=t.discriminator("TeapotBufferGeometry",Oi(e))}var xi={name:"TeapotBufferGeometry",getSchemaFrom:Oi,getModelFrom:function(e){return Ci||Di(e),Ci},registerModelTo:function(e){return Ci||Di(e),e}};
/**
 * @module Schemas/Geometries/TetrahedronBufferGeometry
 * @desc Export the ThreeJs TetrahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ii}=Ve;let Ai,Ei;function Gi(e){return Ai||function(e){const t=e.Schema;Ai=new t({})}(e),Ai}function Li(e){const t=Ii.getModelFrom(e);Ei=t.discriminator("TetrahedronBufferGeometry",Gi(e))}var Pi={name:"TetrahedronBufferGeometry",getSchemaFrom:Gi,getModelFrom:function(e){return Ei||Li(e),Ei},registerModelTo:function(e){return Ei||Li(e),e}};
/**
 * @module Schemas/Geometries/TetrahedronGeometry
 * @desc Export the ThreeJs TetrahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ji}=at;let Vi,$i;function Ui(e){return Vi||function(e){const t=e.Schema;Vi=new t({})}(e),Vi}function Ri(e){const t=ji.getModelFrom(e);$i=t.discriminator("TetrahedronGeometry",Ui(e))}var ki={name:"TetrahedronGeometry",getSchemaFrom:Ui,getModelFrom:function(e){return $i||Ri(e),$i},registerModelTo:function(e){return $i||Ri(e),e}};
/**
 * @module Schemas/Geometries/TextBufferGeometry
 * @desc Export the ThreeJs TextBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Hi}=Ve;let zi,Yi;function Qi(e){return zi||function(e){const t=e.Schema;zi=new t({})}(e),zi}function Wi(e){const t=Hi.getModelFrom(e);Yi=t.discriminator("TextBufferGeometry",Qi(e))}var Xi={name:"TextBufferGeometry",getSchemaFrom:Qi,getModelFrom:function(e){return Yi||Wi(e),Yi},registerModelTo:function(e){return Yi||Wi(e),e}};
/**
 * @module Schemas/Geometries/TextGeometry
 * @desc Export the ThreeJs TextGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Zi}=at;let Ji,qi;function Ki(e){return Ji||function(e){const t=e.Schema;Ji=new t({})}(e),Ji}function ec(e){const t=Zi.getModelFrom(e);qi=t.discriminator("TextGeometry",Ki(e))}var tc={name:"TextGeometry",getSchemaFrom:Ki,getModelFrom:function(e){return qi||ec(e),qi},registerModelTo:function(e){return qi||ec(e),e}};
/**
 * @module Schemas/Geometries/TorusBufferGeometry
 * @desc Export the ThreeJs TorusBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:rc}=Ve;let nc,oc;function ac(e){return nc||function(e){const t=e.Schema;nc=new t({})}(e),nc}function ic(e){const t=rc.getModelFrom(e);oc=t.discriminator("TorusBufferGeometry",ac(e))}var cc={name:"TorusBufferGeometry",getSchemaFrom:ac,getModelFrom:function(e){return oc||ic(e),oc},registerModelTo:function(e){return oc||ic(e),e}};
/**
 * @module Schemas/Geometries/TorusGeometry
 * @desc Export the ThreeJs TorusGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:sc}=at;let uc,mc;function dc(e){return uc||function(e){const t=e.Schema;uc=new t({})}(e),uc}function lc(e){const t=sc.getModelFrom(e);mc=t.discriminator("TorusGeometry",dc(e))}var fc={name:"TorusGeometry",getSchemaFrom:dc,getModelFrom:function(e){return mc||lc(e),mc},registerModelTo:function(e){return mc||lc(e),e}};
/**
 * @module Schemas/Geometries/TorusKnotBufferGeometry
 * @desc Export the ThreeJs TorusKnotBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:hc}=Ve;let gc,pc;function Sc(e){return gc||function(e){const t=e.Schema;gc=new t({})}(e),gc}function yc(e){const t=hc.getModelFrom(e);pc=t.discriminator("TorusKnotBufferGeometry",Sc(e))}var Mc={name:"TorusKnotBufferGeometry",getSchemaFrom:Sc,getModelFrom:function(e){return pc||yc(e),pc},registerModelTo:function(e){return pc||yc(e),e}};
/**
 * @module Schemas/Geometries/TorusKnotGeometry
 * @desc Export the ThreeJs TorusKnotGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:bc}=at;let Tc,Fc;function wc(e){return Tc||function(e){const t=e.Schema;Tc=new t({})}(e),Tc}function vc(e){const t=bc.getModelFrom(e);Fc=t.discriminator("TorusKnotGeometry",wc(e))}var _c={name:"TorusKnotGeometry",getSchemaFrom:wc,getModelFrom:function(e){return Fc||vc(e),Fc},registerModelTo:function(e){return Fc||vc(e),e}};
/**
 * @module Schemas/Geometries/TubeBufferGeometry
 * @desc Export the ThreeJs TubeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Nc}=Ve;let Bc,Cc;function Oc(e){return Bc||function(e){const t=e.Schema;Bc=new t({})}(e),Bc}function Dc(e){const t=Nc.getModelFrom(e);Cc=t.discriminator("TubeBufferGeometry",Oc(e))}var xc={name:"TubeBufferGeometry",getSchemaFrom:Oc,getModelFrom:function(e){return Cc||Dc(e),Cc},registerModelTo:function(e){return Cc||Dc(e),e}};
/**
 * @module Schemas/Geometries/TubeGeometry
 * @desc Export the ThreeJs TubeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ic}=at;let Ac,Ec;function Gc(e){return Ac||function(e){const t=e.Schema;Ac=new t({})}(e),Ac}function Lc(e){const t=Ic.getModelFrom(e);Ec=t.discriminator("TubeGeometry",Gc(e))}var Pc={name:"TubeGeometry",getSchemaFrom:Gc,getModelFrom:function(e){return Ec||Lc(e),Ec},registerModelTo:function(e){return Ec||Lc(e),e}};
/**
 * @module Schemas/Geometries/WireframeGeometry
 * @desc Export the ThreeJs WireframeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:jc}=at;let Vc,$c;function Uc(e){return Vc||function(e){const t=e.Schema;Vc=new t({})}(e),Vc}function Rc(e){const t=jc.getModelFrom(e);$c=t.discriminator("WireframeGeometry",Uc(e))}var kc={name:"WireframeGeometry",getSchemaFrom:Uc,getModelFrom:function(e){return $c||Rc(e),$c},registerModelTo:function(e){return $c||Rc(e),e}};
/**
 * @module Schemas/Helpers/ArrowHelper
 * @desc Export the ThreeJs ArrowHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Hc}=N;let zc,Yc;function Qc(e){return zc||function(e){const t=e.Schema;zc=new t({})}(e),zc}function Wc(e){const t=Hc.getModelFrom(e);Yc=t.discriminator("ArrowHelper",Qc(e))}var Xc={name:"ArrowHelper",getSchemaFrom:Qc,getModelFrom:function(e){return Yc||Wc(e),Yc},registerModelTo:function(e){return Yc||Wc(e),e}};
/**
 * @module Schemas/Helpers/AxesHelper
 * @desc Export the ThreeJs AxesHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Zc}=N;let Jc,qc;function Kc(e){return Jc||function(e){const t=e.Schema;Jc=new t({})}(e),Jc}function es(e){const t=Zc.getModelFrom(e);qc=t.discriminator("AxesHelper",Kc(e))}var ts={name:"AxesHelper",getSchemaFrom:Kc,getModelFrom:function(e){return qc||es(e),qc},registerModelTo:function(e){return qc||es(e),e}};
/**
 * @module Schemas/Helpers/Box3Helper
 * @desc Export the ThreeJs Box3Helper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:rs}=N;let ns,os;function as(e){return ns||function(e){const t=e.Schema;ns=new t({})}(e),ns}function is(e){const t=rs.getModelFrom(e);os=t.discriminator("Box3Helper",as(e))}var cs={name:"Box3Helper",getSchemaFrom:as,getModelFrom:function(e){return os||is(e),os},registerModelTo:function(e){return os||is(e),e}};
/**
 * @module Schemas/Helpers/BoxHelper
 * @desc Export the ThreeJs BoxHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ss}=N;let us,ms;function ds(e){return us||function(e){const t=e.Schema;us=new t({})}(e),us}function ls(e){const t=ss.getModelFrom(e);ms=t.discriminator("BoxHelper",ds(e))}var fs={name:"BoxHelper",getSchemaFrom:ds,getModelFrom:function(e){return ms||ls(e),ms},registerModelTo:function(e){return ms||ls(e),e}};
/**
 * @module Schemas/Helpers/CameraHelper
 * @desc Export the ThreeJs CameraHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:hs}=N;let gs,ps;function Ss(e){return gs||function(e){const t=e.Schema;gs=new t({})}(e),gs}function ys(e){const t=hs.getModelFrom(e);ps=t.discriminator("CameraHelper",Ss(e))}var Ms={name:"CameraHelper",getSchemaFrom:Ss,getModelFrom:function(e){return ps||ys(e),ps},registerModelTo:function(e){return ps||ys(e),e}};
/**
 * @module Schemas/Helpers/DirectionalLightHelper
 * @desc Export the ThreeJs DirectionalLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:bs}=N;let Ts,Fs;function ws(e){return Ts||function(e){const t=e.Schema;Ts=new t({})}(e),Ts}function vs(e){const t=bs.getModelFrom(e);Fs=t.discriminator("DirectionalLightHelper",ws(e))}var _s={name:"DirectionalLightHelper",getSchemaFrom:ws,getModelFrom:function(e){return Fs||vs(e),Fs},registerModelTo:function(e){return Fs||vs(e),e}};
/**
 * @module Schemas/Helpers/FaceNormalsHelper
 * @desc Export the ThreeJs FaceNormalsHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ns}=N;let Bs,Cs;function Os(e){return Bs||function(e){const t=e.Schema;Bs=new t({})}(e),Bs}function Ds(e){const t=Ns.getModelFrom(e);Cs=t.discriminator("FaceNormalsHelper",Os(e))}var xs={name:"FaceNormalsHelper",getSchemaFrom:Os,getModelFrom:function(e){return Cs||Ds(e),Cs},registerModelTo:function(e){return Cs||Ds(e),e}};
/**
 * @module Schemas/Helpers/GridHelper
 * @desc Export the ThreeJs GridHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Is}=N;let As,Es;function Gs(e){return As||function(e){const t=e.Schema;As=new t({})}(e),As}function Ls(e){const t=Is.getModelFrom(e);Es=t.discriminator("GridHelper",Gs(e))}var Ps={name:"GridHelper",getSchemaFrom:Gs,getModelFrom:function(e){return Es||Ls(e),Es},registerModelTo:function(e){return Es||Ls(e),e}};
/**
 * @module Schemas/Helpers/HemisphereLightHelper
 * @desc Export the ThreeJs HemisphereLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:js}=N;let Vs,$s;function Us(e){return Vs||function(e){const t=e.Schema;Vs=new t({})}(e),Vs}function Rs(e){const t=js.getModelFrom(e);$s=t.discriminator("HemisphereLightHelper",Us(e))}var ks={name:"HemisphereLightHelper",getSchemaFrom:Us,getModelFrom:function(e){return $s||Rs(e),$s},registerModelTo:function(e){return $s||Rs(e),e}};
/**
 * @module Schemas/Helpers/PlaneHelper
 * @desc Export the ThreeJs PlaneHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Hs}=N;let zs,Ys;function Qs(e){return zs||function(e){const t=e.Schema;zs=new t({})}(e),zs}function Ws(e){const t=Hs.getModelFrom(e);Ys=t.discriminator("PlaneHelper",Qs(e))}var Xs={name:"PlaneHelper",getSchemaFrom:Qs,getModelFrom:function(e){return Ys||Ws(e),Ys},registerModelTo:function(e){return Ys||Ws(e),e}};
/**
 * @module Schemas/Helpers/PointLightHelper
 * @desc Export the ThreeJs PointLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Zs}=N;let Js,qs;function Ks(e){return Js||function(e){const t=e.Schema;Js=new t({})}(e),Js}function eu(e){const t=Zs.getModelFrom(e);qs=t.discriminator("PointLightHelper",Ks(e))}var tu={name:"PointLightHelper",getSchemaFrom:Ks,getModelFrom:function(e){return qs||eu(e),qs},registerModelTo:function(e){return qs||eu(e),e}};
/**
 * @module Schemas/Helpers/PolarGridHelper
 * @desc Export the ThreeJs PolarGridHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ru}=N;let nu,ou;function au(e){return nu||function(e){const t=e.Schema;nu=new t({})}(e),nu}function iu(e){const t=ru.getModelFrom(e);ou=t.discriminator("PolarGridHelper",au(e))}var cu={name:"PolarGridHelper",getSchemaFrom:au,getModelFrom:function(e){return ou||iu(e),ou},registerModelTo:function(e){return ou||iu(e),e}};
/**
 * @module Schemas/Helpers/RectAreaLightHelper
 * @desc Export the ThreeJs RectAreaLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:su}=N;let uu,mu;function du(e){return uu||function(e){const t=e.Schema;uu=new t({})}(e),uu}function lu(e){const t=su.getModelFrom(e);mu=t.discriminator("RectAreaLightHelper",du(e))}var fu={name:"RectAreaLightHelper",getSchemaFrom:du,getModelFrom:function(e){return mu||lu(e),mu},registerModelTo:function(e){return mu||lu(e),e}};
/**
 * @module Schemas/Helpers/SkeletonHelper
 * @desc Export the ThreeJs SkeletonHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:hu}=N;let gu,pu;function Su(e){return gu||function(e){const t=e.Schema;gu=new t({})}(e),gu}function yu(e){const t=hu.getModelFrom(e);pu=t.discriminator("SkeletonHelper",Su(e))}var Mu={name:"SkeletonHelper",getSchemaFrom:Su,getModelFrom:function(e){return pu||yu(e),pu},registerModelTo:function(e){return pu||yu(e),e}};
/**
 * @module Schemas/Helpers/SpotLightHelper
 * @desc Export the ThreeJs SpotLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:bu}=N;let Tu,Fu;function wu(e){return Tu||function(e){const t=e.Schema;Tu=new t({})}(e),Tu}function vu(e){const t=bu.getModelFrom(e);Fu=t.discriminator("SpotLightHelper",wu(e))}var _u={name:"SpotLightHelper",getSchemaFrom:wu,getModelFrom:function(e){return Fu||vu(e),Fu},registerModelTo:function(e){return Fu||vu(e),e}};
/**
 * @module Schemas/Helpers/VertexNormalsHelper
 * @desc Export the ThreeJs VertexNormalsHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Nu}=N;let Bu,Cu;function Ou(e){return Bu||function(e){const t=e.Schema;Bu=new t({})}(e),Bu}function Du(e){const t=Nu.getModelFrom(e);Cu=t.discriminator("VertexNormalsHelper",Ou(e))}var xu={name:"VertexNormalsHelper",getSchemaFrom:Ou,getModelFrom:function(e){return Cu||Du(e),Cu},registerModelTo:function(e){return Cu||Du(e),e}};
/**
 * @module Schemas/Lights/AmbientLight
 * @desc Export the ThreeJs AmbientLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Iu}=N;let Au,Eu;function Gu(e){return Au||function(e){const t=e.Schema;Au=new t({})}(e),Au}function Lu(e){const t=Iu.getModelFrom(e);Eu=t.discriminator("AmbientLight",Gu(e))}var Pu={name:"AmbientLight",getSchemaFrom:Gu,getModelFrom:function(e){return Eu||Lu(e),Eu},registerModelTo:function(e){return Eu||Lu(e),e}};
/**
 * @module Schemas/Lights/DirectionalLight
 * @desc Export the ThreeJs DirectionalLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ju}=N;let Vu,$u;function Uu(e){return Vu||function(e){const t=e.Schema;Vu=new t({})}(e),Vu}function Ru(e){const t=ju.getModelFrom(e);$u=t.discriminator("DirectionalLight",Uu(e))}var ku={name:"DirectionalLight",getSchemaFrom:Uu,getModelFrom:function(e){return $u||Ru(e),$u},registerModelTo:function(e){return $u||Ru(e),e}};
/**
 * @module Schemas/Lights/HemisphereLight
 * @desc Export the ThreeJs HemisphereLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Hu}=N;let zu,Yu;function Qu(e){return zu||function(e){const t=e.Schema;zu=new t({})}(e),zu}function Wu(e){const t=Hu.getModelFrom(e);Yu=t.discriminator("HemisphereLight",Qu(e))}var Xu={name:"HemisphereLight",getSchemaFrom:Qu,getModelFrom:function(e){return Yu||Wu(e),Yu},registerModelTo:function(e){return Yu||Wu(e),e}};
/**
 * @module Schemas/Lights/Light
 * @desc Export the ThreeJs Light Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Zu}=N;let Ju,qu;function Ku(e){return Ju||function(e){const t=e.Schema;Ju=new t({})}(e),Ju}function em(e){const t=Zu.getModelFrom(e);qu=t.discriminator("Light",Ku(e))}var tm={name:"Light",getSchemaFrom:Ku,getModelFrom:function(e){return qu||em(e),qu},registerModelTo:function(e){return qu||em(e),e}};
/**
 * @module Schemas/Lights/PointLight
 * @desc Export the ThreeJs PointLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:rm}=N;let nm,om;function am(e){return nm||function(e){const t=e.Schema;nm=new t({})}(e),nm}function im(e){const t=rm.getModelFrom(e);om=t.discriminator("PointLight",am(e))}var cm={name:"PointLight",getSchemaFrom:am,getModelFrom:function(e){return om||im(e),om},registerModelTo:function(e){return om||im(e),e}};
/**
 * @module Schemas/Lights/RectAreaLight
 * @desc Export the ThreeJs RectAreaLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:sm}=N;let um,mm;function dm(e){return um||function(e){const t=e.Schema;um=new t({})}(e),um}function lm(e){const t=sm.getModelFrom(e);mm=t.discriminator("RectAreaLight",dm(e))}var fm={name:"RectAreaLight",getSchemaFrom:dm,getModelFrom:function(e){return mm||lm(e),mm},registerModelTo:function(e){return mm||lm(e),e}};
/**
 * @module Schemas/Lights/SpotLight
 * @desc Export the ThreeJs SpotLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:hm}=N;let gm,pm;function Sm(e){return gm||function(e){const t=e.Schema;gm=new t({})}(e),gm}function ym(e){const t=hm.getModelFrom(e);pm=t.discriminator("SpotLight",Sm(e))}var Mm={name:"SpotLight",getSchemaFrom:Sm,getModelFrom:function(e){return pm||ym(e),pm},registerModelTo:function(e){return pm||ym(e),e}};
/**
 * @module Schemas/Materials/Material
 * @desc Export the ThreeJs Material Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let bm,Tm;function Fm(e){return bm||function(e){const t=e.Schema,r=t.Types.Mixed;bm=new t({uuid:String,name:String,type:String,fog:Boolean,lights:Boolean,blending:Number,side:Number,flatShading:Boolean,vertexColors:Number,opacity:Number,transparent:Boolean,blendSrc:Number,blendDst:Number,blendEquation:Number,blendSrcAlpha:String,blendDstAlpha:String,blendEquationAlpha:String,depthFunc:Number,depthTest:Boolean,depthWrite:Boolean,clippingPlanes:r,clipIntersection:Boolean,clipShadows:Boolean,colorWrite:Boolean,precision:Number,polygonOffset:Boolean,polygonOffsetFactor:Number,polygonOffsetUnits:Number,dithering:Boolean,alphaTest:Number,premultipliedAlpha:Boolean,overdraw:Number,visible:Boolean,userData:r,needsUpdate:Boolean},{collection:"materials",discriminatorKey:"type"})}(e),bm}function wm(e){Tm=e.model("Materials",Fm(e)),Tm.discriminator("Material",new e.Schema({}))}var vm={name:"Material",getSchemaFrom:Fm,getModelFrom:function(e){return Tm||wm(e),Tm},registerModelTo:function(e){return Tm||wm(e),e}},_m={Material:vm};
/**
 * @module Schemas/Materials/LineBasicMaterial
 * @desc Export the ThreeJs LineBasicMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Material:Nm}=_m;let Bm,Cm;function Om(e){return Bm||function(e){const t=e.Schema,r=t.Types.Color;Bm=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String})}(e),Bm}function Dm(e){const t=Nm.getModelFrom(e);Cm=t.discriminator("LineBasicMaterial",Om(e))}var xm={name:"LineBasicMaterial",getSchemaFrom:Om,getModelFrom:function(e){return Cm||Dm(e),Cm},registerModelTo:function(e){return Cm||Dm(e),e}};
/**
 * @module Schemas/Materials/LineDashedMaterial
 * @desc Export the ThreeJs LineDashedMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Im}=_m;let Am,Em;function Gm(e){return Am||function(e){const t=e.Schema,r=t.Types.Color;Am=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String,dashSize:Number,gapSize:Number,scale:Number})}(e),Am}function Lm(e){const t=Im.getModelFrom(e);Em=t.discriminator("LineDashedMaterial",Gm(e))}var Pm={name:"LineDashedMaterial",getSchemaFrom:Gm,getModelFrom:function(e){return Em||Lm(e),Em},registerModelTo:function(e){return Em||Lm(e),e}};
/**
 * @module Schemas/Materials/MeshBasicMaterial
 * @desc Export the ThreeJs MeshBasicMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:jm}=_m;let Vm,$m;function Um(e){return Vm||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color;Vm=new t({color:o,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,light:Boolean})}(e),Vm}function Rm(e){const t=jm.getModelFrom(e);$m=t.discriminator("MeshBasicMaterial",Um(e))}var km={name:"MeshBasicMaterial",getSchemaFrom:Um,getModelFrom:function(e){return $m||Rm(e),$m},registerModelTo:function(e){return $m||Rm(e),e}};
/**
 * @module Schemas/Materials/MeshDepthMaterial
 * @desc Export the ThreeJs MeshDepthMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Hm}=_m;let zm,Ym;function Qm(e){return zm||function(e){const t=e.Schema,r=t.Types.Mixed;zm=new t({depthPacking:Number,skinning:Boolean,morphTargets:Boolean,map:r,alphaMap:r,displacementMap:r,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean})}(e),zm}function Wm(e){const t=Hm.getModelFrom(e);Ym=t.discriminator("MeshDepthMaterial",Qm(e))}var Xm={name:"MeshDepthMaterial",getSchemaFrom:Qm,getModelFrom:function(e){return Ym||Wm(e),Ym},registerModelTo:function(e){return Ym||Wm(e),e}};
/**
 * @module Schemas/Materials/MeshLambertMaterial
 * @desc Export the ThreeJs MeshLambertMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Zm}=_m;let Jm,qm;function Km(e){return Jm||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;Jm=new t({color:n,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,emissive:n,emissiveIntensity:Number,emissiveMap:o,specularMap:o,alphaMap:o,envMap:o,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),Jm}function ed(e){const t=Zm.getModelFrom(e);qm=t.discriminator("MeshLambertMaterial",Km(e))}var td={name:"MeshLambertMaterial",getSchemaFrom:Km,getModelFrom:function(e){return qm||ed(e),qm},registerModelTo:function(e){return qm||ed(e),e}};
/**
 * @module Schemas/Materials/MeshNormalMaterial
 * @desc Export the ThreeJs MeshNormalMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:rd}=_m;let nd,od;function ad(e){return nd||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Vector2;nd=new t({bumpMap:n,bumpScale:Number,normalMap:n,normalScale:o,displacementMap:n,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),nd}function id(e){const t=rd.getModelFrom(e);od=t.discriminator("MeshNormalMaterial",ad(e))}var cd={name:"MeshNormalMaterial",getSchemaFrom:ad,getModelFrom:function(e){return od||id(e),od},registerModelTo:function(e){return od||id(e),e}};
/**
 * @module Schemas/Materials/MeshPhongMaterial
 * @desc Export the ThreeJs MeshPhongMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:sd}=_m;let ud,md;function dd(e){return ud||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,a=r.Vector2;ud=new t({color:o,specular:o,shininess:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:a,displacementMap:n,displacementScale:Number,displacementBias:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),ud}function ld(e){const t=sd.getModelFrom(e);md=t.discriminator("MeshPhongMaterial",dd(e))}var fd={name:"MeshPhongMaterial",getSchemaFrom:dd,getModelFrom:function(e){return md||ld(e),md},registerModelTo:function(e){return md||ld(e),e}};
/**
 * @module Schemas/Materials/MeshPhysicalMaterial
 * @desc Export the ThreeJs MeshPhysicalMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:hd}=_m;let gd,pd;function Sd(e){return gd||function(e){const t=e.Schema;gd=new t({reflectivity:Number,clearCoat:Number,clearCoatRoughness:Number})}(e),gd}function yd(e){const t=hd.getModelFrom(e);pd=t.discriminator("MeshPhysicalMaterial",Sd(e))}var Md={name:"MeshPhysicalMaterial",getSchemaFrom:Sd,getModelFrom:function(e){return pd||yd(e),pd},registerModelTo:function(e){return pd||yd(e),e}};
/**
 * @module Schemas/Materials/MeshStandardMaterial
 * @desc Export the ThreeJs MeshStandardMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:bd}=_m;let Td,Fd;function wd(e){return Td||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,a=r.Vector2;Td=new t({color:o,roughness:Number,metalness:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:a,displacementMap:n,displacementScale:Number,displacementBias:Number,roughnessMap:n,metalnessMap:n,alphaMap:n,envMap:n,envMapIntensity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),Td}function vd(e){const t=bd.getModelFrom(e);Fd=t.discriminator("MeshStandardMaterial",wd(e))}var _d={name:"MeshStandardMaterial",getSchemaFrom:wd,getModelFrom:function(e){return Fd||vd(e),Fd},registerModelTo:function(e){return Fd||vd(e),e}};
/**
 * @module Schemas/Materials/MeshToonMaterial
 * @desc Export the ThreeJs MeshToonMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Nd}=_m;let Bd,Cd;function Od(e){return Bd||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,a=r.Vector2;Bd=new t({color:o,specular:o,shininess:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:a,displacementMap:n,displacementScale:Number,displacementBias:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,gradientMap:n})}(e),Bd}function Dd(e){const t=Nd.getModelFrom(e);Cd=t.discriminator("MeshToonMaterial",Od(e))}var xd={name:"MeshToonMaterial",getSchemaFrom:Od,getModelFrom:function(e){return Cd||Dd(e),Cd},registerModelTo:function(e){return Cd||Dd(e),e}};
/**
 * @module Schemas/Materials/PointsMaterial
 * @desc Export the ThreeJs PointsMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Id}=_m;let Ad,Ed;function Gd(e){return Ad||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;Ad=new t({color:n,map:o,size:Number,sizeAttenuation:Boolean,lights:Boolean})}(e),Ad}function Ld(e){const t=Id.getModelFrom(e);Ed=t.discriminator("PointsMaterial",Gd(e))}var Pd={name:"PointsMaterial",getSchemaFrom:Gd,getModelFrom:function(e){return Ed||Ld(e),Ed},registerModelTo:function(e){return Ed||Ld(e),e}};
/**
 * @module Schemas/Materials/RawShaderMaterial
 * @desc Export the ThreeJs RawShaderMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:jd}=_m;let Vd,$d;function Ud(e){return Vd||function(e){const t=e.Schema,r=t.Types.Mixed;Vd=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),Vd}function Rd(e){const t=jd.getModelFrom(e);$d=t.discriminator("RawShaderMaterial",Ud(e))}var kd={name:"RawShaderMaterial",getSchemaFrom:Ud,getModelFrom:function(e){return $d||Rd(e),$d},registerModelTo:function(e){return $d||Rd(e),e}};
/**
 * @module Schemas/Materials/ShaderMaterial
 * @desc Export the ThreeJs ShaderMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Hd}=_m;let zd,Yd;function Qd(e){return zd||function(e){const t=e.Schema,r=t.Types.Mixed;zd=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),zd}function Wd(e){const t=Hd.getModelFrom(e);Yd=t.discriminator("ShaderMaterial",Qd(e))}var Xd={name:"ShaderMaterial",getSchemaFrom:Qd,getModelFrom:function(e){return Yd||Wd(e),Yd},registerModelTo:function(e){return Yd||Wd(e),e}};
/**
 * @module Schemas/Materials/ShadowMaterial
 * @desc Export the ThreeJs ShadowMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Zd}=_m;let Jd,qd;function Kd(e){return Jd||function(e){const t=e.Schema,r=t.Types.Color;Jd=new t({color:r,opacity:Number,lights:Boolean,transparent:Boolean})}(e),Jd}function el(e){const t=Zd.getModelFrom(e);qd=t.discriminator("ShadowMaterial",Kd(e))}var tl={name:"ShadowMaterial",getSchemaFrom:Kd,getModelFrom:function(e){return qd||el(e),qd},registerModelTo:function(e){return qd||el(e),e}};
/**
 * @module Schemas/Materials/SpriteMaterial
 * @desc Export the ThreeJs SpriteMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:rl}=_m;let nl,ol;function al(e){return nl||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;nl=new t({color:n,map:o,rotation:Number,fog:Boolean,lights:Boolean})}(e),nl}function il(e){const t=rl.getModelFrom(e);ol=t.discriminator("SpriteMaterial",al(e))}var cl={name:"SpriteMaterial",getSchemaFrom:al,getModelFrom:function(e){return ol||il(e),ol},registerModelTo:function(e){return ol||il(e),e}};
/**
 * @module Schemas/Math/Box2
 * @desc Export the ThreeJs Box2 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let sl;var ul={name:"Box2",getSchemaFrom:function(e){return sl||function(e){const t=e.Schema,r=t.Types.Vector2;sl=new t({min:r,max:r},{_id:!1,id:!1})}(e),sl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Box3
 * @desc Export the ThreeJs Box3 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let ml;var dl={name:"Box3",getSchemaFrom:function(e){return ml||function(e){const t=e.Schema,r=t.Types.Vector3;ml=new t({min:r,max:r},{_id:!1,id:!1})}(e),ml},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Line3
 * @desc Export the ThreeJs Line3 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let ll;var fl={name:"Line3",getSchemaFrom:function(e){return ll||function(e){const t=e.Schema,r=t.Types.Vector3;ll=new t({start:r,end:r},{_id:!1,id:!1})}(e),ll},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Plane
 * @desc Export the ThreeJs Plane Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let hl;var gl={name:"Plane",getSchemaFrom:function(e){return hl||function(e){const t=e.Schema,r=t.Types.Vector3;hl=new t({normal:r,constant:Number},{_id:!1,id:!1})}(e),hl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Ray
 * @desc Export the ThreeJs Ray Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let pl;var Sl={name:"Ray",getSchemaFrom:function(e){return pl||function(e){const t=e.Schema,r=t.Types.Vector3;pl=new t({origin:r,direction:r},{_id:!1,id:!1})}(e),pl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Sphere
 * @desc Export the ThreeJs Sphere Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let yl;var Ml={name:"Sphere",getSchemaFrom:function(e){return yl||function(e){const t=e.Schema,r=t.Types.Vector3;yl=new t({center:r,radius:Number},{_id:!1,id:!1})}(e),yl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Spherical
 * @desc Export the ThreeJs Spherical Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let bl;var Tl={name:"Spherical",getSchemaFrom:function(e){return bl||function(e){const t=e.Schema;bl=new t({radius:Number,phi:Number,theta:Number},{_id:!1,id:!1})}(e),bl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Triangle
 * @desc Export the ThreeJs Triangle Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Fl;var wl={name:"Triangle",getSchemaFrom:function(e){return Fl||function(e){const t=e.Schema,r=t.Types.Vector3;Fl=new t({a:r,b:r,c:r},{_id:!1,id:!1})}(e),Fl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Objects/Bone
 * @desc Export the ThreeJs Bone Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:vl}=N;let _l,Nl;function Bl(e){return _l||function(e){const t=e.Schema;_l=new t({})}(e),_l}function Cl(e){const t=vl.getModelFrom(e);Nl=t.discriminator("Bone",Bl(e))}var Ol={name:"Bone",getSchemaFrom:Bl,getModelFrom:function(e){return Nl||Cl(e),Nl},registerModelTo:function(e){return Nl||Cl(e),e}};
/**
 * @module Schemas/Objects/Group
 * @desc Export the ThreeJs Group Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Dl,xl;function Il(e){return Dl||function(e){const t=e.Schema;Dl=new t({})}(e),Dl}function Al(e){const t=_.getModelFrom(e);xl=t.discriminator("Group",Il(e))}const El={name:"Group",getSchemaFrom:Il,getModelFrom:function(e){return xl||Al(e),xl},registerModelTo:function(e){return xl||Al(e),e}},{Object3D:Gl}=N;
/**
 * @module Schemas/Objects/ImmediateRenderObject
 * @desc Export the ThreeJs ImmediateRenderObject Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Ll,Pl;function jl(e){return Ll||function(e){const t=e.Schema;Ll=new t({})}(e),Ll}function Vl(e){const t=Gl.getModelFrom(e);Pl=t.discriminator("ImmediateRenderObject",jl(e))}var $l={name:"ImmediateRenderObject",getSchemaFrom:jl,getModelFrom:function(e){return Pl||Vl(e),Pl},registerModelTo:function(e){return Pl||Vl(e),e}};
/**
 * @module Schemas/Objects/LensFlare
 * @desc Export the ThreeJs LensFlare Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ul}=N;let Rl,kl;function Hl(e){return Rl||function(e){const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Color,a=r.Vector3;Rl=new t({lensFlares:[{texture:n,size:Number,distance:Number,x:Number,y:Number,z:Number,scale:Number,rotation:Number,opacity:Number,color:o,blending:Number}],positionScreen:a})}(e),Rl}function zl(e){const t=Ul.getModelFrom(e);kl=t.discriminator("LensFlare",Hl(e))}var Yl={name:"LensFlare",getSchemaFrom:Hl,getModelFrom:function(e){return kl||zl(e),kl},registerModelTo:function(e){return kl||zl(e),e}};
/**
 * @module Schemas/Objects/Line
 * @desc Export the ThreeJs Line Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ql}=N;let Wl,Xl;function Zl(e){return Wl||function(e){const t=e.Schema,r=t.Types.ObjectId;Wl=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),Wl}function Jl(e){const t=Ql.getModelFrom(e);Xl=t.discriminator("Line",Zl(e))}var ql={name:"Line",getSchemaFrom:Zl,getModelFrom:function(e){return Xl||Jl(e),Xl},registerModelTo:function(e){return Xl||Jl(e),e}};
/**
 * @module Schemas/Objects/LineLoop
 * @desc Export the ThreeJs LineLoop Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Kl}=N;let ef,tf;function rf(e){return ef||function(e){const t=e.Schema,r=t.Types.ObjectId;ef=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),ef}function nf(e){const t=Kl.getModelFrom(e);tf=t.discriminator("LineLoop",rf(e))}var of={name:"LineLoop",getSchemaFrom:rf,getModelFrom:function(e){return tf||nf(e),tf},registerModelTo:function(e){return tf||nf(e),e}};
/**
 * @module Schemas/Objects/LineSegments
 * @desc Export the ThreeJs LineSegments Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:af}=N;let cf,sf;function uf(e){return cf||function(e){const t=e.Schema,r=t.Types.ObjectId;cf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),cf}function mf(e){const t=af.getModelFrom(e);sf=t.discriminator("LineSegments",uf(e))}var df={name:"LineSegments",getSchemaFrom:uf,getModelFrom:function(e){return sf||mf(e),sf},registerModelTo:function(e){return sf||mf(e),e}};
/**
 * @module Schemas/Objects/LOD
 * @desc Export the ThreeJs LOD Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:lf}=N;let ff,hf;function gf(e){return ff||function(e){const t=e.Schema,r=t.Types.Mixed;ff=new t({levels:[r]})}(e),ff}function pf(e){const t=lf.getModelFrom(e);hf=t.discriminator("LOD",gf(e))}var Sf={name:"LOD",getSchemaFrom:gf,getModelFrom:function(e){return hf||pf(e),hf},registerModelTo:function(e){return hf||pf(e),e}};
/**
 * @module Schemas/Objects/Mesh
 * @desc Export the ThreeJs Mesh Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:yf}=N;let Mf,bf;function Tf(e){return Mf||function(e){const t=e.Schema,r=t.Types.ObjectId;Mf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number})}(e),Mf}function Ff(e){const t=yf.getModelFrom(e);bf=t.discriminator("Mesh",Tf(e))}var wf={name:"Mesh",getSchemaFrom:Tf,getModelFrom:function(e){return bf||Ff(e),bf},registerModelTo:function(e){return bf||Ff(e),e}};
/**
 * @module Schemas/Objects/Points
 * @desc Export the ThreeJs Points Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:vf}=N;let _f,Nf;function Bf(e){return _f||function(e){const t=e.Schema,r=t.Types.ObjectId;_f=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"PointsMaterial"}],drawMode:Number})}(e),_f}function Cf(e){const t=vf.getModelFrom(e);Nf=t.discriminator("Points",Bf(e))}var Of={name:"Points",getSchemaFrom:Bf,getModelFrom:function(e){return Nf||Cf(e),Nf},registerModelTo:function(e){return Nf||Cf(e),e}};
/**
 * @module Schemas/Objects/Skeleton
 * @desc Export the ThreeJs Skeleton Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Df}=N;let xf,If;function Af(e){return xf||function(e){const t=e.Schema,r=t.Types.ObjectId;xf=new t({bones:[r],boneMatrices:[Number]})}(e),xf}function Ef(e){const t=Df.getModelFrom(e);If=t.discriminator("Skeleton",Af(e))}var Gf={name:"Skeleton",getSchemaFrom:Af,getModelFrom:function(e){return If||Ef(e),If},registerModelTo:function(e){return If||Ef(e),e}};
/**
 * @module Schemas/Objects/SkinnedMesh
 * @desc Export the ThreeJs SkinnedMesh Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Lf}=N;let Pf,jf;function Vf(e){return Pf||function(e){const t=e.Schema,r=t.Types.ObjectId;Pf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number,bindMode:String,bindMatrix:[Number],bindMatrixInverse:[Number]})}(e),Pf}function $f(e){const t=Lf.getModelFrom(e);jf=t.discriminator("SkinnedMesh",Vf(e))}var Uf={name:"SkinnedMesh",getSchemaFrom:Vf,getModelFrom:function(e){return jf||$f(e),jf},registerModelTo:function(e){return jf||$f(e),e}};
/**
 * @module Schemas/Objects/Sprite
 * @desc Export the ThreeJs Sprite Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Rf}=N;let kf,Hf;function zf(e){return kf||function(e){const t=e.Schema,r=t.Types.ObjectId;kf=new t({material:[{type:r,ref:"SpriteMaterial"}]})}(e),kf}function Yf(e){const t=Rf.getModelFrom(e);Hf=t.discriminator("Sprite",zf(e))}var Qf={name:"Sprite",getSchemaFrom:zf,getModelFrom:function(e){return Hf||Yf(e),Hf},registerModelTo:function(e){return Hf||Yf(e),e}};
/**
 * @module Schemas/Scenes/Fog
 * @desc Export the ThreeJs Fog Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Scenes/Scene Schemas/Scenes/Scene}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Wf;var Xf={name:"Fog",getSchemaFrom:function(e){return Wf||function(e){const t=e.Schema;Wf=new t({coordinates:{x:Number,y:Number,z:Number},orientation:{x:Number,y:Number,z:Number},thumbnail:Buffer,path:String},{_id:!1,id:!1})}(e),Wf},getModelFrom:()=>null,registerModelTo:e=>e},Zf={Fog:Xf};
/**
 * @module Schemas/Scenes/FogExp2
 * @desc Export the ThreeJs FogExp2 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 * @requires {@link module:Schemas/Scenes/Fog Schemas/Scenes/Fog}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Object3D:Jf}=N,{Fog:qf}=Zf;let Kf,eh;function th(e){return Kf||function(e){const t=qf.getSchemaFrom(e),r=e.Schema,n=r.Types.Color;Kf=new r({background:n,fog:t,overrideMaterial:String,autoUpdate:Boolean})}(e),Kf}function rh(e){const t=Jf.getModelFrom(e);eh=t.discriminator("Scene",th(e))}var nh={name:"Scene",getSchemaFrom:th,getModelFrom:function(e){return eh||rh(e),eh},registerModelTo:function(e){return eh||rh(e),e}};
/**
 * @module Schemas/Textures/Texture
 * @desc Export the ThreeJs Texture Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let oh,ah;function ih(e){return oh||function(e){const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Vector2,a=r.Matrix3;oh=new t({uuid:String,name:String,image:n,mipmaps:[],mapping:Number,wrapS:Number,wrapT:Number,magFilter:Number,minFilter:Number,anisotropy:Number,format:Number,type:Number,offset:o,repeat:o,center:o,rotation:Number,matrixAutoUpdate:Boolean,matrix:a,generateMipmaps:Boolean,premultiplyAlpha:Boolean,flipY:Boolean,unpackAlignment:Number,encoding:Number,version:Number},{collection:"textures",discriminatorKey:"type"})}(e),oh}function ch(e){ah=e.model("Textures",ih(e)),ah.discriminator("Texture",new e.Schema({}))}var sh={name:"Texture",getSchemaFrom:ih,getModelFrom:function(e){return ah||ch(e),ah},registerModelTo:function(e){return ah||ch(e),e}},uh={Texture:sh};
/**
 * @module Schemas/Textures/CanvasTexture
 * @desc Export the ThreeJs CanvasTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Texture:mh}=uh;let dh,lh;function fh(e){return dh||function(e){const t=e.Schema;dh=new t({needsUpdate:Boolean})}(e),dh}function hh(e){const t=mh.getModelFrom(e);lh=t.discriminator("CanvasTexture",fh(e))}var gh={name:"CanvasTexture",getSchemaFrom:fh,getModelFrom:function(e){return lh||hh(e),lh},registerModelTo:function(e){return lh||hh(e),e}};
/**
 * @module Schemas/Textures/CompressedTexture
 * @desc Export the ThreeJs CompressedTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:ph}=uh;let Sh,yh;function Mh(e){return Sh||function(e){const t=e.Schema;Sh=new t({})}(e),Sh}function bh(e){const t=ph.getModelFrom(e);yh=t.discriminator("CompressedTexture",Mh(e))}var Th={name:"CompressedTexture",getSchemaFrom:Mh,getModelFrom:function(e){return yh||bh(e),yh},registerModelTo:function(e){return yh||bh(e),e}};
/**
 * @module Schemas/Textures/CubeTexture
 * @desc Export the ThreeJs CubeTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Fh}=uh;let wh,vh;function _h(e){return wh||function(e){const t=e.Schema;wh=new t({})}(e),wh}function Nh(e){const t=Fh.getModelFrom(e);vh=t.discriminator("CubeTexture",_h(e))}var Bh={name:"CubeTexture",getSchemaFrom:_h,getModelFrom:function(e){return vh||Nh(e),vh},registerModelTo:function(e){return vh||Nh(e),e}};
/**
 * @module Schemas/Textures/DataTexture
 * @desc Export the ThreeJs DataTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Ch}=uh;let Oh,Dh;function xh(e){return Oh||function(e){const t=e.Schema;Oh=new t({})}(e),Oh}function Ih(e){const t=Ch.getModelFrom(e);Dh=t.discriminator("DataTexture",xh(e))}var Ah={name:"DataTexture",getSchemaFrom:xh,getModelFrom:function(e){return Dh||Ih(e),Dh},registerModelTo:function(e){return Dh||Ih(e),e}};
/**
 * @module Schemas/Textures/DepthTexture
 * @desc Export the ThreeJs DepthTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Eh}=uh;let Gh,Lh;function Ph(e){return Gh||function(e){const t=e.Schema;Gh=new t({})}(e),Gh}function jh(e){const t=Eh.getModelFrom(e);Lh=t.discriminator("DepthTexture",Ph(e))}var Vh={name:"DepthTexture",getSchemaFrom:Ph,getModelFrom:function(e){return Lh||jh(e),Lh},registerModelTo:function(e){return Lh||jh(e),e}};
/**
 * @module Schemas/Textures/VideoTexture
 * @desc Export the ThreeJs VideoTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:$h}=uh;let Uh,Rh;function kh(e){return Uh||function(e){const t=e.Schema;Uh=new t({})}(e),Uh}function Hh(e){const t=$h.getModelFrom(e);Rh=t.discriminator("VideoTexture",kh(e))}var zh={name:"VideoTexture",getSchemaFrom:kh,getModelFrom:function(e){return Rh||Hh(e),Rh},registerModelTo:function(e){return Rh||Hh(e),e}};
/**
 * @module Types/Color
 * @desc Export the three js Color type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
/**
 * @module MongoDBThreePlugin
 * @desc Three way to register Types and Schema
 * using cjs module under types and schemas folder.
 * using FunctionRegistrator for type and add to plugin using .addType( myFunctionRegistrator ), extending class AbstractMongooseRegistrator for Schema and add to plugin using .addSchema(
 * MySchemaRegistrator ) using direct registration importing mongoose in the file (care to the loading order ! An no output about what is registered.)
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [MIT]{@link https://opensource.org/licenses/MIT}
 */
var Yh=(new t.TMongoDBPlugin).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Color")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Color: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isColor)throw new e.SchemaType.CastError(`Color: ${t} is not a object or Three.Color instance`);if(!("r"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain r property`);if(r.isNotNumber(t.r))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("g"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain g property`);if(r.isNotNumber(t.g))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("b"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain b property`);if(r.isNotNumber(t.b))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);return{r:t.r,g:t.g,b:t.b}}}return t.COLOR_BSON_TYPE=i.BSON_DATA_OBJECT,e.Schema.Types.Color=t,e}
/**
 * @module Types/Euler
 * @desc Export the three js Euler type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Euler")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Euler: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isEuler)throw new e.SchemaType.CastError(`Euler: ${t} is not a object or Euler instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Euler: ${t} expected x to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Euler: ${t} expected y to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Euler: ${t} expected z to be a number`);if(!("order"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain order property`);if(r.isNotString(t.order))throw new e.SchemaType.CastError(`Euler: ${t} expected order to be a string`);if(!["XYZ","YZX","ZXY","XZY","YXZ","ZYX"].includes(t.order.toUpperCase()))throw new e.SchemaType.CastError(`Euler: ${t} expected order to be a string in ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX']`);return{x:t.x,y:t.y,z:t.z,order:t.order.toUpperCase()}}}return t.EULER_BSON_TYPE=i.BSON_DATA_OBJECT,e.Schema.Types.Euler=t,e}
/**
 * @module Types/Matrix3
 * @desc Export the three js Matrix3 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Matrix3")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Matrix3: ${t} is null or undefined`);if(r.isNotArray(t)&&!t.isMatrix3)throw new e.SchemaType.CastError(`Matrix3: ${t} is not an array or Matrix3 instance`);let n;n=t.isMatrix3?t.toArray():t;const o=n.length;if(9!==o)throw new e.SchemaType.CastError(`Matrix3: ${t} does not contain the right number of values. Expect 9 values and found ${o}`);for(let a,i=0;i<o;i++){if(a=n[i],r.isNotNumber(a))throw new e.SchemaType.CastError(`Matrix3: ${t} does not seem to contain right values. Expect values in range 0 and 1.`);if(r.isNaN(a))throw new e.SchemaType.CastError(`Matrix3: ${t} does not seem to contain right values. Expect values in range 0 and 1.`)}return n}}return t.MATRIX3_BSON_TYPE=i.BSON_DATA_ARRAY,e.Schema.Types.Matrix3=t,e}
/**
 * @module Types/Matrix4
 * @desc Export the three js Matrix4 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Matrix4")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Matrix4: ${t} is null or undefined`);if(r.isNotArray(t)&&!t.isMatrix4)throw new e.SchemaType.CastError(`Matrix4: ${t} is not an array or Matrix4 instance`);let n;n=t.isMatrix4?t.toArray():t;const o=n.length;if(16!==o)throw new e.SchemaType.CastError(`Matrix4: ${t} does not contain the right number of values. Expect 9 values and found ${o}`);for(let a,i=0;i<o;i++){if(a=n[i],r.isNotNumber(a))throw new e.SchemaType.CastError(`Matrix4: ${t} does not seem to contain right values. Expect values in range 0 and 1.`);if(r.isNaN(a))throw new e.SchemaType.CastError(`Matrix4: ${t} does not seem to contain right values. Expect values in range 0 and 1.`)}return n}}return t.MATRIX4_BSON_TYPE=i.BSON_DATA_ARRAY,e.Schema.Types.Matrix4=t,e}
/**
 * @module Types/Quaternion
 * @desc Export the three js Quaternion type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Quaternion")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Quaternion: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isQuaternion)throw new e.SchemaType.CastError(`Quaternion: ${t} is not a object or Quaternion instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("w"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain w property`);if(r.isNotNumber(t.w))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z,w:t.w}}}return t.QUATERNION_BSON_TYPE=i.BSON_DATA_OBJECT,e.Schema.Types.Quaternion=t,e}
/**
 * @module Types/Vector2
 * @desc Export the three js Vector2 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector2")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Vector2: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isVector2)throw new e.SchemaType.CastError(`Vector2: ${t} is not a object or Vector2 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector2: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector2: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector2: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector2: ${t} expected to be a number`);return{x:t.x,y:t.y}}}return t.VECTOR2_BSON_TYPE=i.BSON_DATA_OBJECT,e.Schema.Types.Vector2=t,e}
/**
 * @module Types/Vector3
 * @desc Export the three js Vector3 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector3")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Vector3: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isVector3)throw new e.SchemaType.CastError(`Vector3: ${t} is not a object or Vector3 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z}}}return t.VECTOR3_BSON_TYPE=i.BSON_DATA_OBJECT,e.Schema.Types.Vector3=t,e}
/**
 * @module Types/Vector4
 * @desc Export the three js Vector4 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */)).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector4")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Vector4: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isVector4)throw new e.SchemaType.CastError(`Vector4: ${t} is not a object or Vector4 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("w"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain w property`);if(r.isNotNumber(t.w))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z,w:t.w}}}return t.VECTOR4_BSON_TYPE=i.BSON_DATA_OBJECT,e.Schema.Types.Vector4=t,e})).addSchema(I).addSchema(j).addSchema(H).addSchema(Z).addSchema(re).addSchema(se).addSchema(he).addSchema(be).addSchema(Ae).addSchema(je).addSchema(Je).addSchema(Ke).addSchema(ot).addSchema(_).addSchema(dt).addSchema(St).addSchema(wt).addSchema(Ot).addSchema(Gt).addSchema(Ut).addSchema(He).addSchema(Qt).addSchema(Kt).addSchema(ar).addSchema(dr).addSchema(Sr).addSchema(wr).addSchema(Or).addSchema(Gr).addSchema(Ur).addSchema(Qr).addSchema(Kr).addSchema(an).addSchema(ln).addSchema(yn).addSchema(vn).addSchema(Dn).addSchema(Ln).addSchema(Rn).addSchema(Wn).addSchema(eo).addSchema(io).addSchema(fo).addSchema(Mo).addSchema(_o).addSchema(xo).addSchema(Po).addSchema(ko).addSchema(Xo).addSchema(ta).addSchema(ca).addSchema(fa).addSchema(Ma).addSchema(_a).addSchema(xa).addSchema(Pa).addSchema(ka).addSchema(Xa).addSchema(ti).addSchema(ci).addSchema(fi).addSchema(Mi).addSchema(_i).addSchema(xi).addSchema(Pi).addSchema(ki).addSchema(Xi).addSchema(tc).addSchema(cc).addSchema(fc).addSchema(Mc).addSchema(_c).addSchema(xc).addSchema(Pc).addSchema(kc).addSchema(Xc).addSchema(ts).addSchema(cs).addSchema(fs).addSchema(Ms).addSchema(_s).addSchema(xs).addSchema(Ps).addSchema(ks).addSchema(Xs).addSchema(tu).addSchema(cu).addSchema(fu).addSchema(Mu).addSchema(_u).addSchema(xu).addSchema(Pu).addSchema(ku).addSchema(Xu).addSchema(tm).addSchema(cm).addSchema(fm).addSchema(Mm).addSchema(fd).addSchema(xm).addSchema(Pm).addSchema(vm).addSchema(km).addSchema(Xm).addSchema(td).addSchema(cd).addSchema(Md).addSchema(_d).addSchema(xd).addSchema(Pd).addSchema(kd).addSchema(Xd).addSchema(tl).addSchema(cl).addSchema(ul).addSchema(dl).addSchema(fl).addSchema(gl).addSchema(Sl).addSchema(Ml).addSchema(Tl).addSchema(wl).addSchema(Ol).addSchema(El).addSchema($l).addSchema(Yl).addSchema(ql).addSchema(of).addSchema(df).addSchema(Sf).addSchema(wf).addSchema(Of).addSchema(Gf).addSchema(Uf).addSchema(Qf).addSchema(Xf).addSchema(nh).addSchema(gh).addSchema(Th).addSchema(Bh).addSchema(Ah).addSchema(Vh).addSchema(sh).addSchema(zh).addController(u).addDescriptor({route:"/objects",controller:{name:"TObjects3DController",options:{schemaName:"Objects3D"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addController(t.TMongooseController).addDescriptor({route:"/curves",controller:{name:"TMongooseController",options:{schemaName:"Curves"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/geometries",controller:{name:"TMongooseController",options:{schemaName:"Geometries"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/materials",controller:{name:"TMongooseController",options:{schemaName:"Materials"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/textures",controller:{name:"TMongooseController",options:{schemaName:"Textures"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addController(e.TAbstractConverterManager).addDescriptor({route:"/uploads",controller:{name:"TAbstractConverterManager",options:{useNext:!0,converters:{JsonToThree:new p,ShpToThree:new T,DbfToThree:new h,FbxToThree:new g,ColladaToThree:new m,StlToThree:new F,TdsToThree:new w,MtlToThree:new S,ObjToThree:new y},rules:[{on:".json",use:"JsonToThree"},{on:".dae",use:"ColladaToThree"},{on:".fbx",use:"FbxToThree"},{on:".stl",use:"StlToThree"},{on:".3ds",use:"TdsToThree"},{on:".shp",use:"ShpToThree"},{on:".dbf",use:"DbfToThree"},{on:[".shp",".dbf"],use:["ShpToThree","DbfToThree"]},{on:".mtl",use:"MtlToThree"},{on:".obj",use:"ObjToThree"},{on:[".mtl",".obj"],use:["MtlToThree","ObjToThree"]}],inserter:v},can:{processFiles:{on:"post",over:"/"}}}});module.exports=Yh;
