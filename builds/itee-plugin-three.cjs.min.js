"use strict";var e=require("itee-database"),t=require("itee-mongodb"),r=require("itee-validators"),n=require("three-full"),o=require("itee-client"),i=require("itee-utils"),a=require("bson");function c(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=c(r);
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @see [IFC Standard]{@link http://standards.buildingsmart.org/IFC/RELEASE/IFC4_1/FINAL/HTML/}
 *
 */class u extends t.TMongooseController{constructor(e={}){super(e)}async _readOneDocument(e,t){if(r.isNotDefined(e)||r.isNotDefined(t))return null;const n=await this._driver.model(e).findOne(t).exec();return r.isDefined(n)?n._doc:null}async _readManyDocument(e,t,n){if(r.isNotDefined(e)||r.isNotDefined(t))return null;return(await this._driver.model(e).find(t,n).lean().exec()).map((e=>e._doc))}async _updateDocument(e,t,n){if(r.isNotDefined(e))return null;return await this._driver.model(e.type).findByIdAndUpdate(e._id,t,n).exec()}async getAllChildrenIds(e,t=!1){const n={children:[],geometries:[],materials:[]},o=[],i=await this._readManyDocument("Objects3D",{parent:e},{_id:!0,geometry:!0,material:!0,children:!0});for(let e=0,a=i.length;e<a;e++){const a=i[e],c=a._id.toString();r.isDefined(c)&&n.children.push(c);const s=a.geometry;r.isDefined(s)&&n.geometries.push(s.toString());const u=a.material;if(u){const e=r.isArray(u)?u.map((e=>e.toString())):[u.toString()];n.materials.push(...e)}if(a.children){const e=this.getAllChildrenIds(c,t);o.push(e)}}if(o.length>0){const e=await Promise.all(o);for(let t=0,r=e.length;t<r;t++){const r=e[t];n.children.push(...r.children),n.geometries.push(...r.geometries),n.materials.push(...r.materials)}}return n}async _deleteOne(e,r){try{const n="allInOneByParentId";if("oneByOne"===n);else if("allInOneByParentId"===n){const n=await this.getAllChildrenIds(e,!0);n.children.push(e);const o={children:[...new Set(n.children)],geometries:[...new Set(n.geometries)],materials:[...new Set(n.materials)]},[i,a,c]=await Promise.all([this._deleteDocuments("Objects3D",o.children),this._deleteDocuments("Geometries",o.geometries),this._deleteDocuments("Materials",o.materials)]);t.TMongooseController.returnData({deletedObjectsCount:i,deletedGeometriesResult:a,deletedMaterialsResult:c},r)}}catch(e){t.TMongooseController.returnError(e,r)}}async _deleteDocuments(e,t){if(r.isEmptyArray(t))return 0;return(await this._driver.model(e).deleteMany({_id:{$in:t}}).exec()).deletedCount}async _deleteDocument(e){if(r.isNotDefined(e))return null;const t=await this._driver.model(e.type).findByIdAndDelete(e._id).exec();return t&&t._doc?t._doc._id:null}async _removeParentReference(e){const t=e.parent;if(r.isNotDefined(t))return null;const n=await this._readOneDocument("Objects3D",{_id:t}),o=n.children,i=o.indexOf(e._id);o.splice(i,1);return await this._updateDocument(n,{$set:{children:o}})}async _removeChildrenDocuments(e){let t=[];for(let r=e.length-1;r>=0;r--)t.push(this._removeChildDocument(e[r]));return Promise.all(t)}async _removeChildDocument(e){const t=await this._readManyDocument("Objects3D",{parent:e._id}),r=await this._removeChildrenDocuments(t),n=await this._removeOrphanGeometryWithId(e.geometry),o=await this._removeOrphanMaterialsWithIds(e.material||[]);return{object:await this._deleteDocument(e),children:r,geometry:n,materials:o}}async _removeOrphanGeometryWithId(e){if(r.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{geometry:e})).length>1)return;const t=await this._readOneDocument("Geometries",{_id:e});return await this._deleteDocument(t)}async _removeOrphanMaterialsWithIds(e){if(r.isNotDefined(e))return;if(r.isEmptyArray(e))return;const t=[];for(let r=0,n=e.length;r<n;r++)t.push(this._removeOrphanMaterialWithId(e[r]));return Promise.all(t)}async _removeOrphanMaterialWithId(e){if(r.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{material:e})).length>1)return;const t=await this._readOneDocument("Materials",{_id:e});return await this._deleteDocument(t)}}
/**
 * @module Converters/ColladaToThree
 * @desc Export JsonToThree converter class about .dae files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class m extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.ColladaLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Loader/DBFLoader
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * From:
 * https://www.clicketyclick.dk/databases/xbase/format/db2_dbf.html#DBII_DBF_STRUCT
 * http://web.archive.org/web/20150323061445/http://ulisse.elettra.trieste.it/services/doc/dbase/DBFstruct.htm
 * http://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm
 *
 *
 */const d=i.toEnum({FoxPro:48,FoxPro_Autoincrement:49,dBASE_II:2,FoxPro_Var:50,dBASE_III_plus:3,dBASE_III_plus_memo:131,dBASE_IV_SQL_table:67,dBASE_IV_SQL_system:99,dBASE_IV_memo:139,dBASE_IV_memo_SQL_table:203,FoxBase:251,dBase_v_7:4,FoxPro_2_x:245,HiPerSix_memo:229}),l=i.toEnum({Binary:"B",Character:"C",Date:"D",Numeric:"N",Logical:"L",Memo:"M",Timestamp:"@",Long:"I",Autoincrement:"+",Float:"F",Double:"O",OLE:"G"});class f{constructor(e={}){const t={manager:n.DefaultLoadingManager,logger:o.DefaultLogger,reader:new o.TBinaryReader,...e};this.manager=t.manager,this.logger=t.logger,this.reader=t.reader}get manager(){return this._manager}set manager(e){this._manager=e}get logger(){return this._logger}set logger(e){this._logger=e}get reader(){return this._reader}set reader(e){this._reader=e}setManager(e){return this.manager=e,this}setLogger(e){return this.logger=e,this}setReader(e){return this.reader=e,this}load(e,t,r,o){const i=this,a=new n.FileLoader(i.manager);a.setResponseType("arraybuffer"),a.load(e,(e=>{t(i.parse(e))}),r,o)}parse(e){this.reader.setEndianess(o.Endianness.Big).setBuffer(e);const t=this.reader.getInt8();if(!this._isValidVersion(t))return this.logger.error(`DBFLoader: Invalid version number: ${t}`),null;const r=this._parseHeader(t);return{header:r,datas:this._parseDatas(t,r)}}_isValidVersion(e){return d.includes(e)}_parseHeader(e){let t={};switch(e){case d.FoxPro:case d.FoxPro_Autoincrement:case d.FoxPro_Var:case d.dBASE_II:t=this._parseHeaderV2();break;case d.dBASE_III_plus:case d.dBASE_III_plus_memo:t=this._parseHeaderV2_5();break;case d.dBASE_IV_memo:case d.dBASE_IV_memo_SQL_table:case d.dBASE_IV_SQL_system:case d.dBASE_IV_SQL_table:t=this._parseHeaderV3();break;case d.dBase_v_7:case d.FoxPro_2_x:case d.HiPerSix_memo:t=this._parseHeaderV4();break;default:throw new RangeError(`Invalid version parameter: ${e}`)}return this.reader.getUint8()!==f.Terminator&&this.logger.error("DBFLoader: Invalid terminator after field descriptors !!!"),t}_parseHeaderV2(){const e=this.reader.getInt16(),t=this.reader.getInt8()+f.YearOffset,r=this.reader.getInt8(),n=this.reader.getInt8(),o=this.reader.getInt16();let i,a,c,s,u,m=[];for(let t=0;t<e;t++)i=this.reader.getString(11),a=this.reader.getChar(),c=this.reader.getUint8(),s=this.reader.getInt16(),u=this.reader.getInt8(),m.push({name:i,type:a,length:c,memoryAddress:s,decimalCount:u});return{numberOfRecords:e,year:t,month:r,day:n,lengthOfEachRecords:o,fields:m}}_parseHeaderV2_5(){const e=this.reader.getInt8()+f.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(o.Endianness.Little);const n=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(o.Endianness.Big),this.reader.skipOffsetOf(20);let c,s,u,m,d,l,h,g=[];for(let e=0;e<n;e++)c=this.reader.getString(11),s=this.reader.getChar(),m=this.reader.getInt32(),u=this.reader.getUint8(),d=this.reader.getUint8(),this.reader.skipOffsetOf(2),l=this.reader.getInt8(),this.reader.skipOffsetOf(2),h=this.reader.getInt8(),this.reader.skipOffsetOf(1),g.push({name:c,type:s,length:u,memoryAddress:m,decimalCount:d,workAreaId:l,MDXFlag:h});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:i,numberOfByteInRecord:a,fields:g}}_parseHeaderV3(){const e=this.reader.getInt8()+f.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(o.Endianness.Little);const n=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(o.Endianness.Big),this.reader.skipOffsetOf(2);const c=this.reader.getInt8(),s=this.reader.getInt8();this.reader.skipOffsetOf(12);const u=this.reader.getInt8(),m=this.reader.getInt8();this.reader.skipOffsetOf(2);let d,l,h,g,p,S,y=[];for(;this.reader.getOffset()<i-1;)d=this.reader.getString(11),l=this.reader.getChar(),this.reader.skipOffsetOf(4),h=this.reader.getUint8(),g=this.reader.getUint8(),this.reader.skipOffsetOf(2),p=this.reader.getInt8(),this.reader.skipOffsetOf(10),S=this.reader.getInt8(),y.push({name:d,type:l,length:h,decimalCount:g,workAreaId:p,MDXFieldFlag:S});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:i,numberOfByteInRecord:a,incompleteTransactionFlag:c,encryptionFlag:s,MDXFlag:u,languageDriverId:m,fields:y}}_parseHeaderV4(){const e=this.reader.getInt8()+f.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(o.Endianness.Little);const n=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(o.Endianness.Big),this.reader.skipOffsetOf(2);const c=this.reader.getInt8(),s=this.reader.getInt8();this.reader.skipOffsetOf(12);const u=this.reader.getInt8(),m=this.reader.getInt8();this.reader.skipOffsetOf(2);const d=this.reader.getString(32);this.reader.skipOffsetOf(4);let l,h,g,p,S,y,M=[];for(let e=0;e<n;e++)l=this.reader.getString(32),h=this.reader.getChar(),g=this.reader.getUint8(),p=this.reader.getUint8(),this.reader.skipOffsetOf(2),S=this.reader.getInt8(),this.reader.skipOffsetOf(2),y=this.reader.getInt32(),this.reader.skipOffsetOf(4),M.push({name:l,type:h,length:g,decimalCount:p,MDXFieldFlag:S,nextAutoincrementValue:y});return{year:e,month:t,day:r,numberOfRecords:n,numberOfByteInHeader:i,numberOfByteInRecord:a,incompleteTransactionFlag:c,encryptionFlag:s,MDXFlag:u,languageDriverId:m,languageDriverName:d,fields:M}}_parseDatas(e,t){const r=t.numberOfRecords,n=t.fields;let o=[],i=null,a=null;for(let e=0;e<r;e++){i={},i.deleted=this.reader.getUint8()===f.DeletedRecord;for(let e=0,t=n.length;e<t;e++)switch(a=n[e],a.type){case l.Binary:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case l.Numeric:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case l.Character:case l.Date:i[a.name]=this.reader.getString(a.length);break;case l.Logical:{const e=this.reader.getChar().toLowerCase();i[a.name]="t"===e||"y"===e||"f"!==e&&"n"!==e&&null}break;case l.Memo:i[a.name]=this.reader.getString(a.length);break;case l.Timestamp:break;case l.Long:case l.Autoincrement:i[a.name]=this.reader.getInt32();break;case l.Float:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case l.Double:i[a.name]=this.reader.getFloat64();break;case l.OLE:i[a.name]=this.reader.getString(a.length);break;default:throw new RangeError(`Invalid data type parameter: ${a.type}`)}o.push(i)}return o}_parseFieldProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt16(),n=this.reader.getInt16(),o=this.reader.getInt16(),i=this.reader.getInt16(),a=this.reader.getInt16(),c=this.reader.getInt16();let s=[];for(let t=0;t<e;t++)s.push(this._getStandardProperties());let u=[];for(let e=0;e<r;e++)u.push(this._getCustomProperties());let m=[];for(let e=0;e<o;e++)m.push(this._getReferentialIntegrityProperties());return{numberOfStandardProperties:e,startOfStandardPropertiesDescriptor:t,numberOfCustomProperties:r,startOfCustomPropertiesDescriptor:n,numberOfReferentialIntegrityProperties:o,startOfReferentialIntegrityDescriptor:i,startOfData:a,sizeOfPropertiesStructure:c,standardProperties:s,customProperties:u,referentialIntegrityProperties:m}}_getStandardProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8(),n=this.reader.getInt8(),o=this.reader.getInt8();this.reader.skipOffsetOf(4);return{generationalNumber:e,tableFieldOffset:t,propertyDescribed:r,type:n,isConstraint:o,offsetFromStart:this.reader.getInt16(),widthOfDatabaseField:this.reader.getInt16()}}_getCustomProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8();this.reader.skipOffsetOf(1);return{generationalNumber:e,tableFieldOffset:t,type:r,offsetFromStartOfName:this.reader.getInt16(),lengthOfName:this.reader.getInt16(),offsetFromStartOfData:this.reader.getInt16(),lengthOfData:this.reader.getInt16()}}_getReferentialIntegrityProperties(){return{databaseState:this.reader.getInt8(),sequentialNumberRule:this.reader.getInt16(),offsetOfTheRIRuleName:this.reader.getInt16(),sizeOfTheRIRuleName:this.reader.getInt16(),offsetOfNameOfForeignTable:this.reader.getInt16(),sizeOfNameOfForeignTable:this.reader.getInt16(),stateBehaviour:this.reader.getInt8(),numberOfFieldsInLinkingKey:this.reader.getInt16(),offsetOfLocalTableTagName:this.reader.getInt16(),sizeOfTheLocalTableTagName:this.reader.getInt16(),offsetOfForeignTableTagName:this.reader.getInt16(),sizeOfTheForeignTableTagName:this.reader.getInt16()}}}f.Terminator=13,f.DeletedRecord=26,f.YearOffset=1900;
/**
 * @module Converters/DbfToThree
 * @desc Export JsonToThree converter class about .dbf files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link module:Loader/DBFLoader Loader/DBFLoader}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class h extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new f;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/FbxToThree
 * @desc Export JsonToThree converter class about .fbx files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class g extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.FBXLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Converters/JsonToThree
 * @desc Export JsonToThree converter class about .json files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class p extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.ObjectLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Converters/MtlToThree
 * @desc Export JsonToThree converter class about .mtl files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class S extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.String})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.MTLLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Converters/Obj2ToThree
 * @desc Export JsonToThree converter class about .obj files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class y extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.OBJLoader2;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Loader/SHPLoader
 * @desc Export SHPLoader to load .shp files
 *
 * @requires {@link https://github.com/Itee/itee-client itee-client}
 * @requires {@link https://github.com/Itee/itee-utils itee-utils}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 * @example Todo...
 *
 */const M=i.toEnum({NullShape:0,Point:1,Polyline:3,Polygon:5,MultiPoint:8,PointZ:11,PolyLineZ:13,PolygonZ:15,MultiPointZ:18,PointM:21,PolylineM:23,PolygonM:25,MultiPointM:28,MultiPatch:31});class b{constructor(e={}){const t={manager:n.DefaultLoadingManager,logger:o.DefaultLogger,reader:new o.TBinaryReader,globalOffset:new n.Vector3(0,0,0),worldAxis:{from:"zUp",to:"zForward"},...e};this.manager=t.manager,this.logger=t.logger,this.reader=t.reader,this.globalOffset=t.globalOffset,this.worldAxis=t.worldAxis}get globalOffset(){return this._globalOffset}set globalOffset(e){this._globalOffset=e}get worldAxis(){return this._worldAxis}set worldAxis(e){this._worldAxis=e}get manager(){return this._manager}set manager(e){this._manager=e}get logger(){return this._logger}set logger(e){this._logger=e}get reader(){return this._reader}set reader(e){this._reader=e}setGlobalOffset(e){return this.globalOffset=e,this}setWorldAxis(e){return this.worldAxis=e,this}setManager(e){return this.manager=e,this}setLogger(e){return this.logger=e,this}setReader(e){return this.reader=e,this}load(e,t,r,o){const i=this,a=new n.FileLoader(i.manager);a.setResponseType("arraybuffer"),a.load(e,(e=>{t(i.parse(e))}),r,o)}parse(e){this._reader.setEndianess(o.Endianness.Big).setBuffer(e);const t=this._parseHeader();if(t.fileCode!==b.FileCode)return this.logger.error("SHPLoader: Invalide Shape file code !"),null;if(t.fileLength<b.MinFileLength)return this.logger.error("SHPLoader: Shape file have an incorrect length !"),null;if(!Object.values(M).includes(t.shapeType))return this.logger.error("SHPLoader: Shape file have an incorrect shape type !"),null;t.version<b.MinVersion&&this.logger.warn("SHPLoader: Version of shape file below than 1000 could be incorrectly parsed !");const r=this._parseDatas(t);return this._convertToObjects(r)}_parseHeader(){const e=this._reader.getInt32();this._reader.skipOffsetOf(20);const t=this._reader.getInt32();this._reader.setEndianess(o.Endianness.Little);const r=this._reader.getInt32(),n=this._reader.getInt32(),i=this._reader.getInt32(),a=this._reader.getInt32();return{fileCode:e,fileLength:t,version:r,shapeType:n,boundingBox:{xMin:i,xMax:this._reader.getInt32(),yMin:a,yMax:this._reader.getInt32(),zMin:this._reader.getInt32(),zMax:this._reader.getInt32(),mMin:this._reader.getInt32(),mMax:this._reader.getInt32()}}}_parseDatas(e){this._reader.skipOffsetTo(100);let t,r,n,i=[];for(;!this._reader.isEndOfFile();)switch(t=this._parseRecordHeader(),r=this._reader.getOffset()+2*t.contentLength,this._reader.setEndianess(o.Endianness.Little),e.shapeType){case M.NullShape:this._reader.skipOffsetTo(r);break;case M.Point:case M.PointZ:case M.PointM:for(;this._reader.getOffset()<r;)n=this._parsePoint(),n&&i.push(n);break;case M.Polyline:case M.PolyLineZ:case M.PolylineM:for(;this._reader.getOffset()<r;)n=this._parsePolyLine(),n&&i.push(n);break;case M.Polygon:case M.PolygonZ:case M.PolygonM:for(;this._reader.getOffset()<r;)n=this._parsePolyLine(),n&&i.push(n);break;case M.MultiPoint:case M.MultiPointZ:case M.MultiPointM:for(;this._reader.getOffset()<r;)n=this._parseMultiPoint(),n&&i.push(n);break;case M.MultiPatch:for(;this._reader.getOffset()<r;)n=this._parseMultiPatch(),n&&i.push(n);break;default:this.logger.error(`SHPLoader: Invalid switch parameter: ${e.shapeType}`)}return i}_parseRecordHeader(){this._reader.setEndianess(o.Endianness.Big);return{recordNumber:this._reader.getInt32(),contentLength:this._reader.getInt32()}}_parseNull(){return this._reader.getInt32(),null}_parsePoint(){const e=this._reader.getInt32();if(e===M.NullShape)return null;return{shapeType:e,x:this._reader.getFloat64(),y:this._reader.getFloat64()}}_parsePolyLine(){const e=this._reader.getInt32();if(e===M.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=this._reader.getInt32(),o=new Array(r);for(let e=0;e<r;e++)o[e]=this._reader.getInt32();const i=new Array(n);for(let e=0;e<n;e++)i[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};return{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:n,parts:o,points:i}}_parsePolygon(){const e=this._reader.getInt32();if(e===M.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=this._reader.getInt32();let o=new Array(r);for(let e=0;e<r;e++)o[e]=this._reader.getInt32();let a=new Array(n);for(let e=0;e<n;e++)a[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};const c=[],s=[];return o.forEach(((e,t)=>{const r=a.slice(e,o[t+1]);i.ringClockwise(r)?c.push(r):s.push(r)})),s.forEach((e=>{c.some((t=>{if(i.ringContainsSome(t[0],e))return t.push(e),!0}))||c.push([e])})),{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:n,parts:o,polygons:c}}_parseMultiPoint(){const e=this._reader.getInt32();if(e===M.NullShape)return null;const t={xMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMin:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),n=new Array(r);for(let e=0;e<r;e++)n.push([this._reader.getFloat64(),this._reader.getFloat64()]);return{shapeType:e,boundingBox:t,numberOfPoints:r,points:n}}_parseMultiPatch(){const e=this._reader.getInt32();return e===M.NullShape?null:{shapeType:e}}_convertToObjects(e){let t=[];for(let t=0,n=e.length;t<n;t++){let n=e[t];n.shapeType!==M.Polygon&&n.shapeType!==M.PolygonZ&&n.shapeType!==M.PolygonM||(n.points&&Array.isArray(n.points[0])?r(n.points):o(n.points))}function r(e){for(let t=0,n=e.length;t<n;t++){let n=e[t];n?Array.isArray(n[0])?r(n):o(n):this.logger.log("no array, oups !")}}function o(e){t.push(new n.Shape(e))}return t}}b.FileCode=9994,b.MinFileLength=100,b.MinVersion=1e3;
/**
 * @module Converters/ShpToThree
 * @desc Export JsonToThree converter class about .shp files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link module:Loader/SHPLoader Loader/SHPLoader}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class T extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,o){super._convert(e,t,r,n,o);try{const t=new b;r(t.parse(e))}catch(e){o(e)}}}
/**
 * @module Converters/StlToThree
 * @desc Export JsonToThree converter class about .stl files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class F extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.STLLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Converters/TdsToThree
 * @desc Export JsonToThree converter class about .3ds files

 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/three-full three-full}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class w extends e.TAbstractFileConverter{constructor(){super({dumpType:e.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,i){super._convert(e,t,r,o,i);try{const t=new n.TDSLoader;r(t.parse(e))}catch(e){i(e)}}}
/**
 * @module Inserters/ThreeToMongoDB
 * @desc Export ThreeToMongoDB mongodb inserter class.
 *
 * @requires {@link https://github.com/Itee/itee-client itee-client}
 * @requires {@link https://github.com/Itee/itee-database itee-database}
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */class v extends e.TAbstractDataInserter{constructor(e={}){const t={logger:o.DefaultLogger,...e};super(t),this.logger=t.logger,this.mergeStrategy="add",this._cache={}}static _arrayify(e){let t=[];return r.isDefined(e)&&(t=r.isArray(e)?e:[e]),t}static _toLog(e){return JSON.stringify({type:e.type||"undefined",name:e.name||"undefined",uuid:e.uuid||"undefined",id:e._id||"undefined"})}async _save(e,t,n,o,i){const a=v._arrayify(e);if(r.isEmptyArray(a))return void i("No data to save in database. Abort insert !");const c=a.map((e=>e.name));this.logger.log(`ThreeToMongoDB: Saving ${c}`),t.mergeStrategy&&(this.mergeStrategy=t.mergeStrategy);try{const e=t.parentId;let o=null,c=null;if(r.isDefined(e)){const n=await this._readDocument("Objects3D",{_id:e});if(r.isNull(n))return void i(`Unable to retrieve parent with id (${t.parentId}). Abort insert !`);if("add"===this.mergeStrategy)o=await this._parseObjects(a,e),c=r.isDefined(o)?o.filter((e=>e)).map((e=>e._id)):[],await this._updateDocument(n,{$addToSet:{children:c}});else if("replace"===this.mergeStrategy){const t=await this._readDocuments("Objects3D",{parent:e}),i=a.map((e=>e.uuid)),s=t.filter((e=>!i.includes(e.uuid)));await this._removeChildrenDocuments(s),o=await this._parseObjects(a,e),c=r.isDefined(o)?o.filter((e=>e)).map((e=>e._id)):[],await this._updateDocument(n,{$set:{children:c}})}}else o=await this._parseObjects(a,null),c=r.isDefined(o)?o.filter((e=>e)).map((e=>e._id)):[];this.logger.log(`ThreeToMongoDB: Saved ${c}`),n()}catch(e){i(e)}finally{this._cache={}}}async _parseObjects(e=[],t=null){this.logger.debug("_parseObjects(...)");const n=v._arrayify(e);if(r.isEmptyArray(n))return null;const o=[];for(let e=0,r=n.length;e<r;e++)o.push(this._parseObject(n[e],t));return Promise.all(o)}async _parseObject(e,t=null){if(this.logger.debug(`_parseObject(${v._toLog(e)}, ${t})`),r.isNotDefined(e))return null;const n=e.type,o=e.name,i=e.geometry,a=v._arrayify(e.children),c=v._arrayify(e.material);if(r.isDefined(i)&&r.isEmptyArray(a))if(i.isGeometry){const e=i.vertices;if(r.isNotDefined(e)||r.isEmptyArray(e))return this.logger.error(`Leaf object ${o} have a geometry that doesn't contain vertices ! Skip it.`),null}else{if(!i.isBufferGeometry)return this.logger.error(`Object ${o} contain an unknown/unmanaged geometry of type ${i.type} ! Skip it.`),null;{const e=i.attributes;if(r.isNotDefined(e))return this.logger.error(`Buffer geometry of ${o} doesn't contain attributes ! Skip it.`),null;const t=e.position;if(r.isNotDefined(t)||0===t.count)return this.logger.error(`Leaf object ${o} have a buffer geometry that doesn't contain position attribute ! Skip it.`),null}}let s=null;if(v.AvailableLineTypes.includes(n)){if(r.isNotDefined(i))return this.logger.error(`Missing geometry for object ${e.name} of type ${n}. Only Sprite can contains material without geometry ! Skip it.`),null;s=v.AvailableLineMaterialTypes}else if(v.AvailablePointTypes.includes(n)){if(r.isNotDefined(i))return this.logger.error(`Missing geometry for object ${e.name} of type ${n}. Only Sprite can contains material without geometry ! Skip it.`),null;s=v.AvailablePointMaterialTypes}else v.AvailableSpriteTypes.includes(n)&&(s=v.AvailableSpriteMaterialTypes);if(s)for(let e=0,t=c.length;e<t;e++){const t=c[e].type;if(!s.includes(t))return this.logger.error(`Object ${o} of type ${n}, contain an invalid material of type ${t} ! Skip it.`),null}const u=await this._getOrCreateDocuments(i),m=r.isDefined(u)?u.filter((e=>e)).map((e=>e._id)).pop():null,d=await this._getOrCreateDocuments(c),l=r.isDefined(d)?d.filter((e=>e)).map((e=>e._id)):[];let f=await this._readDocument(n,{uuid:e.uuid,parent:t});if(r.isDefined(f))if("add"===this.mergeStrategy){const e=await this._parseObjects(a,f._id),t=r.isDefined(e)?e.filter((e=>e)).map((e=>e._id)):[];await this._updateDocument(f,{$addToSet:{children:t}})}else if("replace"===this.mergeStrategy){const e=await this._readDocuments("Objects3D",{parent:f._id}),t=a.map((e=>e.uuid)),n=e.filter((e=>!t.includes(e.uuid)));await this._removeChildrenDocuments(n);const o=await this._parseObjects(a,f._id),i=r.isDefined(o)?o.filter((e=>e)).map((e=>e._id)):[];await this._updateDocument(f,{$set:{children:i,geometry:m,material:l}})}else this.logger.error(`Unknown/Unmanaged merge srategy ${this.mergeStrategy}`);else{e.parent=t,e.children=[],e.geometry=m,e.material=l,f=await this._createDocument(e);const n=await this._parseObjects(a,f._id),o=r.isDefined(n)?n.filter((e=>e)).map((e=>e._id)):[];await this._updateDocument(f,{$set:{children:o,geometry:m,material:l}})}return f}async _getOrCreateDocuments(e=[]){this.logger.debug("_getOrCreateDocuments(...)");const t=v._arrayify(e);if(r.isEmptyArray(t))return null;const n=[];for(let e=0,r=t.length;e<r;e++)n.push(this._getOrCreateDocument(t[e]));return Promise.all(n)}async _getOrCreateDocument(e){if(this.logger.debug(`_getOrCreateDocument(${v._toLog(e)})`),r.isNotDefined(e))return null;let t=await this._readDocument(e.type,{uuid:e.uuid});return t=r.isDefined(t)?await this._updateDocument(t,e):await this._createDocument(e),t}async _createDocuments(e=[]){this.logger.debug("_createDocuments(...)");const t=v._arrayify(e);if(r.isEmptyArray(t))return null;const n=[];for(let e=0,r=t.length;e<r;e++)n.push(this._createDocument(t[e]));return Promise.all(n)}async _createDocument(e){if(this.logger.debug(`_createDocument(${v._toLog(e)})`),r.isNotDefined(e))return null;const t=await this._driver.model(e.type)(e).save(),n=r.isDefined(t)?t._doc:null;return n&&(this._cache[n.uuid]=n),n}async _readDocuments(e,t){if(this.logger.debug("_readDocuments(...)"),r.isNotDefined(e)||r.isNotDefined(t))return null;return(await this._driver.model(e).find(t).exec()).map((e=>e._doc))}async _readDocument(e,t){if(this.logger.debug(`_readDocument(${e}, ${JSON.stringify(t)})`),r.isNotDefined(e)||r.isNotDefined(t))return null;const n=this._cache[t.uuid];if(n)return n;const o=await this._driver.model(e).findOne(t).exec(),i=r.isDefined(o)?o._doc:null;return i&&(this._cache[i.uuid]=i),i}async _updateDocuments(e=[],t,n){this.logger.debug("_updateDocuments(...)");const o=v._arrayify(e);if(r.isEmptyArray(o))return null;const i=[];for(let e=0,r=o.length;e<r;e++)i.push(this._updateDocument(o[e],t,n));return Promise.all(i)}async _updateDocument(e,t,n={new:!0}){if(this.logger.debug(`_updateDocument(${v._toLog(e)}, ${JSON.stringify(t)}, ${JSON.stringify(n)})`),r.isNotDefined(e))return null;const o=await this._driver.model(e.type).findByIdAndUpdate(e._id,t,n).exec(),i=r.isDefined(o)?o._doc:null;return i&&(this._cache[i.uuid]=i),i}async _deleteDocuments(e=[]){this.logger.debug("_deleteDocuments(...)");const t=v._arrayify(e);if(r.isEmptyArray(t))return null;const n=[];for(let e=0,r=t.length;e<r;e++)n.push(this._deleteDocument(t[e]));return Promise.all(n)}async _deleteDocument(e){if(this.logger.debug(`_deleteDocument(${v._toLog(e)})`),r.isNotDefined(e))return null;const t=await this._driver.model(e.type).findByIdAndDelete(e._id).exec(),n=r.isDefined(t)?t._doc:null;return n&&delete this._cache[n.uuid],n}async _removeChildrenDocuments(e){this.logger.debug("_removeChildrenDocuments(...)");let t=[];for(let r=e.length-1;r>=0;r--)t.push(this._removeChildDocument(e[r]));return Promise.all(t)}async _removeChildDocument(e){this.logger.debug(`_removeChildDocument(${v._toLog(e)})`);const t=await this._readDocuments("Objects3D",{parent:e._id});await this._removeChildrenDocuments(t),await this._removeOrphanGeometryWithId(e.geometry),await this._removeOrphanMaterialsWithIds(e.material||[]),await this._deleteDocument(e)}async _removeOrphanGeometryWithId(e){if(this.logger.debug(`_removeOrphanGeometryWithId(${e})`),r.isNotDefined(e))return;if((await this._readDocuments("Objects3D",{geometry:e})).length>1)return;const t=await this._readDocument("Geometries",{_id:e});await this._deleteDocument(t)}async _removeOrphanMaterialsWithIds(e){this.logger.debug("_removeOrphanMaterialsWithIds(...)");const t=[];for(let r=0,n=e.length;r<n;r++)t.push(this._removeOrphanMaterialWithId(e[r]));return Promise.all(t)}async _removeOrphanMaterialWithId(e){this.logger.debug(`_removeOrphanMaterialWithId(${e})`);if((await this._readDocuments("Objects3D",{material:e})).length>1)return;const t=await this._readDocument("Materials",{_id:e});await this._deleteDocument(t)}}function _(e){if(e.__esModule)return e;var t=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})})),t}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Object3D
 *
 * @description Todo...
 */function N(){}v.AvailableCurveTypes=["Curve","ArcCurve","CatmullRomCurve3","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","CurvePath","Path","Shape"],v.AvailableLineTypes=["Line","LineLoop","LineSegments"],v.AvailableLineMaterialTypes=["LineBasicMaterial","LineDashedMaterial"],v.AvailablePointTypes=["Points"],v.AvailablePointMaterialTypes=["PointsMaterial"],v.AvailableSpriteTypes=["Sprite"],v.AvailableSpriteMaterialTypes=["SpriteMaterial"],N.getSchemaFrom=e=>(N._schema||N._createSchema(e),N._schema),N._createSchema=e=>{const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Mixed,i=r.Vector3,a=r.Quaternion,c=r.Matrix4,s=r.Euler;N._schema=new t({uuid:String,name:String,type:String,parent:n,children:[n],up:i,position:i,rotation:s,quaternion:a,scale:{type:i,default:{x:1,y:1,z:1}},modelViewMatrix:c,normalMatrix:c,matrix:c,matrixWorld:c,matrixAutoUpdate:Boolean,matrixWorldNeedsUpdate:Boolean,layers:{type:Number,set:e=>e.mask},visible:Boolean,castShadow:Boolean,receiveShadow:Boolean,frustumCulled:Boolean,renderOrder:Boolean,userData:{type:o,set:e=>function e(t){let r={};for(let n in t){if(!Object.prototype.hasOwnProperty.call(t,n))continue;let o=t[n];o.constructor===Object&&(o=e(o)),r[n.replace(/\./g,"")]=o}return r}(e)}},{collection:"objects",discriminatorKey:"type"})},N.getModelFrom=e=>(N._model||N._createModel(e),N._model),N._createModel=e=>{N._model=e.model("Objects3D",N.getSchemaFrom(e)),N._model.discriminator("Object3D",new e.Schema({}))},N.registerModelTo=e=>(N._model||N._createModel(e),e),N._schema=null,N._model=null;var B=_(Object.freeze({__proto__:null,Object3D:N}));
/**
 * @module Schemas/Audio/Audio
 * @desc Export the ThreeJs Audio Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Object3D:C}=B;let O,D;function x(e){return O||function(e){const t=e.Schema;O=new t({})}(e),O}function I(e){const t=C.getModelFrom(e);D=t.discriminator("Audio",x(e))}var A={name:"Audio",getSchemaFrom:x,getModelFrom:function(e){return D||I(e),D},registerModelTo:function(e){return D||I(e),e}};
/**
 * @module Schemas/Audio/AudioListener
 * @desc Export the ThreeJs AudioListener Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:E}=B;let G,L;function P(e){return G||function(e){const t=e.Schema;G=new t({})}(e),G}function j(e){const t=E.getModelFrom(e);L=t.discriminator("AudioListener",P(e))}var $={name:"AudioListener",getSchemaFrom:P,getModelFrom:function(e){return L||j(e),L},registerModelTo:function(e){return L||j(e),e}};
/**
 * @module Schemas/Audio/PositionalAudio
 * @desc Export the ThreeJs PositionalAudio Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:V}=B;let U,k;function R(e){return U||function(e){const t=e.Schema;U=new t({})}(e),U}function H(e){const t=V.getModelFrom(e);k=t.discriminator("PositionalAudio",R(e))}var z={name:"PositionalAudio",getSchemaFrom:R,getModelFrom:function(e){return k||H(e),k},registerModelTo:function(e){return k||H(e),e}};
/**
 * @module Schemas/Camera/ArrayCamera
 * @desc Export the ThreeJs ArrayCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Y}=B;let Q,W;function X(e){return Q||function(e){const t=e.Schema;Q=new t({})}(e),Q}function Z(e){const t=Y.getModelFrom(e);W=t.discriminator("ArrayCamera",X(e))}var J={name:"ArrayCamera",getSchemaFrom:X,getModelFrom:function(e){return W||Z(e),W},registerModelTo:function(e){return W||Z(e),e}};
/**
 * @module Schemas/Camera/Camera
 * @desc Export the ThreeJs Camera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:q}=B;let K,ee;function te(e){return K||function(e){const t=e.Schema;K=new t({})}(e),K}function re(e){const t=q.getModelFrom(e);ee=t.discriminator("Camera",te(e))}var ne={name:"Camera",getSchemaFrom:te,getModelFrom:function(e){return ee||re(e),ee},registerModelTo:function(e){return ee||re(e),e}};
/**
 * @module Schemas/Camera/CubeCamera
 * @desc Export the ThreeJs CubeCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:oe}=B;let ie,ae;function ce(e){return ie||function(e){const t=e.Schema;ie=new t({})}(e),ie}function se(e){const t=oe.getModelFrom(e);ae=t.discriminator("CubeCamera",ce(e))}var ue={name:"CubeCamera",getSchemaFrom:ce,getModelFrom:function(e){return ae||se(e),ae},registerModelTo:function(e){return ae||se(e),e}};
/**
 * @module Schemas/Camera/OrthographicCamera
 * @desc Export the ThreeJs OrthographicCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:me}=B;let de,le;function fe(e){return de||function(e){const t=e.Schema;de=new t({})}(e),de}function he(e){const t=me.getModelFrom(e);le=t.discriminator("OrthographicCamera",fe(e))}var ge={name:"OrthographicCamera",getSchemaFrom:fe,getModelFrom:function(e){return le||he(e),le},registerModelTo:function(e){return le||he(e),e}};
/**
 * @module Schemas/Camera/PerspectiveCamera
 * @desc Export the ThreeJs PerspectiveCamera Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:pe}=B;let Se,ye;function Me(e){return Se||function(e){const t=e.Schema;Se=new t({})}(e),Se}function be(e){const t=pe.getModelFrom(e);ye=t.discriminator("PerspectiveCamera",Me(e))}var Te={name:"PerspectiveCamera",getSchemaFrom:Me,getModelFrom:function(e){return ye||be(e),ye},registerModelTo:function(e){return ye||be(e),e}};
/**
 * @module Schemas/Core/BufferAttribute
 * @desc Export the ThreeJs BufferAttribute Model and Schema for Mongoose.
 *
 * @requires {@link https://github.com/Itee/itee-validators itee-validators}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{isInt8Array:Fe,isInt16Array:we,isInt32Array:ve,isFloat32Array:_e,isFloat64Array:Ne,isUint8Array:Be,isUint8ClampedArray:Ce,isUint16Array:Oe,isUint32Array:De,isBigInt64Array:xe,isBigUint64Array:Ie}=s.default;let Ae;var Ee={name:"BufferAttribute",getSchemaFrom:function(e){return Ae||function(e){const t=e.Schema,r=t.Types.Mixed,n=1,o=2,i=4,a=8,c={Int8Array:0,Uint8Array:1,Uint8ClampedArray:2,Int16Array:3,Uint16Array:4,Int32Array:5,Uint32Array:6,Float32Array:7,Float64Array:8,BigInt64Array:9,BigUint64Array:10};Ae=new t({array:{type:Buffer,set:e=>{const t=e.length;let r=null,s=0;if(Fe(e)){r=Buffer.allocUnsafe(n+t*n),s=r.writeUInt8(c.Int8Array,s);for(let n=0;n<t;n++)s=r.writeInt8(e[n],s)}else if(Be(e)){r=Buffer.allocUnsafe(n+t*n),s=r.writeUInt8(c.Uint8Array,s);for(let n=0;n<t;n++)s=r.writeUInt8(e[n],s)}else if(Ce(e)){r=Buffer.allocUnsafe(n+t*n),s=r.writeUInt8(c.Uint8ClampedArray,s);for(let n=0;n<t;n++)s=r.writeUInt8(e[n],s)}else if(we(e)){r=Buffer.allocUnsafe(n+t*o),s=r.writeUInt8(c.Int16Array,s);for(let n=0;n<t;n++)s=r.writeInt16BE(e[n],s)}else if(Oe(e)){r=Buffer.allocUnsafe(n+t*o),s=r.writeUInt8(c.Uint16Array,s);for(let n=0;n<t;n++)s=r.writeUInt16BE(e[n],s)}else if(ve(e)){r=Buffer.allocUnsafe(n+t*i),s=r.writeUInt8(c.Int32Array,s);for(let n=0;n<t;n++)s=r.writeInt32BE(e[n],s)}else if(De(e)){r=Buffer.allocUnsafe(n+t*i),s=r.writeUInt8(c.Uint32Array,s);for(let n=0;n<t;n++)s=r.writeUInt32BE(e[n],s)}else if(_e(e)){r=Buffer.allocUnsafe(n+t*i),s=r.writeUInt8(c.Float32Array,s);for(let n=0;n<t;n++)s=r.writeFloatBE(e[n],s)}else if(Ne(e)){r=Buffer.allocUnsafe(n+t*a),s=r.writeUInt8(c.Float64Array,s);for(let n=0;n<t;n++)s=r.writeDoubleBE(e[n],s)}else if(xe(e)){r=Buffer.allocUnsafe(n+t*a),s=r.writeUInt8(c.BigInt64Array,s);for(let n=0;n<t;n++)s=r.writeDoubleBE(e[n],s)}else{if(!Ie(e))throw new Error("Unable to determine the array type to bufferize.");r=Buffer.allocUnsafe(n+t*a),s=r.writeUInt8(c.BigUint64Array,s);for(let n=0;n<t;n++)s=r.writeDoubleBE(e[n],s)}return r}},count:Number,dynamic:Boolean,itemSize:Number,name:String,needsUpdate:Boolean,normalized:Boolean,updateRange:r,uuid:String,version:Number},{_id:!1,id:!1})}(e),Ae},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Core/BufferGeometry
 * @desc Export the ThreeJs BufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferAttribute Schemas/Core/BufferAttribute}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Ge,Le;function Pe(e){return Ge||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Vector3,i=Ee.getSchemaFrom(e);Ge=new t({uuid:String,name:String,type:String,index:i,attributes:{position:i,normal:i,color:i,uv:i},groups:n,boundingBox:{min:o,max:o},boundingSphere:{center:o,radius:Number},drawRange:n},{collection:"geometries",discriminatorKey:"type"})}(e),Ge}function je(e){Le=e.model("BufferGeometries",Pe(e)),Le.discriminator("BufferGeometry",new e.Schema({}))}const $e={getSchemaFrom:Pe,getModelFrom:function(e){return Le||je(e),Le},registerModelTo:function(e){return Le||je(e),e}};var Ve=Object.freeze({__proto__:null,BufferGeometry:$e}),Ue={};
/**
 * @module Schemas/Curves/Curve
 * @desc Export the ThreeJs Curve Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
let ke,Re;function He(e){return ke||function(e){const t=e.Schema;ke=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{collection:"curves",discriminatorKey:"type"})}(e),ke}function ze(e){Re=e.model("Curves",He(e)),Re.discriminator("Curve",new e.Schema({}))}var Ye=Ue.Curve={name:"Curve",getSchemaFrom:He,getModelFrom:function(e){return Re||ze(e),Re},registerModelTo:function(e){return Re||ze(e),e}};
/**
 * @module Schemas/Core/CurvePath
 * @desc Export the ThreeJs CurvePath Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 * @augments module:Schemas/Curves/Curve
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Qe}=Ue;let We,Xe;function Ze(e){return We||function(e){const t=e.Schema,r=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});We=new t({curves:[r],autoClose:{type:Boolean,default:!1}})}(e),We}function Je(e){const t=Qe.getModelFrom(e);Xe=t.discriminator("CurvePath",Ze(e))}var qe={name:"CurvePath",getSchemaFrom:Ze,getModelFrom:function(e){return Xe||Je(e),Xe},registerModelTo:function(e){return Xe||Je(e),e}};
/**
 * @module Schemas/Core/Face3
 * @desc Export the ThreeJs Face3 Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Ke;var et={name:"Face3",getSchemaFrom:function(e){return Ke||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Vector3;Ke=new t({a:Number,b:Number,c:Number,normal:o,vertexNormals:[Number],color:n,vertexColors:[Number],materialIndex:Number},{_id:!1,id:!1})}(e),Ke},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Core/Geometry
 * @desc Export the ThreeJs Geometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Face3 Schemas/Core/Face3}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let tt,rt;function nt(e){return tt||function(e){const t=et.getSchemaFrom(e),r=e.Schema,n=r.Types.Vector3;tt=new r({uuid:String,name:String,type:String,vertices:[n],colors:[Number],faces:[t],faceVertexUvs:[[Number]],morphTargets:[Number],morphNormals:[Number],skinWeights:[Number],skinIndices:[Number],lineDistances:[Number],boundingBox:{min:n,max:n},boundingSphere:{center:n,radius:Number},elementsNeedUpdate:Boolean,verticesNeedUpdate:Boolean,uvsNeedUpdate:Boolean,normalsNeedUpdate:Boolean,colorsNeedUpdate:Boolean,lineDistancesNeedUpdate:Boolean,groupsNeedUpdate:Boolean},{collection:"geometries",discriminatorKey:"type"})}(e),tt}function ot(e){rt=e.model("Geometries",nt(e)),rt.discriminator("Geometry",new e.Schema({}))}const it={name:"Geometry",getSchemaFrom:nt,getModelFrom:function(e){return rt||ot(e),rt},registerModelTo:function(e){return rt||ot(e),e}};var at=Object.freeze({__proto__:null,Geometry:it});
/**
 * @module Schemas/Core/Path
 * @desc Export the ThreeJs Path Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:ct}=Ue;let st,ut;function mt(e){return st||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});st=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r})}(e),st}function dt(e){const t=ct.getModelFrom(e);ut=t.discriminator("Path",mt(e))}var lt={name:"Path",getSchemaFrom:mt,getModelFrom:function(e){return ut||dt(e),ut},registerModelTo:function(e){return ut||dt(e),e}};
/**
 * @module Schemas/Core/Shape
 * @desc Export the ThreeJs Shape Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:ft}=Ue;let ht,gt;function pt(e){return ht||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),o=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1});ht=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[o]})}(e),ht}function St(e){const t=ft.getModelFrom(e);gt=t.discriminator("Shape",pt(e))}var yt={name:"Shape",getSchemaFrom:pt,getModelFrom:function(e){return gt||St(e),gt},registerModelTo:function(e){return gt||St(e),e}};
/**
 * @module Schemas/Curves/ArcCurve
 * @desc Export the ThreeJs ArcCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Mt}=Ue;let bt,Tt;function Ft(e){return bt||function(e){const t=e.Schema;bt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),bt}function wt(e){const t=Mt.getModelFrom(e);Tt=t.discriminator("ArcCurve",Ft(e))}var vt={name:"ArcCurve",getSchemaFrom:Ft,getModelFrom:function(e){return Tt||wt(e),Tt},registerModelTo:function(e){return Tt||wt(e),e}};
/**
 * @module Schemas/Curves/CatmullRomCurve3
 * @desc Export the ThreeJs CatmullRomCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:_t}=Ue;let Nt,Bt;function Ct(e){return Nt||function(e){const t=e.Schema,r=t.Types.Vector3;Nt=new t({points:[r],closed:Boolean,curveType:String,tension:Number})}(e),Nt}function Ot(e){const t=_t.getModelFrom(e);Bt=t.discriminator("CatmullRomCurve3",Ct(e))}var Dt={name:"CatmullRomCurve3",getSchemaFrom:Ct,getModelFrom:function(e){return Bt||Ot(e),Bt},registerModelTo:function(e){return Bt||Ot(e),e}};
/**
 * @module Schemas/Curves/CubicBezierCurve
 * @desc Export the ThreeJs CubicBezierCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:xt}=Ue;let It,At;function Et(e){return It||function(e){const t=e.Schema,r=t.Types.Vector2;It=new t({v0:r,v1:r,v2:r,v3:r})}(e),It}function Gt(e){const t=xt.getModelFrom(e);At=t.discriminator("CubicBezierCurve",Et(e))}var Lt={name:"CubicBezierCurve",getSchemaFrom:Et,getModelFrom:function(e){return At||Gt(e),At},registerModelTo:function(e){return At||Gt(e),e}};
/**
 * @module Schemas/Curves/CubicBezierCurve3
 * @desc Export the ThreeJs CubicBezierCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Pt}=Ue;let jt,$t;function Vt(e){return jt||function(e){const t=e.Schema,r=t.Types.Vector3;jt=new t({v0:r,v1:r,v2:r,v3:r})}(e),jt}function Ut(e){const t=Pt.getModelFrom(e);$t=t.discriminator("CubicBezierCurve3",Vt(e))}var kt={name:"CubicBezierCurve3",getSchemaFrom:Vt,getModelFrom:function(e){return $t||Ut(e),$t},registerModelTo:function(e){return $t||Ut(e),e}};
/**
 * @module Schemas/Curves/CurveExtras
 * @desc Export the ThreeJs CurveExtras Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Rt}=Ue;let Ht,zt;function Yt(e){return Ht||function(e){const t=e.Schema;Ht=new t({})}(e),Ht}function Qt(e){const t=Rt.getModelFrom(e);zt=t.discriminator("CurveExtras",Yt(e))}var Wt={name:"CurveExtras",getSchemaFrom:Yt,getModelFrom:function(e){return zt||Qt(e),zt},registerModelTo:function(e){return zt||Qt(e),e}};
/**
 * @module Schemas/Curves/EllipseCurve
 * @desc Export the ThreeJs EllipseCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Xt}=Ue;let Zt,Jt;function qt(e){return Zt||function(e){const t=e.Schema;Zt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),Zt}function Kt(e){const t=Xt.getModelFrom(e);Jt=t.discriminator("EllipseCurve",qt(e))}var er={name:"EllipseCurve",getSchemaFrom:qt,getModelFrom:function(e){return Jt||Kt(e),Jt},registerModelTo:function(e){return Jt||Kt(e),e}};
/**
 * @module Schemas/Curves/LineCurve
 * @desc Export the ThreeJs LineCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:tr}=Ue;let rr,nr;function or(e){return rr||function(e){const t=e.Schema,r=t.Types.Vector2;rr=new t({v0:r,v1:r})}(e),rr}function ir(e){const t=tr.getModelFrom(e);nr=t.discriminator("LineCurve",or(e))}var ar={name:"LineCurve",getSchemaFrom:or,getModelFrom:function(e){return nr||ir(e),nr},registerModelTo:function(e){return nr||ir(e),e}};
/**
 * @module Schemas/Curves/LineCurve3
 * @desc Export the ThreeJs LineCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:cr}=Ue;let sr,ur;function mr(e){return sr||function(e){const t=e.Schema,r=t.Types.Vector3;sr=new t({v0:r,v1:r})}(e),sr}function dr(e){const t=cr.getModelFrom(e);ur=t.discriminator("LineCurve3",mr(e))}var lr={name:"LineCurve3",getSchemaFrom:mr,getModelFrom:function(e){return ur||dr(e),ur},registerModelTo:function(e){return ur||dr(e),e}};
/**
 * @module Schemas/Curves/NURBSCurve
 * @desc Export the ThreeJs NURBSCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:fr}=Ue;let hr,gr;function pr(e){return hr||function(e){const t=e.Schema;hr=new t({})}(e),hr}function Sr(e){const t=fr.getModelFrom(e);gr=t.discriminator("NURBSCurve",pr(e))}var yr={name:"NURBSCurve",getSchemaFrom:pr,getModelFrom:function(e){return gr||Sr(e),gr},registerModelTo:function(e){return gr||Sr(e),e}};
/**
 * @module Schemas/Curves/NURBSSurface
 * @desc Export the ThreeJs NURBSSurface Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Mr}=Ue;let br,Tr;function Fr(e){return br||function(e){const t=e.Schema;br=new t({})}(e),br}function wr(e){const t=Mr.getModelFrom(e);Tr=t.discriminator("NURBSSurface",Fr(e))}var vr={name:"NURBSSurface",getSchemaFrom:Fr,getModelFrom:function(e){return Tr||wr(e),Tr},registerModelTo:function(e){return Tr||wr(e),e}};
/**
 * @module Schemas/Curves/QuadraticBezierCurve
 * @desc Export the ThreeJs QuadraticBezierCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:_r}=Ue;let Nr,Br;function Cr(e){return Nr||function(e){const t=e.Schema,r=t.Types.Vector2;Nr=new t({v0:r,v1:r,v2:r})}(e),Nr}function Or(e){const t=_r.getModelFrom(e);Br=t.discriminator("QuadraticBezierCurve",Cr(e))}var Dr={name:"QuadraticBezierCurve",getSchemaFrom:Cr,getModelFrom:function(e){return Br||Or(e),Br},registerModelTo:function(e){return Br||Or(e),e}};
/**
 * @module Schemas/Curves/QuadraticBezierCurve3
 * @desc Export the ThreeJs QuadraticBezierCurve3 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:xr}=Ue;let Ir,Ar;function Er(e){return Ir||function(e){const t=e.Schema,r=t.Types.Vector3;Ir=new t({v0:r,v1:r,v2:r})}(e),Ir}function Gr(e){const t=xr.getModelFrom(e);Ar=t.discriminator("QuadraticBezierCurve3",Er(e))}var Lr={name:"QuadraticBezierCurve3",getSchemaFrom:Er,getModelFrom:function(e){return Ar||Gr(e),Ar},registerModelTo:function(e){return Ar||Gr(e),e}};
/**
 * @module Schemas/Curves/SplineCurve
 * @desc Export the ThreeJs SplineCurve Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Curves/Curve Schemas/Curves/Curve}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Curve:Pr}=Ue;let jr,$r;function Vr(e){return jr||function(e){const t=e.Schema,r=t.Types.Vector3;jr=new t({points:[r]})}(e),jr}function Ur(e){const t=Pr.getModelFrom(e);$r=t.discriminator("SplineCurve",Vr(e))}var kr={name:"SplineCurve",getSchemaFrom:Vr,getModelFrom:function(e){return $r||Ur(e),$r},registerModelTo:function(e){return $r||Ur(e),e}},Rr=_(Ve);
/**
 * @module Schemas/Geometries/BoxBufferGeometry
 * @desc Export the ThreeJs BoxBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{BufferGeometry:Hr}=Rr;let zr,Yr;function Qr(e){return zr||function(e){const t=e.Schema;zr=new t({})}(e),zr}function Wr(e){const t=Hr.getModelFrom(e);Yr=t.discriminator("BoxBufferGeometry",Qr(e))}var Xr={name:"BoxBufferGeometry",getSchemaFrom:Qr,getModelFrom:function(e){return Yr||Wr(e),Yr},registerModelTo:function(e){return Yr||Wr(e),e}},Zr=_(at);
/**
 * @module Schemas/Geometries/BoxGeometry
 * @desc Export the ThreeJs BoxGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
const{Geometry:Jr}=Zr;let qr,Kr;function en(e){return qr||function(e){const t=e.Schema;qr=new t({})}(e),qr}function tn(e){const t=Jr.getModelFrom(e);Kr=t.discriminator("BoxGeometry",en(e))}var rn={name:"BoxGeometry",getSchemaFrom:en,getModelFrom:function(e){return Kr||tn(e),Kr},registerModelTo:function(e){return Kr||tn(e),e}};
/**
 * @module Schemas/Geometries/CircleBufferGeometry
 * @desc Export the ThreeJs CircleBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:nn}=Rr;let on,an;function cn(e){return on||function(e){const t=e.Schema;on=new t({})}(e),on}function sn(e){const t=nn.getModelFrom(e);an=t.discriminator("CircleBufferGeometry",cn(e))}var un={name:"CircleBufferGeometry",getSchemaFrom:cn,getModelFrom:function(e){return an||sn(e),an},registerModelTo:function(e){return an||sn(e),e}};
/**
 * @module Schemas/Geometries/CircleGeometry
 * @desc Export the ThreeJs CircleGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:mn}=Zr;let dn,ln;function fn(e){return dn||function(e){const t=e.Schema;dn=new t({})}(e),dn}function hn(e){const t=mn.getModelFrom(e);ln=t.discriminator("CircleGeometry",fn(e))}var gn={name:"CircleGeometry",getSchemaFrom:fn,getModelFrom:function(e){return ln||hn(e),ln},registerModelTo:function(e){return ln||hn(e),e}};
/**
 * @module Schemas/Geometries/ConeBufferGeometry
 * @desc Export the ThreeJs ConeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:pn}=Rr;let Sn,yn;function Mn(e){return Sn||function(e){const t=e.Schema;Sn=new t({})}(e),Sn}function bn(e){const t=pn.getModelFrom(e);yn=t.discriminator("ConeBufferGeometry",Mn(e))}var Tn={name:"ConeBufferGeometry",getSchemaFrom:Mn,getModelFrom:function(e){return yn||bn(e),yn},registerModelTo:function(e){return yn||bn(e),e}};
/**
 * @module Schemas/Geometries/ConeGeometry
 * @desc Export the ThreeJs ConeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Fn}=Zr;let wn,vn;function _n(e){return wn||function(e){const t=e.Schema;wn=new t({})}(e),wn}function Nn(e){const t=Fn.getModelFrom(e);vn=t.discriminator("ConeGeometry",_n(e))}var Bn={name:"ConeGeometry",getSchemaFrom:_n,getModelFrom:function(e){return vn||Nn(e),vn},registerModelTo:function(e){return vn||Nn(e),e}};
/**
 * @module Schemas/Geometries/ConvexGeometry
 * @desc Export the ThreeJs ConvexGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Cn}=Zr;let On,Dn;function xn(e){return On||function(e){const t=e.Schema;On=new t({})}(e),On}function In(e){const t=Cn.getModelFrom(e);Dn=t.discriminator("ConvexGeometry",xn(e))}var An={name:"ConvexGeometry",getSchemaFrom:xn,getModelFrom:function(e){return Dn||In(e),Dn},registerModelTo:function(e){return Dn||In(e),e}};
/**
 * @module Schemas/Geometries/CylinderBufferGeometry
 * @desc Export the ThreeJs CylinderBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:En}=Rr;let Gn,Ln;function Pn(e){return Gn||function(e){const t=e.Schema;Gn=new t({})}(e),Gn}function jn(e){const t=En.getModelFrom(e);Ln=t.discriminator("CylinderBufferGeometry",Pn(e))}var $n={name:"CylinderBufferGeometry",getSchemaFrom:Pn,getModelFrom:function(e){return Ln||jn(e),Ln},registerModelTo:function(e){return Ln||jn(e),e}};
/**
 * @module Schemas/Geometries/CylinderGeometry
 * @desc Export the ThreeJs CylinderGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Vn}=Zr;let Un,kn;function Rn(e){return Un||function(e){const t=e.Schema;Un=new t({})}(e),Un}function Hn(e){const t=Vn.getModelFrom(e);kn=t.discriminator("CylinderGeometry",Rn(e))}var zn={name:"CylinderGeometry",getSchemaFrom:Rn,getModelFrom:function(e){return kn||Hn(e),kn},registerModelTo:function(e){return kn||Hn(e),e}};
/**
 * @module Schemas/Geometries/DecalGeometry
 * @desc Export the ThreeJs DecalGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Yn}=Zr;let Qn,Wn;function Xn(e){return Qn||function(e){const t=e.Schema;Qn=new t({})}(e),Qn}function Zn(e){const t=Yn.getModelFrom(e);Wn=t.discriminator("DecalGeometry",Xn(e))}var Jn={name:"DecalGeometry",getSchemaFrom:Xn,getModelFrom:function(e){return Wn||Zn(e),Wn},registerModelTo:function(e){return Wn||Zn(e),e}};
/**
 * @module Schemas/Geometries/DodecahedronGeometry
 * @desc Export the ThreeJs DodecahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:qn}=Zr;let Kn,eo;function to(e){return Kn||function(e){const t=e.Schema;Kn=new t({})}(e),Kn}function ro(e){const t=qn.getModelFrom(e);eo=t.discriminator("DodecahedronGeometry",to(e))}var no={name:"DodecahedronGeometry",getSchemaFrom:to,getModelFrom:function(e){return eo||ro(e),eo},registerModelTo:function(e){return eo||ro(e),e}};
/**
 * @module Schemas/Geometries/EdgesGeometry
 * @desc Export the ThreeJs EdgesGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:oo}=Zr;let io,ao;function co(e){return io||function(e){const t=e.Schema;io=new t({})}(e),io}function so(e){const t=oo.getModelFrom(e);ao=t.discriminator("EdgesGeometry",co(e))}var uo={name:"EdgesGeometry",getSchemaFrom:co,getModelFrom:function(e){return ao||so(e),ao},registerModelTo:function(e){return ao||so(e),e}};
/**
 * @module Schemas/Geometries/ExtrudeBufferGeometry
 * @desc Export the ThreeJs ExtrudeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:mo}=Rr;let lo,fo;function ho(e){return lo||function(e){const t=e.Schema;lo=new t({})}(e),lo}function go(e){const t=mo.getModelFrom(e);fo=t.discriminator("ExtrudeBufferGeometry",ho(e))}var po={name:"ExtrudeBufferGeometry",getSchemaFrom:ho,getModelFrom:function(e){return fo||go(e),fo},registerModelTo:function(e){return fo||go(e),e}};
/**
 * @module Schemas/Geometries/ExtrudeGeometry
 * @desc Export the ThreeJs ExtrudeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:So}=Zr;let yo,Mo;function bo(e){return yo||function(e){const t=e.Schema;yo=new t({})}(e),yo}function To(e){const t=So.getModelFrom(e);Mo=t.discriminator("ExtrudeGeometry",bo(e))}var Fo={name:"ExtrudeGeometry",getSchemaFrom:bo,getModelFrom:function(e){return Mo||To(e),Mo},registerModelTo:function(e){return Mo||To(e),e}};
/**
 * @module Schemas/Geometries/IcosahedronBufferGeometry
 * @desc Export the ThreeJs IcosahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:wo}=Rr;let vo,_o;function No(e){return vo||function(e){const t=e.Schema;vo=new t({})}(e),vo}function Bo(e){const t=wo.getModelFrom(e);_o=t.discriminator("IcosahedronBufferGeometry",No(e))}var Co={name:"IcosahedronBufferGeometry",getSchemaFrom:No,getModelFrom:function(e){return _o||Bo(e),_o},registerModelTo:function(e){return _o||Bo(e),e}};
/**
 * @module Schemas/Geometries/IcosahedronGeometry
 * @desc Export the ThreeJs IcosahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Oo}=Zr;let Do,xo;function Io(e){return Do||function(e){const t=e.Schema;Do=new t({})}(e),Do}function Ao(e){const t=Oo.getModelFrom(e);xo=t.discriminator("IcosahedronGeometry",Io(e))}var Eo={name:"IcosahedronGeometry",getSchemaFrom:Io,getModelFrom:function(e){return xo||Ao(e),xo},registerModelTo:function(e){return xo||Ao(e),e}};
/**
 * @module Schemas/Geometries/InstancedBufferGeometry
 * @desc Export the ThreeJs InstancedBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Go}=Rr;let Lo,Po;function jo(e){return Lo||function(e){const t=e.Schema;Lo=new t({})}(e),Lo}function $o(e){const t=Go.getModelFrom(e);Po=t.discriminator("InstancedBufferGeometry",jo(e))}var Vo={name:"InstancedBufferGeometry",getSchemaFrom:jo,getModelFrom:function(e){return Po||$o(e),Po},registerModelTo:function(e){return Po||$o(e),e}};
/**
 * @module Schemas/Geometries/LatheBufferGeometry
 * @desc Export the ThreeJs LatheBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Uo}=Rr;let ko,Ro;function Ho(e){return ko||function(e){const t=e.Schema;ko=new t({})}(e),ko}function zo(e){const t=Uo.getModelFrom(e);Ro=t.discriminator("LatheBufferGeometry",Ho(e))}var Yo={name:"LatheBufferGeometry",getSchemaFrom:Ho,getModelFrom:function(e){return Ro||zo(e),Ro},registerModelTo:function(e){return Ro||zo(e),e}};
/**
 * @module Schemas/Geometries/LatheGeometry
 * @desc Export the ThreeJs LatheGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Qo}=Zr;let Wo,Xo;function Zo(e){return Wo||function(e){const t=e.Schema;Wo=new t({})}(e),Wo}function Jo(e){const t=Qo.getModelFrom(e);Xo=t.discriminator("LatheGeometry",Zo(e))}var qo={name:"LatheGeometry",getSchemaFrom:Zo,getModelFrom:function(e){return Xo||Jo(e),Xo},registerModelTo:function(e){return Xo||Jo(e),e}};
/**
 * @module Schemas/Geometries/OctahedronBufferGeometry
 * @desc Export the ThreeJs OctahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ko}=Rr;let ei,ti;function ri(e){return ei||function(e){const t=e.Schema;ei=new t({})}(e),ei}function ni(e){const t=Ko.getModelFrom(e);ti=t.discriminator("OctahedronBufferGeometry",ri(e))}var oi={name:"OctahedronBufferGeometry",getSchemaFrom:ri,getModelFrom:function(e){return ti||ni(e),ti},registerModelTo:function(e){return ti||ni(e),e}};
/**
 * @module Schemas/Geometries/OctahedronGeometry
 * @desc Export the ThreeJs OctahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:ii}=Zr;let ai,ci;function si(e){return ai||function(e){const t=e.Schema;ai=new t({})}(e),ai}function ui(e){const t=ii.getModelFrom(e);ci=t.discriminator("OctahedronGeometry",si(e))}var mi={name:"OctahedronGeometry",getSchemaFrom:si,getModelFrom:function(e){return ci||ui(e),ci},registerModelTo:function(e){return ci||ui(e),e}};
/**
 * @module Schemas/Geometries/ParametricBufferGeometry
 * @desc Export the ThreeJs ParametricBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:di}=Rr;let li,fi;function hi(e){return li||function(e){const t=e.Schema;li=new t({})}(e),li}function gi(e){const t=di.getModelFrom(e);fi=t.discriminator("ParametricBufferGeometry",hi(e))}var pi={name:"ParametricBufferGeometry",getSchemaFrom:hi,getModelFrom:function(e){return fi||gi(e),fi},registerModelTo:function(e){return fi||gi(e),e}};
/**
 * @module Schemas/Geometries/ParametricGeometry
 * @desc Export the ThreeJs ParametricGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Si}=Zr;let yi,Mi;function bi(e){return yi||function(e){const t=e.Schema;yi=new t({})}(e),yi}function Ti(e){const t=Si.getModelFrom(e);Mi=t.discriminator("ParametricGeometry",bi(e))}var Fi={name:"ParametricGeometry",getSchemaFrom:bi,getModelFrom:function(e){return Mi||Ti(e),Mi},registerModelTo:function(e){return Mi||Ti(e),e}};
/**
 * @module Schemas/Geometries/PlaneBufferGeometry
 * @desc Export the ThreeJs PlaneBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:wi}=Rr;let vi,_i;function Ni(e){return vi||function(e){const t=e.Schema;vi=new t({})}(e),vi}function Bi(e){const t=wi.getModelFrom(e);_i=t.discriminator("PlaneBufferGeometry",Ni(e))}var Ci={name:"PlaneBufferGeometry",getSchemaFrom:Ni,getModelFrom:function(e){return _i||Bi(e),_i},registerModelTo:function(e){return _i||Bi(e),e}};
/**
 * @module Schemas/Geometries/PlaneGeometry
 * @desc Export the ThreeJs PlaneGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Oi}=Zr;let Di,xi;function Ii(e){return Di||function(e){const t=e.Schema;Di=new t({})}(e),Di}function Ai(e){const t=Oi.getModelFrom(e);xi=t.discriminator("PlaneGeometry",Ii(e))}var Ei={name:"PlaneGeometry",getSchemaFrom:Ii,getModelFrom:function(e){return xi||Ai(e),xi},registerModelTo:function(e){return xi||Ai(e),e}};
/**
 * @module Schemas/Geometries/PolyhedronBufferGeometry
 * @desc Export the ThreeJs PolyhedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Gi}=Rr;let Li,Pi;function ji(e){return Li||function(e){const t=e.Schema;Li=new t({})}(e),Li}function $i(e){const t=Gi.getModelFrom(e);Pi=t.discriminator("PolyhedronBufferGeometry",ji(e))}var Vi={name:"PolyhedronBufferGeometry",getSchemaFrom:ji,getModelFrom:function(e){return Pi||$i(e),Pi},registerModelTo:function(e){return Pi||$i(e),e}};
/**
 * @module Schemas/Geometries/PolyhedronGeometry
 * @desc Export the ThreeJs PolyhedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ui}=Zr;let ki,Ri;function Hi(e){return ki||function(e){const t=e.Schema;ki=new t({})}(e),ki}function zi(e){const t=Ui.getModelFrom(e);Ri=t.discriminator("PolyhedronGeometry",Hi(e))}var Yi={name:"PolyhedronGeometry",getSchemaFrom:Hi,getModelFrom:function(e){return Ri||zi(e),Ri},registerModelTo:function(e){return Ri||zi(e),e}};
/**
 * @module Schemas/Geometries/RingBufferGeometry
 * @desc Export the ThreeJs RingBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Qi}=Rr;let Wi,Xi;function Zi(e){return Wi||function(e){const t=e.Schema;Wi=new t({})}(e),Wi}function Ji(e){const t=Qi.getModelFrom(e);Xi=t.discriminator("RingBufferGeometry",Zi(e))}var qi={name:"RingBufferGeometry",getSchemaFrom:Zi,getModelFrom:function(e){return Xi||Ji(e),Xi},registerModelTo:function(e){return Xi||Ji(e),e}};
/**
 * @module Schemas/Geometries/RingGeometry
 * @desc Export the ThreeJs RingGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ki}=Zr;let ea,ta;function ra(e){return ea||function(e){const t=e.Schema;ea=new t({})}(e),ea}function na(e){const t=Ki.getModelFrom(e);ta=t.discriminator("RingGeometry",ra(e))}var oa={name:"RingGeometry",getSchemaFrom:ra,getModelFrom:function(e){return ta||na(e),ta},registerModelTo:function(e){return ta||na(e),e}};
/**
 * @module Schemas/Geometries/ShapeBufferGeometry
 * @desc Export the ThreeJs ShapeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:ia}=Rr;let aa,ca;function sa(e){return aa||function(e){const t=e.Schema,r=t.Types.Vector2,n=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),o=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1}),i=new t({curves:[n],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[o]},{id:!1,_id:!1});aa=new t({shapes:[i],curveSegments:Number})}(e),aa}function ua(e){const t=ia.getModelFrom(e);ca=t.discriminator("ShapeBufferGeometry",sa(e))}var ma={name:"ShapeBufferGeometry",getSchemaFrom:sa,getModelFrom:function(e){return ca||ua(e),ca},registerModelTo:function(e){return ca||ua(e),e}};
/**
 * @module Schemas/Geometries/ShapeGeometry
 * @desc Export the ThreeJs ShapeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:da}=Zr;let la,fa;function ha(e){return la||function(e){const t=e.Schema;la=new t({})}(e),la}function ga(e){const t=da.getModelFrom(e);fa=t.discriminator("ShapeGeometry",ha(e))}var pa={name:"ShapeGeometry",getSchemaFrom:ha,getModelFrom:function(e){return fa||ga(e),fa},registerModelTo:function(e){return fa||ga(e),e}};
/**
 * @module Schemas/Geometries/SphereBufferGeometry
 * @desc Export the ThreeJs SphereBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Sa}=Rr;let ya,Ma;function ba(e){return ya||function(e){const t=e.Schema;ya=new t({})}(e),ya}function Ta(e){const t=Sa.getModelFrom(e);Ma=t.discriminator("SphereBufferGeometry",ba(e))}var Fa={name:"SphereBufferGeometry",getSchemaFrom:ba,getModelFrom:function(e){return Ma||Ta(e),Ma},registerModelTo:function(e){return Ma||Ta(e),e}};
/**
 * @module Schemas/Geometries/SphereGeometry
 * @desc Export the ThreeJs SphereGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:wa}=Zr;let va,_a;function Na(e){return va||function(e){const t=e.Schema;va=new t({})}(e),va}function Ba(e){const t=wa.getModelFrom(e);_a=t.discriminator("SphereGeometry",Na(e))}var Ca={name:"SphereGeometry",getSchemaFrom:Na,getModelFrom:function(e){return _a||Ba(e),_a},registerModelTo:function(e){return _a||Ba(e),e}};
/**
 * @module Schemas/Geometries/TeapotBufferGeometry
 * @desc Export the ThreeJs TeapotBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Oa}=Rr;let Da,xa;function Ia(e){return Da||function(e){const t=e.Schema;Da=new t({})}(e),Da}function Aa(e){const t=Oa.getModelFrom(e);xa=t.discriminator("TeapotBufferGeometry",Ia(e))}var Ea={name:"TeapotBufferGeometry",getSchemaFrom:Ia,getModelFrom:function(e){return xa||Aa(e),xa},registerModelTo:function(e){return xa||Aa(e),e}};
/**
 * @module Schemas/Geometries/TetrahedronBufferGeometry
 * @desc Export the ThreeJs TetrahedronBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Ga}=Rr;let La,Pa;function ja(e){return La||function(e){const t=e.Schema;La=new t({})}(e),La}function $a(e){const t=Ga.getModelFrom(e);Pa=t.discriminator("TetrahedronBufferGeometry",ja(e))}var Va={name:"TetrahedronBufferGeometry",getSchemaFrom:ja,getModelFrom:function(e){return Pa||$a(e),Pa},registerModelTo:function(e){return Pa||$a(e),e}};
/**
 * @module Schemas/Geometries/TetrahedronGeometry
 * @desc Export the ThreeJs TetrahedronGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ua}=Zr;let ka,Ra;function Ha(e){return ka||function(e){const t=e.Schema;ka=new t({})}(e),ka}function za(e){const t=Ua.getModelFrom(e);Ra=t.discriminator("TetrahedronGeometry",Ha(e))}var Ya={name:"TetrahedronGeometry",getSchemaFrom:Ha,getModelFrom:function(e){return Ra||za(e),Ra},registerModelTo:function(e){return Ra||za(e),e}};
/**
 * @module Schemas/Geometries/TextBufferGeometry
 * @desc Export the ThreeJs TextBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Qa}=Rr;let Wa,Xa;function Za(e){return Wa||function(e){const t=e.Schema;Wa=new t({})}(e),Wa}function Ja(e){const t=Qa.getModelFrom(e);Xa=t.discriminator("TextBufferGeometry",Za(e))}var qa={name:"TextBufferGeometry",getSchemaFrom:Za,getModelFrom:function(e){return Xa||Ja(e),Xa},registerModelTo:function(e){return Xa||Ja(e),e}};
/**
 * @module Schemas/Geometries/TextGeometry
 * @desc Export the ThreeJs TextGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Ka}=Zr;let ec,tc;function rc(e){return ec||function(e){const t=e.Schema;ec=new t({})}(e),ec}function nc(e){const t=Ka.getModelFrom(e);tc=t.discriminator("TextGeometry",rc(e))}var oc={name:"TextGeometry",getSchemaFrom:rc,getModelFrom:function(e){return tc||nc(e),tc},registerModelTo:function(e){return tc||nc(e),e}};
/**
 * @module Schemas/Geometries/TorusBufferGeometry
 * @desc Export the ThreeJs TorusBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:ic}=Rr;let ac,cc;function sc(e){return ac||function(e){const t=e.Schema;ac=new t({})}(e),ac}function uc(e){const t=ic.getModelFrom(e);cc=t.discriminator("TorusBufferGeometry",sc(e))}var mc={name:"TorusBufferGeometry",getSchemaFrom:sc,getModelFrom:function(e){return cc||uc(e),cc},registerModelTo:function(e){return cc||uc(e),e}};
/**
 * @module Schemas/Geometries/TorusGeometry
 * @desc Export the ThreeJs TorusGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:dc}=Zr;let lc,fc;function hc(e){return lc||function(e){const t=e.Schema;lc=new t({})}(e),lc}function gc(e){const t=dc.getModelFrom(e);fc=t.discriminator("TorusGeometry",hc(e))}var pc={name:"TorusGeometry",getSchemaFrom:hc,getModelFrom:function(e){return fc||gc(e),fc},registerModelTo:function(e){return fc||gc(e),e}};
/**
 * @module Schemas/Geometries/TorusKnotBufferGeometry
 * @desc Export the ThreeJs TorusKnotBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Sc}=Rr;let yc,Mc;function bc(e){return yc||function(e){const t=e.Schema;yc=new t({})}(e),yc}function Tc(e){const t=Sc.getModelFrom(e);Mc=t.discriminator("TorusKnotBufferGeometry",bc(e))}var Fc={name:"TorusKnotBufferGeometry",getSchemaFrom:bc,getModelFrom:function(e){return Mc||Tc(e),Mc},registerModelTo:function(e){return Mc||Tc(e),e}};
/**
 * @module Schemas/Geometries/TorusKnotGeometry
 * @desc Export the ThreeJs TorusKnotGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:wc}=Zr;let vc,_c;function Nc(e){return vc||function(e){const t=e.Schema;vc=new t({})}(e),vc}function Bc(e){const t=wc.getModelFrom(e);_c=t.discriminator("TorusKnotGeometry",Nc(e))}var Cc={name:"TorusKnotGeometry",getSchemaFrom:Nc,getModelFrom:function(e){return _c||Bc(e),_c},registerModelTo:function(e){return _c||Bc(e),e}};
/**
 * @module Schemas/Geometries/TubeBufferGeometry
 * @desc Export the ThreeJs TubeBufferGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{BufferGeometry:Oc}=Rr;let Dc,xc;function Ic(e){return Dc||function(e){const t=e.Schema;Dc=new t({})}(e),Dc}function Ac(e){const t=Oc.getModelFrom(e);xc=t.discriminator("TubeBufferGeometry",Ic(e))}var Ec={name:"TubeBufferGeometry",getSchemaFrom:Ic,getModelFrom:function(e){return xc||Ac(e),xc},registerModelTo:function(e){return xc||Ac(e),e}};
/**
 * @module Schemas/Geometries/TubeGeometry
 * @desc Export the ThreeJs TubeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Geometry Schemas/Core/Geometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Gc}=Zr;let Lc,Pc;function jc(e){return Lc||function(e){const t=e.Schema;Lc=new t({})}(e),Lc}function $c(e){const t=Gc.getModelFrom(e);Pc=t.discriminator("TubeGeometry",jc(e))}var Vc={name:"TubeGeometry",getSchemaFrom:jc,getModelFrom:function(e){return Pc||$c(e),Pc},registerModelTo:function(e){return Pc||$c(e),e}};
/**
 * @module Schemas/Geometries/WireframeGeometry
 * @desc Export the ThreeJs WireframeGeometry Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/BufferGeometry Schemas/Core/BufferGeometry}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Geometry:Uc}=Zr;let kc,Rc;function Hc(e){return kc||function(e){const t=e.Schema;kc=new t({})}(e),kc}function zc(e){const t=Uc.getModelFrom(e);Rc=t.discriminator("WireframeGeometry",Hc(e))}var Yc={name:"WireframeGeometry",getSchemaFrom:Hc,getModelFrom:function(e){return Rc||zc(e),Rc},registerModelTo:function(e){return Rc||zc(e),e}};
/**
 * @module Schemas/Helpers/ArrowHelper
 * @desc Export the ThreeJs ArrowHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Qc}=B;let Wc,Xc;function Zc(e){return Wc||function(e){const t=e.Schema;Wc=new t({})}(e),Wc}function Jc(e){const t=Qc.getModelFrom(e);Xc=t.discriminator("ArrowHelper",Zc(e))}var qc={name:"ArrowHelper",getSchemaFrom:Zc,getModelFrom:function(e){return Xc||Jc(e),Xc},registerModelTo:function(e){return Xc||Jc(e),e}};
/**
 * @module Schemas/Helpers/AxesHelper
 * @desc Export the ThreeJs AxesHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Kc}=B;let es,ts;function rs(e){return es||function(e){const t=e.Schema;es=new t({})}(e),es}function ns(e){const t=Kc.getModelFrom(e);ts=t.discriminator("AxesHelper",rs(e))}var os={name:"AxesHelper",getSchemaFrom:rs,getModelFrom:function(e){return ts||ns(e),ts},registerModelTo:function(e){return ts||ns(e),e}};
/**
 * @module Schemas/Helpers/Box3Helper
 * @desc Export the ThreeJs Box3Helper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:is}=B;let as,cs;function ss(e){return as||function(e){const t=e.Schema;as=new t({})}(e),as}function us(e){const t=is.getModelFrom(e);cs=t.discriminator("Box3Helper",ss(e))}var ms={name:"Box3Helper",getSchemaFrom:ss,getModelFrom:function(e){return cs||us(e),cs},registerModelTo:function(e){return cs||us(e),e}};
/**
 * @module Schemas/Helpers/BoxHelper
 * @desc Export the ThreeJs BoxHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ds}=B;let ls,fs;function hs(e){return ls||function(e){const t=e.Schema;ls=new t({})}(e),ls}function gs(e){const t=ds.getModelFrom(e);fs=t.discriminator("BoxHelper",hs(e))}var ps={name:"BoxHelper",getSchemaFrom:hs,getModelFrom:function(e){return fs||gs(e),fs},registerModelTo:function(e){return fs||gs(e),e}};
/**
 * @module Schemas/Helpers/CameraHelper
 * @desc Export the ThreeJs CameraHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ss}=B;let ys,Ms;function bs(e){return ys||function(e){const t=e.Schema;ys=new t({})}(e),ys}function Ts(e){const t=Ss.getModelFrom(e);Ms=t.discriminator("CameraHelper",bs(e))}var Fs={name:"CameraHelper",getSchemaFrom:bs,getModelFrom:function(e){return Ms||Ts(e),Ms},registerModelTo:function(e){return Ms||Ts(e),e}};
/**
 * @module Schemas/Helpers/DirectionalLightHelper
 * @desc Export the ThreeJs DirectionalLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:ws}=B;let vs,_s;function Ns(e){return vs||function(e){const t=e.Schema;vs=new t({})}(e),vs}function Bs(e){const t=ws.getModelFrom(e);_s=t.discriminator("DirectionalLightHelper",Ns(e))}var Cs={name:"DirectionalLightHelper",getSchemaFrom:Ns,getModelFrom:function(e){return _s||Bs(e),_s},registerModelTo:function(e){return _s||Bs(e),e}};
/**
 * @module Schemas/Helpers/FaceNormalsHelper
 * @desc Export the ThreeJs FaceNormalsHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Os}=B;let Ds,xs;function Is(e){return Ds||function(e){const t=e.Schema;Ds=new t({})}(e),Ds}function As(e){const t=Os.getModelFrom(e);xs=t.discriminator("FaceNormalsHelper",Is(e))}var Es={name:"FaceNormalsHelper",getSchemaFrom:Is,getModelFrom:function(e){return xs||As(e),xs},registerModelTo:function(e){return xs||As(e),e}};
/**
 * @module Schemas/Helpers/GridHelper
 * @desc Export the ThreeJs GridHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Gs}=B;let Ls,Ps;function js(e){return Ls||function(e){const t=e.Schema;Ls=new t({})}(e),Ls}function $s(e){const t=Gs.getModelFrom(e);Ps=t.discriminator("GridHelper",js(e))}var Vs={name:"GridHelper",getSchemaFrom:js,getModelFrom:function(e){return Ps||$s(e),Ps},registerModelTo:function(e){return Ps||$s(e),e}};
/**
 * @module Schemas/Helpers/HemisphereLightHelper
 * @desc Export the ThreeJs HemisphereLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Us}=B;let ks,Rs;function Hs(e){return ks||function(e){const t=e.Schema;ks=new t({})}(e),ks}function zs(e){const t=Us.getModelFrom(e);Rs=t.discriminator("HemisphereLightHelper",Hs(e))}var Ys={name:"HemisphereLightHelper",getSchemaFrom:Hs,getModelFrom:function(e){return Rs||zs(e),Rs},registerModelTo:function(e){return Rs||zs(e),e}};
/**
 * @module Schemas/Helpers/PlaneHelper
 * @desc Export the ThreeJs PlaneHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Qs}=B;let Ws,Xs;function Zs(e){return Ws||function(e){const t=e.Schema;Ws=new t({})}(e),Ws}function Js(e){const t=Qs.getModelFrom(e);Xs=t.discriminator("PlaneHelper",Zs(e))}var qs={name:"PlaneHelper",getSchemaFrom:Zs,getModelFrom:function(e){return Xs||Js(e),Xs},registerModelTo:function(e){return Xs||Js(e),e}};
/**
 * @module Schemas/Helpers/PointLightHelper
 * @desc Export the ThreeJs PointLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ks}=B;let eu,tu;function ru(e){return eu||function(e){const t=e.Schema;eu=new t({})}(e),eu}function nu(e){const t=Ks.getModelFrom(e);tu=t.discriminator("PointLightHelper",ru(e))}var ou={name:"PointLightHelper",getSchemaFrom:ru,getModelFrom:function(e){return tu||nu(e),tu},registerModelTo:function(e){return tu||nu(e),e}};
/**
 * @module Schemas/Helpers/PolarGridHelper
 * @desc Export the ThreeJs PolarGridHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:iu}=B;let au,cu;function su(e){return au||function(e){const t=e.Schema;au=new t({})}(e),au}function uu(e){const t=iu.getModelFrom(e);cu=t.discriminator("PolarGridHelper",su(e))}var mu={name:"PolarGridHelper",getSchemaFrom:su,getModelFrom:function(e){return cu||uu(e),cu},registerModelTo:function(e){return cu||uu(e),e}};
/**
 * @module Schemas/Helpers/RectAreaLightHelper
 * @desc Export the ThreeJs RectAreaLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:du}=B;let lu,fu;function hu(e){return lu||function(e){const t=e.Schema;lu=new t({})}(e),lu}function gu(e){const t=du.getModelFrom(e);fu=t.discriminator("RectAreaLightHelper",hu(e))}var pu={name:"RectAreaLightHelper",getSchemaFrom:hu,getModelFrom:function(e){return fu||gu(e),fu},registerModelTo:function(e){return fu||gu(e),e}};
/**
 * @module Schemas/Helpers/SkeletonHelper
 * @desc Export the ThreeJs SkeletonHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Su}=B;let yu,Mu;function bu(e){return yu||function(e){const t=e.Schema;yu=new t({})}(e),yu}function Tu(e){const t=Su.getModelFrom(e);Mu=t.discriminator("SkeletonHelper",bu(e))}var Fu={name:"SkeletonHelper",getSchemaFrom:bu,getModelFrom:function(e){return Mu||Tu(e),Mu},registerModelTo:function(e){return Mu||Tu(e),e}};
/**
 * @module Schemas/Helpers/SpotLightHelper
 * @desc Export the ThreeJs SpotLightHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:wu}=B;let vu,_u;function Nu(e){return vu||function(e){const t=e.Schema;vu=new t({})}(e),vu}function Bu(e){const t=wu.getModelFrom(e);_u=t.discriminator("SpotLightHelper",Nu(e))}var Cu={name:"SpotLightHelper",getSchemaFrom:Nu,getModelFrom:function(e){return _u||Bu(e),_u},registerModelTo:function(e){return _u||Bu(e),e}};
/**
 * @module Schemas/Helpers/VertexNormalsHelper
 * @desc Export the ThreeJs VertexNormalsHelper Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ou}=B;let Du,xu;function Iu(e){return Du||function(e){const t=e.Schema;Du=new t({})}(e),Du}function Au(e){const t=Ou.getModelFrom(e);xu=t.discriminator("VertexNormalsHelper",Iu(e))}var Eu={name:"VertexNormalsHelper",getSchemaFrom:Iu,getModelFrom:function(e){return xu||Au(e),xu},registerModelTo:function(e){return xu||Au(e),e}};
/**
 * @module Schemas/Lights/AmbientLight
 * @desc Export the ThreeJs AmbientLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Gu}=B;let Lu,Pu;function ju(e){return Lu||function(e){const t=e.Schema;Lu=new t({})}(e),Lu}function $u(e){const t=Gu.getModelFrom(e);Pu=t.discriminator("AmbientLight",ju(e))}var Vu={name:"AmbientLight",getSchemaFrom:ju,getModelFrom:function(e){return Pu||$u(e),Pu},registerModelTo:function(e){return Pu||$u(e),e}};
/**
 * @module Schemas/Lights/DirectionalLight
 * @desc Export the ThreeJs DirectionalLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Uu}=B;let ku,Ru;function Hu(e){return ku||function(e){const t=e.Schema;ku=new t({})}(e),ku}function zu(e){const t=Uu.getModelFrom(e);Ru=t.discriminator("DirectionalLight",Hu(e))}var Yu={name:"DirectionalLight",getSchemaFrom:Hu,getModelFrom:function(e){return Ru||zu(e),Ru},registerModelTo:function(e){return Ru||zu(e),e}};
/**
 * @module Schemas/Lights/HemisphereLight
 * @desc Export the ThreeJs HemisphereLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Qu}=B;let Wu,Xu;function Zu(e){return Wu||function(e){const t=e.Schema;Wu=new t({})}(e),Wu}function Ju(e){const t=Qu.getModelFrom(e);Xu=t.discriminator("HemisphereLight",Zu(e))}var qu={name:"HemisphereLight",getSchemaFrom:Zu,getModelFrom:function(e){return Xu||Ju(e),Xu},registerModelTo:function(e){return Xu||Ju(e),e}};
/**
 * @module Schemas/Lights/Light
 * @desc Export the ThreeJs Light Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Ku}=B;let em,tm;function rm(e){return em||function(e){const t=e.Schema;em=new t({})}(e),em}function nm(e){const t=Ku.getModelFrom(e);tm=t.discriminator("Light",rm(e))}var om={name:"Light",getSchemaFrom:rm,getModelFrom:function(e){return tm||nm(e),tm},registerModelTo:function(e){return tm||nm(e),e}};
/**
 * @module Schemas/Lights/PointLight
 * @desc Export the ThreeJs PointLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:im}=B;let am,cm;function sm(e){return am||function(e){const t=e.Schema;am=new t({})}(e),am}function um(e){const t=im.getModelFrom(e);cm=t.discriminator("PointLight",sm(e))}var mm={name:"PointLight",getSchemaFrom:sm,getModelFrom:function(e){return cm||um(e),cm},registerModelTo:function(e){return cm||um(e),e}};
/**
 * @module Schemas/Lights/RectAreaLight
 * @desc Export the ThreeJs RectAreaLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:dm}=B;let lm,fm;function hm(e){return lm||function(e){const t=e.Schema;lm=new t({})}(e),lm}function gm(e){const t=dm.getModelFrom(e);fm=t.discriminator("RectAreaLight",hm(e))}var pm={name:"RectAreaLight",getSchemaFrom:hm,getModelFrom:function(e){return fm||gm(e),fm},registerModelTo:function(e){return fm||gm(e),e}};
/**
 * @module Schemas/Lights/SpotLight
 * @desc Export the ThreeJs SpotLight Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Sm}=B;let ym,Mm;function bm(e){return ym||function(e){const t=e.Schema;ym=new t({})}(e),ym}function Tm(e){const t=Sm.getModelFrom(e);Mm=t.discriminator("SpotLight",bm(e))}var Fm={name:"SpotLight",getSchemaFrom:bm,getModelFrom:function(e){return Mm||Tm(e),Mm},registerModelTo:function(e){return Mm||Tm(e),e}},wm={};
/**
 * @module Schemas/Materials/Material
 * @desc Export the ThreeJs Material Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
let vm,_m;function Nm(e){return vm||function(e){const t=e.Schema,r=t.Types.Mixed;vm=new t({uuid:String,name:String,type:String,fog:Boolean,lights:Boolean,blending:Number,side:Number,flatShading:Boolean,vertexColors:Number,opacity:Number,transparent:Boolean,blendSrc:Number,blendDst:Number,blendEquation:Number,blendSrcAlpha:String,blendDstAlpha:String,blendEquationAlpha:String,depthFunc:Number,depthTest:Boolean,depthWrite:Boolean,clippingPlanes:r,clipIntersection:Boolean,clipShadows:Boolean,colorWrite:Boolean,precision:Number,polygonOffset:Boolean,polygonOffsetFactor:Number,polygonOffsetUnits:Number,dithering:Boolean,alphaTest:Number,premultipliedAlpha:Boolean,overdraw:Number,visible:Boolean,userData:r,needsUpdate:Boolean},{collection:"materials",discriminatorKey:"type"})}(e),vm}function Bm(e){_m=e.model("Materials",Nm(e)),_m.discriminator("Material",new e.Schema({}))}var Cm=wm.Material={name:"Material",getSchemaFrom:Nm,getModelFrom:function(e){return _m||Bm(e),_m},registerModelTo:function(e){return _m||Bm(e),e}};
/**
 * @module Schemas/Materials/LineBasicMaterial
 * @desc Export the ThreeJs LineBasicMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Om}=wm;let Dm,xm;function Im(e){return Dm||function(e){const t=e.Schema,r=t.Types.Color;Dm=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String})}(e),Dm}function Am(e){const t=Om.getModelFrom(e);xm=t.discriminator("LineBasicMaterial",Im(e))}var Em={name:"LineBasicMaterial",getSchemaFrom:Im,getModelFrom:function(e){return xm||Am(e),xm},registerModelTo:function(e){return xm||Am(e),e}};
/**
 * @module Schemas/Materials/LineDashedMaterial
 * @desc Export the ThreeJs LineDashedMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Gm}=wm;let Lm,Pm;function jm(e){return Lm||function(e){const t=e.Schema,r=t.Types.Color;Lm=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String,dashSize:Number,gapSize:Number,scale:Number})}(e),Lm}function $m(e){const t=Gm.getModelFrom(e);Pm=t.discriminator("LineDashedMaterial",jm(e))}var Vm={name:"LineDashedMaterial",getSchemaFrom:jm,getModelFrom:function(e){return Pm||$m(e),Pm},registerModelTo:function(e){return Pm||$m(e),e}};
/**
 * @module Schemas/Materials/MeshBasicMaterial
 * @desc Export the ThreeJs MeshBasicMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Um}=wm;let km,Rm;function Hm(e){return km||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color;km=new t({color:o,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,light:Boolean})}(e),km}function zm(e){const t=Um.getModelFrom(e);Rm=t.discriminator("MeshBasicMaterial",Hm(e))}var Ym={name:"MeshBasicMaterial",getSchemaFrom:Hm,getModelFrom:function(e){return Rm||zm(e),Rm},registerModelTo:function(e){return Rm||zm(e),e}};
/**
 * @module Schemas/Materials/MeshDepthMaterial
 * @desc Export the ThreeJs MeshDepthMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Qm}=wm;let Wm,Xm;function Zm(e){return Wm||function(e){const t=e.Schema,r=t.Types.Mixed;Wm=new t({depthPacking:Number,skinning:Boolean,morphTargets:Boolean,map:r,alphaMap:r,displacementMap:r,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean})}(e),Wm}function Jm(e){const t=Qm.getModelFrom(e);Xm=t.discriminator("MeshDepthMaterial",Zm(e))}var qm={name:"MeshDepthMaterial",getSchemaFrom:Zm,getModelFrom:function(e){return Xm||Jm(e),Xm},registerModelTo:function(e){return Xm||Jm(e),e}};
/**
 * @module Schemas/Materials/MeshLambertMaterial
 * @desc Export the ThreeJs MeshLambertMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Km}=wm;let ed,td;function rd(e){return ed||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;ed=new t({color:n,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,emissive:n,emissiveIntensity:Number,emissiveMap:o,specularMap:o,alphaMap:o,envMap:o,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),ed}function nd(e){const t=Km.getModelFrom(e);td=t.discriminator("MeshLambertMaterial",rd(e))}var od={name:"MeshLambertMaterial",getSchemaFrom:rd,getModelFrom:function(e){return td||nd(e),td},registerModelTo:function(e){return td||nd(e),e}};
/**
 * @module Schemas/Materials/MeshNormalMaterial
 * @desc Export the ThreeJs MeshNormalMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:id}=wm;let ad,cd;function sd(e){return ad||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Vector2;ad=new t({bumpMap:n,bumpScale:Number,normalMap:n,normalScale:o,displacementMap:n,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),ad}function ud(e){const t=id.getModelFrom(e);cd=t.discriminator("MeshNormalMaterial",sd(e))}var md={name:"MeshNormalMaterial",getSchemaFrom:sd,getModelFrom:function(e){return cd||ud(e),cd},registerModelTo:function(e){return cd||ud(e),e}};
/**
 * @module Schemas/Materials/MeshPhongMaterial
 * @desc Export the ThreeJs MeshPhongMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:dd}=wm;let ld,fd;function hd(e){return ld||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,i=r.Vector2;ld=new t({color:o,specular:o,shininess:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:i,displacementMap:n,displacementScale:Number,displacementBias:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),ld}function gd(e){const t=dd.getModelFrom(e);fd=t.discriminator("MeshPhongMaterial",hd(e))}var pd={name:"MeshPhongMaterial",getSchemaFrom:hd,getModelFrom:function(e){return fd||gd(e),fd},registerModelTo:function(e){return fd||gd(e),e}};
/**
 * @module Schemas/Materials/MeshPhysicalMaterial
 * @desc Export the ThreeJs MeshPhysicalMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Sd}=wm;let yd,Md;function bd(e){return yd||function(e){const t=e.Schema;yd=new t({reflectivity:Number,clearCoat:Number,clearCoatRoughness:Number})}(e),yd}function Td(e){const t=Sd.getModelFrom(e);Md=t.discriminator("MeshPhysicalMaterial",bd(e))}var Fd={name:"MeshPhysicalMaterial",getSchemaFrom:bd,getModelFrom:function(e){return Md||Td(e),Md},registerModelTo:function(e){return Md||Td(e),e}};
/**
 * @module Schemas/Materials/MeshStandardMaterial
 * @desc Export the ThreeJs MeshStandardMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:wd}=wm;let vd,_d;function Nd(e){return vd||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,i=r.Vector2;vd=new t({color:o,roughness:Number,metalness:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:i,displacementMap:n,displacementScale:Number,displacementBias:Number,roughnessMap:n,metalnessMap:n,alphaMap:n,envMap:n,envMapIntensity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),vd}function Bd(e){const t=wd.getModelFrom(e);_d=t.discriminator("MeshStandardMaterial",Nd(e))}var Cd={name:"MeshStandardMaterial",getSchemaFrom:Nd,getModelFrom:function(e){return _d||Bd(e),_d},registerModelTo:function(e){return _d||Bd(e),e}};
/**
 * @module Schemas/Materials/MeshToonMaterial
 * @desc Export the ThreeJs MeshToonMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Od}=wm;let Dd,xd;function Id(e){return Dd||function(e){const t=e.Schema,r=t.Types,n=r.Mixed,o=r.Color,i=r.Vector2;Dd=new t({color:o,specular:o,shininess:Number,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,bumpMap:n,bumpScale:Number,normalMap:n,normalScale:i,displacementMap:n,displacementScale:Number,displacementBias:Number,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,gradientMap:n})}(e),Dd}function Ad(e){const t=Od.getModelFrom(e);xd=t.discriminator("MeshToonMaterial",Id(e))}var Ed={name:"MeshToonMaterial",getSchemaFrom:Id,getModelFrom:function(e){return xd||Ad(e),xd},registerModelTo:function(e){return xd||Ad(e),e}};
/**
 * @module Schemas/Materials/PointsMaterial
 * @desc Export the ThreeJs PointsMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Gd}=wm;let Ld,Pd;function jd(e){return Ld||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;Ld=new t({color:n,map:o,size:Number,sizeAttenuation:Boolean,lights:Boolean})}(e),Ld}function $d(e){const t=Gd.getModelFrom(e);Pd=t.discriminator("PointsMaterial",jd(e))}var Vd={name:"PointsMaterial",getSchemaFrom:jd,getModelFrom:function(e){return Pd||$d(e),Pd},registerModelTo:function(e){return Pd||$d(e),e}};
/**
 * @module Schemas/Materials/RawShaderMaterial
 * @desc Export the ThreeJs RawShaderMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Ud}=wm;let kd,Rd;function Hd(e){return kd||function(e){const t=e.Schema,r=t.Types.Mixed;kd=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),kd}function zd(e){const t=Ud.getModelFrom(e);Rd=t.discriminator("RawShaderMaterial",Hd(e))}var Yd={name:"RawShaderMaterial",getSchemaFrom:Hd,getModelFrom:function(e){return Rd||zd(e),Rd},registerModelTo:function(e){return Rd||zd(e),e}};
/**
 * @module Schemas/Materials/ShaderMaterial
 * @desc Export the ThreeJs ShaderMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Qd}=wm;let Wd,Xd;function Zd(e){return Wd||function(e){const t=e.Schema,r=t.Types.Mixed;Wd=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),Wd}function Jd(e){const t=Qd.getModelFrom(e);Xd=t.discriminator("ShaderMaterial",Zd(e))}var qd={name:"ShaderMaterial",getSchemaFrom:Zd,getModelFrom:function(e){return Xd||Jd(e),Xd},registerModelTo:function(e){return Xd||Jd(e),e}};
/**
 * @module Schemas/Materials/ShadowMaterial
 * @desc Export the ThreeJs ShadowMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:Kd}=wm;let el,tl;function rl(e){return el||function(e){const t=e.Schema,r=t.Types.Color;el=new t({color:r,opacity:Number,lights:Boolean,transparent:Boolean})}(e),el}function nl(e){const t=Kd.getModelFrom(e);tl=t.discriminator("ShadowMaterial",rl(e))}var ol={name:"ShadowMaterial",getSchemaFrom:rl,getModelFrom:function(e){return tl||nl(e),tl},registerModelTo:function(e){return tl||nl(e),e}};
/**
 * @module Schemas/Materials/SpriteMaterial
 * @desc Export the ThreeJs SpriteMaterial Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Materials/Material Schemas/Materials/Material}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Material:il}=wm;let al,cl;function sl(e){return al||function(e){const t=e.Schema,r=t.Types,n=r.Color,o=r.Mixed;al=new t({color:n,map:o,rotation:Number,fog:Boolean,lights:Boolean})}(e),al}function ul(e){const t=il.getModelFrom(e);cl=t.discriminator("SpriteMaterial",sl(e))}var ml={name:"SpriteMaterial",getSchemaFrom:sl,getModelFrom:function(e){return cl||ul(e),cl},registerModelTo:function(e){return cl||ul(e),e}};
/**
 * @module Schemas/Math/Box2
 * @desc Export the ThreeJs Box2 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let dl;var ll={name:"Box2",getSchemaFrom:function(e){return dl||function(e){const t=e.Schema,r=t.Types.Vector2;dl=new t({min:r,max:r},{_id:!1,id:!1})}(e),dl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Box3
 * @desc Export the ThreeJs Box3 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let fl;var hl={name:"Box3",getSchemaFrom:function(e){return fl||function(e){const t=e.Schema,r=t.Types.Vector3;fl=new t({min:r,max:r},{_id:!1,id:!1})}(e),fl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Line3
 * @desc Export the ThreeJs Line3 Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let gl;var pl={name:"Line3",getSchemaFrom:function(e){return gl||function(e){const t=e.Schema,r=t.Types.Vector3;gl=new t({start:r,end:r},{_id:!1,id:!1})}(e),gl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Plane
 * @desc Export the ThreeJs Plane Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Sl;var yl={name:"Plane",getSchemaFrom:function(e){return Sl||function(e){const t=e.Schema,r=t.Types.Vector3;Sl=new t({normal:r,constant:Number},{_id:!1,id:!1})}(e),Sl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Ray
 * @desc Export the ThreeJs Ray Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Ml;var bl={name:"Ray",getSchemaFrom:function(e){return Ml||function(e){const t=e.Schema,r=t.Types.Vector3;Ml=new t({origin:r,direction:r},{_id:!1,id:!1})}(e),Ml},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Sphere
 * @desc Export the ThreeJs Sphere Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Tl;var Fl={name:"Sphere",getSchemaFrom:function(e){return Tl||function(e){const t=e.Schema,r=t.Types.Vector3;Tl=new t({center:r,radius:Number},{_id:!1,id:!1})}(e),Tl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Spherical
 * @desc Export the ThreeJs Spherical Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let wl;var vl={name:"Spherical",getSchemaFrom:function(e){return wl||function(e){const t=e.Schema;wl=new t({radius:Number,phi:Number,theta:Number},{_id:!1,id:!1})}(e),wl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Math/Triangle
 * @desc Export the ThreeJs Triangle Model and Schema for Mongoose.
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let _l;var Nl={name:"Triangle",getSchemaFrom:function(e){return _l||function(e){const t=e.Schema,r=t.Types.Vector3;_l=new t({a:r,b:r,c:r},{_id:!1,id:!1})}(e),_l},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Objects/Bone
 * @desc Export the ThreeJs Bone Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Bl}=B;let Cl,Ol;function Dl(e){return Cl||function(e){const t=e.Schema;Cl=new t({})}(e),Cl}function xl(e){const t=Bl.getModelFrom(e);Ol=t.discriminator("Bone",Dl(e))}var Il={name:"Bone",getSchemaFrom:Dl,getModelFrom:function(e){return Ol||xl(e),Ol},registerModelTo:function(e){return Ol||xl(e),e}};
/**
 * @module Schemas/Objects/Group
 * @desc Export the ThreeJs Group Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let Al,El;function Gl(e){return Al||function(e){const t=e.Schema;Al=new t({})}(e),Al}function Ll(e){const t=N.getModelFrom(e);El=t.discriminator("Group",Gl(e))}const Pl={name:"Group",getSchemaFrom:Gl,getModelFrom:function(e){return El||Ll(e),El},registerModelTo:function(e){return El||Ll(e),e}},{Object3D:jl}=B;
/**
 * @module Schemas/Objects/ImmediateRenderObject
 * @desc Export the ThreeJs ImmediateRenderObject Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */let $l,Vl;function Ul(e){return $l||function(e){const t=e.Schema;$l=new t({})}(e),$l}function kl(e){const t=jl.getModelFrom(e);Vl=t.discriminator("ImmediateRenderObject",Ul(e))}var Rl={name:"ImmediateRenderObject",getSchemaFrom:Ul,getModelFrom:function(e){return Vl||kl(e),Vl},registerModelTo:function(e){return Vl||kl(e),e}};
/**
 * @module Schemas/Objects/LensFlare
 * @desc Export the ThreeJs LensFlare Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Hl}=B;let zl,Yl;function Ql(e){return zl||function(e){const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Color,i=r.Vector3;zl=new t({lensFlares:[{texture:n,size:Number,distance:Number,x:Number,y:Number,z:Number,scale:Number,rotation:Number,opacity:Number,color:o,blending:Number}],positionScreen:i})}(e),zl}function Wl(e){const t=Hl.getModelFrom(e);Yl=t.discriminator("LensFlare",Ql(e))}var Xl={name:"LensFlare",getSchemaFrom:Ql,getModelFrom:function(e){return Yl||Wl(e),Yl},registerModelTo:function(e){return Yl||Wl(e),e}};
/**
 * @module Schemas/Objects/Line
 * @desc Export the ThreeJs Line Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Zl}=B;let Jl,ql;function Kl(e){return Jl||function(e){const t=e.Schema,r=t.Types.ObjectId;Jl=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),Jl}function ef(e){const t=Zl.getModelFrom(e);ql=t.discriminator("Line",Kl(e))}var tf={name:"Line",getSchemaFrom:Kl,getModelFrom:function(e){return ql||ef(e),ql},registerModelTo:function(e){return ql||ef(e),e}};
/**
 * @module Schemas/Objects/LineLoop
 * @desc Export the ThreeJs LineLoop Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:rf}=B;let nf,of;function af(e){return nf||function(e){const t=e.Schema,r=t.Types.ObjectId;nf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),nf}function cf(e){const t=rf.getModelFrom(e);of=t.discriminator("LineLoop",af(e))}var sf={name:"LineLoop",getSchemaFrom:af,getModelFrom:function(e){return of||cf(e),of},registerModelTo:function(e){return of||cf(e),e}};
/**
 * @module Schemas/Objects/LineSegments
 * @desc Export the ThreeJs LineSegments Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:uf}=B;let mf,df;function lf(e){return mf||function(e){const t=e.Schema,r=t.Types.ObjectId;mf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),mf}function ff(e){const t=uf.getModelFrom(e);df=t.discriminator("LineSegments",lf(e))}var hf={name:"LineSegments",getSchemaFrom:lf,getModelFrom:function(e){return df||ff(e),df},registerModelTo:function(e){return df||ff(e),e}};
/**
 * @module Schemas/Objects/LOD
 * @desc Export the ThreeJs LOD Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:gf}=B;let pf,Sf;function yf(e){return pf||function(e){const t=e.Schema,r=t.Types.Mixed;pf=new t({levels:[r]})}(e),pf}function Mf(e){const t=gf.getModelFrom(e);Sf=t.discriminator("LOD",yf(e))}var bf={name:"LOD",getSchemaFrom:yf,getModelFrom:function(e){return Sf||Mf(e),Sf},registerModelTo:function(e){return Sf||Mf(e),e}};
/**
 * @module Schemas/Objects/Mesh
 * @desc Export the ThreeJs Mesh Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Tf}=B;let Ff,wf;function vf(e){return Ff||function(e){const t=e.Schema,r=t.Types.ObjectId;Ff=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number})}(e),Ff}function _f(e){const t=Tf.getModelFrom(e);wf=t.discriminator("Mesh",vf(e))}var Nf={name:"Mesh",getSchemaFrom:vf,getModelFrom:function(e){return wf||_f(e),wf},registerModelTo:function(e){return wf||_f(e),e}};
/**
 * @module Schemas/Objects/Points
 * @desc Export the ThreeJs Points Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Bf}=B;let Cf,Of;function Df(e){return Cf||function(e){const t=e.Schema,r=t.Types.ObjectId;Cf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"PointsMaterial"}],drawMode:Number})}(e),Cf}function xf(e){const t=Bf.getModelFrom(e);Of=t.discriminator("Points",Df(e))}var If={name:"Points",getSchemaFrom:Df,getModelFrom:function(e){return Of||xf(e),Of},registerModelTo:function(e){return Of||xf(e),e}};
/**
 * @module Schemas/Objects/Skeleton
 * @desc Export the ThreeJs Skeleton Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:Af}=B;let Ef,Gf;function Lf(e){return Ef||function(e){const t=e.Schema,r=t.Types.ObjectId;Ef=new t({bones:[r],boneMatrices:[Number]})}(e),Ef}function Pf(e){const t=Af.getModelFrom(e);Gf=t.discriminator("Skeleton",Lf(e))}var jf={name:"Skeleton",getSchemaFrom:Lf,getModelFrom:function(e){return Gf||Pf(e),Gf},registerModelTo:function(e){return Gf||Pf(e),e}};
/**
 * @module Schemas/Objects/SkinnedMesh
 * @desc Export the ThreeJs SkinnedMesh Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:$f}=B;let Vf,Uf;function kf(e){return Vf||function(e){const t=e.Schema,r=t.Types.ObjectId;Vf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number,bindMode:String,bindMatrix:[Number],bindMatrixInverse:[Number]})}(e),Vf}function Rf(e){const t=$f.getModelFrom(e);Uf=t.discriminator("SkinnedMesh",kf(e))}var Hf={name:"SkinnedMesh",getSchemaFrom:kf,getModelFrom:function(e){return Uf||Rf(e),Uf},registerModelTo:function(e){return Uf||Rf(e),e}};
/**
 * @module Schemas/Objects/Sprite
 * @desc Export the ThreeJs Sprite Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:zf}=B;let Yf,Qf;function Wf(e){return Yf||function(e){const t=e.Schema,r=t.Types.ObjectId;Yf=new t({material:[{type:r,ref:"SpriteMaterial"}]})}(e),Yf}function Xf(e){const t=zf.getModelFrom(e);Qf=t.discriminator("Sprite",Wf(e))}var Zf={name:"Sprite",getSchemaFrom:Wf,getModelFrom:function(e){return Qf||Xf(e),Qf},registerModelTo:function(e){return Qf||Xf(e),e}},Jf={};
/**
 * @module Schemas/Scenes/Fog
 * @desc Export the ThreeJs Fog Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Scenes/Scene Schemas/Scenes/Scene}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
let qf;var Kf=Jf.Fog={name:"Fog",getSchemaFrom:function(e){return qf||function(e){const t=e.Schema;qf=new t({coordinates:{x:Number,y:Number,z:Number},orientation:{x:Number,y:Number,z:Number},thumbnail:Buffer,path:String},{_id:!1,id:!1})}(e),qf},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @module Schemas/Scenes/FogExp2
 * @desc Export the ThreeJs FogExp2 Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Core/Object3D Schemas/Core/Object3D}
 * @requires {@link module:Schemas/Scenes/Fog Schemas/Scenes/Fog}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Object3D:eh}=B,{Fog:th}=Jf;let rh,nh;function oh(e){return rh||function(e){const t=th.getSchemaFrom(e),r=e.Schema,n=r.Types.Color;rh=new r({background:n,fog:t,overrideMaterial:String,autoUpdate:Boolean})}(e),rh}function ih(e){const t=eh.getModelFrom(e);nh=t.discriminator("Scene",oh(e))}var ah={name:"Scene",getSchemaFrom:oh,getModelFrom:function(e){return nh||ih(e),nh},registerModelTo:function(e){return nh||ih(e),e}},ch={};
/**
 * @module Schemas/Textures/Texture
 * @desc Export the ThreeJs Texture Model and Schema for Mongoose.
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
let sh,uh;function mh(e){return sh||function(e){const t=e.Schema,r=t.Types,n=r.ObjectId,o=r.Vector2,i=r.Matrix3;sh=new t({uuid:String,name:String,image:n,mipmaps:[],mapping:Number,wrapS:Number,wrapT:Number,magFilter:Number,minFilter:Number,anisotropy:Number,format:Number,type:Number,offset:o,repeat:o,center:o,rotation:Number,matrixAutoUpdate:Boolean,matrix:i,generateMipmaps:Boolean,premultiplyAlpha:Boolean,flipY:Boolean,unpackAlignment:Number,encoding:Number,version:Number},{collection:"textures",discriminatorKey:"type"})}(e),sh}function dh(e){uh=e.model("Textures",mh(e)),uh.discriminator("Texture",new e.Schema({}))}var lh=ch.Texture={name:"Texture",getSchemaFrom:mh,getModelFrom:function(e){return uh||dh(e),uh},registerModelTo:function(e){return uh||dh(e),e}};
/**
 * @module Schemas/Textures/CanvasTexture
 * @desc Export the ThreeJs CanvasTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:fh}=ch;let hh,gh;function ph(e){return hh||function(e){const t=e.Schema;hh=new t({needsUpdate:Boolean})}(e),hh}function Sh(e){const t=fh.getModelFrom(e);gh=t.discriminator("CanvasTexture",ph(e))}var yh={name:"CanvasTexture",getSchemaFrom:ph,getModelFrom:function(e){return gh||Sh(e),gh},registerModelTo:function(e){return gh||Sh(e),e}};
/**
 * @module Schemas/Textures/CompressedTexture
 * @desc Export the ThreeJs CompressedTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Mh}=ch;let bh,Th;function Fh(e){return bh||function(e){const t=e.Schema;bh=new t({})}(e),bh}function wh(e){const t=Mh.getModelFrom(e);Th=t.discriminator("CompressedTexture",Fh(e))}var vh={name:"CompressedTexture",getSchemaFrom:Fh,getModelFrom:function(e){return Th||wh(e),Th},registerModelTo:function(e){return Th||wh(e),e}};
/**
 * @module Schemas/Textures/CubeTexture
 * @desc Export the ThreeJs CubeTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:_h}=ch;let Nh,Bh;function Ch(e){return Nh||function(e){const t=e.Schema;Nh=new t({})}(e),Nh}function Oh(e){const t=_h.getModelFrom(e);Bh=t.discriminator("CubeTexture",Ch(e))}var Dh={name:"CubeTexture",getSchemaFrom:Ch,getModelFrom:function(e){return Bh||Oh(e),Bh},registerModelTo:function(e){return Bh||Oh(e),e}};
/**
 * @module Schemas/Textures/DataTexture
 * @desc Export the ThreeJs DataTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:xh}=ch;let Ih,Ah;function Eh(e){return Ih||function(e){const t=e.Schema;Ih=new t({})}(e),Ih}function Gh(e){const t=xh.getModelFrom(e);Ah=t.discriminator("DataTexture",Eh(e))}var Lh={name:"DataTexture",getSchemaFrom:Eh,getModelFrom:function(e){return Ah||Gh(e),Ah},registerModelTo:function(e){return Ah||Gh(e),e}};
/**
 * @module Schemas/Textures/DepthTexture
 * @desc Export the ThreeJs DepthTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Ph}=ch;let jh,$h;function Vh(e){return jh||function(e){const t=e.Schema;jh=new t({})}(e),jh}function Uh(e){const t=Ph.getModelFrom(e);$h=t.discriminator("DepthTexture",Vh(e))}var kh={name:"DepthTexture",getSchemaFrom:Vh,getModelFrom:function(e){return $h||Uh(e),$h},registerModelTo:function(e){return $h||Uh(e),e}};
/**
 * @module Schemas/Textures/VideoTexture
 * @desc Export the ThreeJs VideoTexture Model and Schema for Mongoose.
 *
 * @requires {@link module:Schemas/Textures/Texture Schemas/Textures/Texture}
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */const{Texture:Rh}=ch;let Hh,zh;function Yh(e){return Hh||function(e){const t=e.Schema;Hh=new t({})}(e),Hh}function Qh(e){const t=Rh.getModelFrom(e);zh=t.discriminator("VideoTexture",Yh(e))}var Wh={name:"VideoTexture",getSchemaFrom:Yh,getModelFrom:function(e){return zh||Qh(e),zh},registerModelTo:function(e){return zh||Qh(e),e}};
/**
 * @module Types/Color
 * @desc Export the three js Color type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function Xh(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Color")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Color: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isColor)throw new e.SchemaType.CastError(`Color: ${t} is not a object or Three.Color instance`);if(!("r"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain r property`);if(r.isNotNumber(t.r))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("g"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain g property`);if(r.isNotNumber(t.g))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("b"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain b property`);if(r.isNotNumber(t.b))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);return{r:t.r,g:t.g,b:t.b}}}return t.COLOR_BSON_TYPE=a.BSON_DATA_OBJECT,e.Schema.Types.Color=t,e}
/**
 * @module Types/Euler
 * @desc Export the three js Euler type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function Zh(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Euler")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Euler: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isEuler)throw new e.SchemaType.CastError(`Euler: ${t} is not a object or Euler instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Euler: ${t} expected x to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Euler: ${t} expected y to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Euler: ${t} expected z to be a number`);if(!("order"in t))throw new e.SchemaType.CastError(`Euler: ${t} does not contain order property`);if(r.isNotString(t.order))throw new e.SchemaType.CastError(`Euler: ${t} expected order to be a string`);if(!["XYZ","YZX","ZXY","XZY","YXZ","ZYX"].includes(t.order.toUpperCase()))throw new e.SchemaType.CastError(`Euler: ${t} expected order to be a string in ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX']`);return{x:t.x,y:t.y,z:t.z,order:t.order.toUpperCase()}}}return t.EULER_BSON_TYPE=a.BSON_DATA_OBJECT,e.Schema.Types.Euler=t,e}
/**
 * @module Types/Matrix3
 * @desc Export the three js Matrix3 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function Jh(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Matrix3")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Matrix3: ${t} is null or undefined`);if(r.isNotArray(t)&&!t.isMatrix3)throw new e.SchemaType.CastError(`Matrix3: ${t} is not an array or Matrix3 instance`);let n;n=t.isMatrix3?t.toArray():t;const o=n.length;if(9!==o)throw new e.SchemaType.CastError(`Matrix3: ${t} does not contain the right number of values. Expect 9 values and found ${o}`);for(let i,a=0;a<o;a++){if(i=n[a],r.isNotNumber(i))throw new e.SchemaType.CastError(`Matrix3: ${t} does not seem to contain right values. Expect values in range 0 and 1.`);if(r.isNaN(i))throw new e.SchemaType.CastError(`Matrix3: ${t} does not seem to contain right values. Expect values in range 0 and 1.`)}return n}}return t.MATRIX3_BSON_TYPE=a.BSON_DATA_ARRAY,e.Schema.Types.Matrix3=t,e}
/**
 * @module Types/Matrix4
 * @desc Export the three js Matrix4 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function qh(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Matrix4")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Matrix4: ${t} is null or undefined`);if(r.isNotArray(t)&&!t.isMatrix4)throw new e.SchemaType.CastError(`Matrix4: ${t} is not an array or Matrix4 instance`);let n;n=t.isMatrix4?t.toArray():t;const o=n.length;if(16!==o)throw new e.SchemaType.CastError(`Matrix4: ${t} does not contain the right number of values. Expect 9 values and found ${o}`);for(let i,a=0;a<o;a++){if(i=n[a],r.isNotNumber(i))throw new e.SchemaType.CastError(`Matrix4: ${t} does not seem to contain right values. Expect values in range 0 and 1.`);if(r.isNaN(i))throw new e.SchemaType.CastError(`Matrix4: ${t} does not seem to contain right values. Expect values in range 0 and 1.`)}return n}}return t.MATRIX4_BSON_TYPE=a.BSON_DATA_ARRAY,e.Schema.Types.Matrix4=t,e}
/**
 * @module Types/Quaternion
 * @desc Export the three js Quaternion type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function Kh(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Quaternion")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Quaternion: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isQuaternion)throw new e.SchemaType.CastError(`Quaternion: ${t} is not a object or Quaternion instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);if(!("w"in t))throw new e.SchemaType.CastError(`Quaternion: ${t} does not contain w property`);if(r.isNotNumber(t.w))throw new e.SchemaType.CastError(`Quaternion: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z,w:t.w}}}return t.QUATERNION_BSON_TYPE=a.BSON_DATA_OBJECT,e.Schema.Types.Quaternion=t,e}
/**
 * @module Types/Vector2
 * @desc Export the three js Vector2 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function eg(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector2")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Vector2: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isVector2)throw new e.SchemaType.CastError(`Vector2: ${t} is not a object or Vector2 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector2: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector2: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector2: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector2: ${t} expected to be a number`);return{x:t.x,y:t.y}}}return t.VECTOR2_BSON_TYPE=a.BSON_DATA_OBJECT,e.Schema.Types.Vector2=t,e}
/**
 * @module Types/Vector3
 * @desc Export the three js Vector3 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function tg(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector3")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Vector3: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isVector3)throw new e.SchemaType.CastError(`Vector3: ${t} is not a object or Vector3 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Vector3: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Vector3: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z}}}return t.VECTOR3_BSON_TYPE=a.BSON_DATA_OBJECT,e.Schema.Types.Vector3=t,e}
/**
 * @module Types/Vector4
 * @desc Export the three js Vector4 type for Mongoose.
 *
 * @requires {@link module: [itee-validators]{@link https://github.com/Itee/itee-validators}}
 * @requires {@link module: [bson]{@link https://github.com/mongodb/js-bson}}
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */function rg(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Vector4")}cast(t){if(r.isNotDefined(t))throw new e.SchemaType.CastError(`Vector4: ${t} is null or undefined`);if(r.isNotObject(t)&&!t.isVector4)throw new e.SchemaType.CastError(`Vector4: ${t} is not a object or Vector4 instance`);if(!("x"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain x property`);if(r.isNotNumber(t.x))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("y"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain y property`);if(r.isNotNumber(t.y))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("z"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain z property`);if(r.isNotNumber(t.z))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);if(!("w"in t))throw new e.SchemaType.CastError(`Vector4: ${t} does not contain w property`);if(r.isNotNumber(t.w))throw new e.SchemaType.CastError(`Vector4: ${t} expected to be a number`);return{x:t.x,y:t.y,z:t.z,w:t.w}}}return t.VECTOR4_BSON_TYPE=a.BSON_DATA_OBJECT,e.Schema.Types.Vector4=t,e}
/**
 * @module MongoDBThreePlugin
 * @desc Three way to register Types and Schema
 * using cjs module under types and schemas folder.
 * using FunctionRegistrator for type and add to plugin using .addType( myFunctionRegistrator ), extending class AbstractMongooseRegistrator for Schema and add to plugin using .addSchema(
 * MySchemaRegistrator ) using direct registration importing mongoose in the file (care to the loading order ! An no output about what is registered.)
 *
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [MIT]{@link https://opensource.org/licenses/MIT}
 */module.exports=r=>new t.TMongoDBPlugin(r).addType(Xh).addType(Zh).addType(Jh).addType(qh).addType(Kh).addType(eg).addType(tg).addType(rg).addSchema(A).addSchema($).addSchema(z).addSchema(J).addSchema(ne).addSchema(ue).addSchema(ge).addSchema(Te).addSchema(Ee).addSchema($e).addSchema(qe).addSchema(et).addSchema(it).addSchema(N).addSchema(lt).addSchema(yt).addSchema(vt).addSchema(Dt).addSchema(Lt).addSchema(kt).addSchema(Ye).addSchema(Wt).addSchema(er).addSchema(ar).addSchema(lr).addSchema(yr).addSchema(vr).addSchema(Dr).addSchema(Lr).addSchema(kr).addSchema(Xr).addSchema(rn).addSchema(un).addSchema(gn).addSchema(Tn).addSchema(Bn).addSchema(An).addSchema($n).addSchema(zn).addSchema(Jn).addSchema(no).addSchema(uo).addSchema(po).addSchema(Fo).addSchema(Co).addSchema(Eo).addSchema(Vo).addSchema(Yo).addSchema(qo).addSchema(oi).addSchema(mi).addSchema(pi).addSchema(Fi).addSchema(Ci).addSchema(Ei).addSchema(Vi).addSchema(Yi).addSchema(qi).addSchema(oa).addSchema(ma).addSchema(pa).addSchema(Fa).addSchema(Ca).addSchema(Ea).addSchema(Va).addSchema(Ya).addSchema(qa).addSchema(oc).addSchema(mc).addSchema(pc).addSchema(Fc).addSchema(Cc).addSchema(Ec).addSchema(Vc).addSchema(Yc).addSchema(qc).addSchema(os).addSchema(ms).addSchema(ps).addSchema(Fs).addSchema(Cs).addSchema(Es).addSchema(Vs).addSchema(Ys).addSchema(qs).addSchema(ou).addSchema(mu).addSchema(pu).addSchema(Fu).addSchema(Cu).addSchema(Eu).addSchema(Vu).addSchema(Yu).addSchema(qu).addSchema(om).addSchema(mm).addSchema(pm).addSchema(Fm).addSchema(pd).addSchema(Em).addSchema(Vm).addSchema(Cm).addSchema(Ym).addSchema(qm).addSchema(od).addSchema(md).addSchema(Fd).addSchema(Cd).addSchema(Ed).addSchema(Vd).addSchema(Yd).addSchema(qd).addSchema(ol).addSchema(ml).addSchema(ll).addSchema(hl).addSchema(pl).addSchema(yl).addSchema(bl).addSchema(Fl).addSchema(vl).addSchema(Nl).addSchema(Il).addSchema(Pl).addSchema(Rl).addSchema(Xl).addSchema(tf).addSchema(sf).addSchema(hf).addSchema(bf).addSchema(Nf).addSchema(If).addSchema(jf).addSchema(Hf).addSchema(Zf).addSchema(Kf).addSchema(ah).addSchema(yh).addSchema(vh).addSchema(Dh).addSchema(Lh).addSchema(kh).addSchema(lh).addSchema(Wh).addController(u).addDescriptor({route:"/objects",controller:{name:"TObjects3DController",options:{schemaName:"Objects3D"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addController(t.TMongooseController).addDescriptor({route:"/curves",controller:{name:"TMongooseController",options:{schemaName:"Curves"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/geometries",controller:{name:"TMongooseController",options:{schemaName:"Geometries"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/materials",controller:{name:"TMongooseController",options:{schemaName:"Materials"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/textures",controller:{name:"TMongooseController",options:{schemaName:"Textures"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addController(e.TAbstractConverterManager).addDescriptor({route:"/uploads",controller:{name:"TAbstractConverterManager",options:{useNext:!0,converters:{JsonToThree:new p,ShpToThree:new T,DbfToThree:new h,FbxToThree:new g,ColladaToThree:new m,StlToThree:new F,TdsToThree:new w,MtlToThree:new S,ObjToThree:new y},rules:[{on:".json",use:"JsonToThree"},{on:".dae",use:"ColladaToThree"},{on:".fbx",use:"FbxToThree"},{on:".stl",use:"StlToThree"},{on:".3ds",use:"TdsToThree"},{on:".shp",use:"ShpToThree"},{on:".dbf",use:"DbfToThree"},{on:[".shp",".dbf"],use:["ShpToThree","DbfToThree"]},{on:".mtl",use:"MtlToThree"},{on:".obj",use:"ObjToThree"},{on:[".mtl",".obj"],use:["MtlToThree","ObjToThree"]}],inserter:v},can:{processFiles:{on:"post",over:"/"}}}});
