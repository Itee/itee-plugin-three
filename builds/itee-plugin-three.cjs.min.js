"use strict";var e,t=require("itee-database"),r=require("itee-mongodb"),o=require("three-full"),n=require("itee-client"),i=require("itee-validators"),a=(e=i)&&"object"==typeof e&&"default"in e?e.default:e,c=require("bson");
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class s extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{r((new o.ColladaLoader).parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * From:
 * https://www.clicketyclick.dk/databases/xbase/format/db2_dbf.html#DBII_DBF_STRUCT
 * http://web.archive.org/web/20150323061445/http://ulisse.elettra.trieste.it/services/doc/dbase/DBFstruct.htm
 * http://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm
 *
 * @class Todo...
 * @classdesc Todo...
 * @example Todo...
 *
 */const d=Object.freeze({FoxPro:48,FoxPro_Autoincrement:49,dBASE_II:2,FoxPro_Var:50,dBASE_III_plus:3,dBASE_III_plus_memo:131,dBASE_IV_SQL_table:67,dBASE_IV_SQL_system:99,dBASE_IV_memo:139,dBASE_IV_memo_SQL_table:203,FoxBase:251,dBase_v_7:4,FoxPro_2_x:245,HiPerSix_memo:229}),u=Object.freeze({Binary:"B",Character:"C",Date:"D",Numeric:"N",Logical:"L",Memo:"M",Timestamp:"@",Long:"I",Autoincrement:"+",Float:"F",Double:"O",OLE:"G"});function m(e=o.DefaultLoadingManager,t=n.DefaultLogger){this.manager=e,this.logger=t,this.reader=new n.TBinaryReader}Object.assign(m,{Terminator:13,DeletedRecord:26,YearOffset:1900}),Object.assign(m.prototype,{load(e,t,r,n){const i=this,a=new o.FileLoader(i.manager);a.setResponseType("arraybuffer"),a.load(e,e=>{t(i.parse(e))},r,n)},parse(e){this.reader.setEndianess(n.Endianness.Big).setBuffer(e);const t=this.reader.getInt8();if(!this._isValidVersion(t))return this.logger.error(`DBFLoader: Invalid version number: ${t}`),null;const r=this._parseHeader(t);return{header:r,datas:this._parseDatas(t,r)}},_isValidVersion:e=>Object.values(d).includes(e),_parseHeader(e){let t={};switch(e){case d.FoxPro:case d.FoxPro_Autoincrement:case d.FoxPro_Var:case d.dBASE_II:t=this._parseHeaderV2();break;case d.dBASE_III_plus:case d.dBASE_III_plus_memo:t=this._parseHeaderV2_5();break;case d.dBASE_IV_memo:case d.dBASE_IV_memo_SQL_table:case d.dBASE_IV_SQL_system:case d.dBASE_IV_SQL_table:t=this._parseHeaderV3();break;case d.dBase_v_7:case d.FoxPro_2_x:case d.HiPerSix_memo:t=this._parseHeaderV4();break;default:throw new RangeError(`Invalid version parameter: ${e}`)}return this.reader.getUint8()!==m.Terminator&&this.logger.error("DBFLoader: Invalid terminator after field descriptors !!!"),t},_parseHeaderV2(){const e=this.reader.getInt16(),t=this.reader.getInt8()+m.YearOffset,r=this.reader.getInt8(),o=this.reader.getInt8(),n=this.reader.getInt16();let i=[],a=void 0,c=void 0,s=void 0,d=void 0,u=void 0;for(let t=0;t<e;t++)a=this.reader.getString(11),c=this.reader.getChar(),s=this.reader.getUint8(),d=this.reader.getInt16(),u=this.reader.getInt8(),i.push({name:a,type:c,length:s,memoryAddress:d,decimalCount:u});return{numberOfRecords:e,year:t,month:r,day:o,lengthOfEachRecords:n,fields:i}},_parseHeaderV2_5(){const e=this.reader.getInt8()+m.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(n.Endianness.Little);const o=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(n.Endianness.Big),this.reader.skipOffsetOf(20);let c=[],s=void 0,d=void 0,u=void 0,l=void 0,f=void 0,h=void 0,g=void 0;for(let e=0;e<o;e++)s=this.reader.getString(11),d=this.reader.getChar(),l=this.reader.getInt32(),u=this.reader.getUint8(),f=this.reader.getUint8(),this.reader.skipOffsetOf(2),h=this.reader.getInt8(),this.reader.skipOffsetOf(2),g=this.reader.getInt8(),this.reader.skipOffsetOf(1),c.push({name:s,type:d,length:u,memoryAddress:l,decimalCount:f,workAreaId:h,MDXFlag:g});return{year:e,month:t,day:r,numberOfRecords:o,numberOfByteInHeader:i,numberOfByteInRecord:a,fields:c}},_parseHeaderV3(){const e=this.reader.getInt8()+m.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(n.Endianness.Little);const o=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(n.Endianness.Big),this.reader.skipOffsetOf(2);const c=this.reader.getInt8(),s=this.reader.getInt8();this.reader.skipOffsetOf(12);const d=this.reader.getInt8(),u=this.reader.getInt8();this.reader.skipOffsetOf(2);let l=[],f=void 0,h=void 0,g=void 0,p=void 0,v=void 0,S=void 0;for(;this.reader.getOffset()<i-1;)f=this.reader.getString(11),h=this.reader.getChar(),this.reader.skipOffsetOf(4),g=this.reader.getUint8(),p=this.reader.getUint8(),this.reader.skipOffsetOf(2),v=this.reader.getInt8(),this.reader.skipOffsetOf(10),S=this.reader.getInt8(),l.push({name:f,type:h,length:g,decimalCount:p,workAreaId:v,MDXFieldFlag:S});return{year:e,month:t,day:r,numberOfRecords:o,numberOfByteInHeader:i,numberOfByteInRecord:a,incompleteTransactionFlag:c,encryptionFlag:s,MDXFlag:d,languageDriverId:u,fields:l}},_parseHeaderV4(){const e=this.reader.getInt8()+m.YearOffset,t=this.reader.getInt8(),r=this.reader.getInt8();this.reader.setEndianess(n.Endianness.Little);const o=this.reader.getInt32(),i=this.reader.getInt16(),a=this.reader.getInt16();this.reader.setEndianess(n.Endianness.Big),this.reader.skipOffsetOf(2);const c=this.reader.getInt8(),s=this.reader.getInt8();this.reader.skipOffsetOf(12);const d=this.reader.getInt8(),u=this.reader.getInt8();this.reader.skipOffsetOf(2);const l=this.reader.getString(32);this.reader.skipOffsetOf(4);let f=[],h=void 0,g=void 0,p=void 0,v=void 0,S=void 0,M=void 0;for(let e=0;e<o;e++)h=this.reader.getString(32),g=this.reader.getChar(),p=this.reader.getUint8(),v=this.reader.getUint8(),this.reader.skipOffsetOf(2),S=this.reader.getInt8(),this.reader.skipOffsetOf(2),M=this.reader.getInt32(),this.reader.skipOffsetOf(4),f.push({name:h,type:g,length:p,decimalCount:v,MDXFieldFlag:S,nextAutoincrementValue:M});return{year:e,month:t,day:r,numberOfRecords:o,numberOfByteInHeader:i,numberOfByteInRecord:a,incompleteTransactionFlag:c,encryptionFlag:s,MDXFlag:d,languageDriverId:u,languageDriverName:l,fields:f}},_parseDatas(e,t){const r=t.numberOfRecords,o=t.fields;let n=[],i=null,a=null;for(let e=0;e<r;e++){i={},i.deleted=this.reader.getUint8()===m.DeletedRecord;for(let e=0,t=o.length;e<t;e++)switch(a=o[e],a.type){case u.Binary:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case u.Numeric:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case u.Character:case u.Date:i[a.name]=this.reader.getString(a.length);break;case u.Logical:{const e=this.reader.getChar().toLowerCase();i[a.name]="t"===e||"y"===e||"f"!==e&&"n"!==e&&null}break;case u.Memo:i[a.name]=this.reader.getString(a.length);break;case u.Timestamp:break;case u.Long:case u.Autoincrement:i[a.name]=this.reader.getInt32();break;case u.Float:{const e=this.reader.getString(a.length);i[a.name]=parseInt(e)}break;case u.Double:i[a.name]=this.reader.getFloat64();break;case u.OLE:i[a.name]=this.reader.getString(a.length);break;default:throw new RangeError(`Invalid data type parameter: ${a.type}`)}n.push(i)}return n},_parseFieldProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt16(),o=this.reader.getInt16(),n=this.reader.getInt16(),i=this.reader.getInt16(),a=this.reader.getInt16(),c=this.reader.getInt16();let s=[];for(let t=0;t<e;t++)s.push(this._getStandardProperties());let d=[];for(let e=0;e<r;e++)d.push(this._getCustomProperties());let u=[];for(let e=0;e<n;e++)u.push(this._getReferentialIntegrityProperties());return{numberOfStandardProperties:e,startOfStandardPropertiesDescriptor:t,numberOfCustomProperties:r,startOfCustomPropertiesDescriptor:o,numberOfReferentialIntegrityProperties:n,startOfReferentialIntegrityDescriptor:i,startOfData:a,sizeOfPropertiesStructure:c,standardProperties:s,customProperties:d,referentialIntegrityProperties:u}},_getStandardProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8(),o=this.reader.getInt8(),n=this.reader.getInt8();return this.reader.skipOffsetOf(4),{generationalNumber:e,tableFieldOffset:t,propertyDescribed:r,type:o,isConstraint:n,offsetFromStart:this.reader.getInt16(),widthOfDatabaseField:this.reader.getInt16()}},_getCustomProperties(){const e=this.reader.getInt16(),t=this.reader.getInt16(),r=this.reader.getInt8();return this.reader.skipOffsetOf(1),{generationalNumber:e,tableFieldOffset:t,type:r,offsetFromStartOfName:this.reader.getInt16(),lengthOfName:this.reader.getInt16(),offsetFromStartOfData:this.reader.getInt16(),lengthOfData:this.reader.getInt16()}},_getReferentialIntegrityProperties(){return{databaseState:this.reader.getInt8(),sequentialNumberRule:this.reader.getInt16(),offsetOfTheRIRuleName:this.reader.getInt16(),sizeOfTheRIRuleName:this.reader.getInt16(),offsetOfNameOfForeignTable:this.reader.getInt16(),sizeOfNameOfForeignTable:this.reader.getInt16(),stateBehaviour:this.reader.getInt8(),numberOfFieldsInLinkingKey:this.reader.getInt16(),offsetOfLocalTableTagName:this.reader.getInt16(),sizeOfTheLocalTableTagName:this.reader.getInt16(),offsetOfForeignTableTagName:this.reader.getInt16(),sizeOfTheForeignTableTagName:this.reader.getInt16()}}});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class l extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,n){super._convert(e,t,r,o,n);try{r((new m).parse(e))}catch(e){n(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class f extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{r((new o.FBXLoader).parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class h extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{r((new o.ObjectLoader).parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class g extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.String})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{r((new o.MTLLoader).parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class p extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{r((new o.OBJLoader2).parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * This class allow to split any geometries type during runtime.
 * Keeping normals and Uvs. It is really usefull to see inside mesh like building.
 *
 * Constructor parameter:
 *
 * size - the size of the square view
 *
 * @class Todo...
 * @classdesc Todo...
 * @example Todo...
 *
 */const v=Object.freeze({NullShape:0,Point:1,Polyline:3,Polygon:5,MultiPoint:8,PointZ:11,PolyLineZ:13,PolygonZ:15,MultiPointZ:18,PointM:21,PolylineM:23,PolygonM:25,MultiPointM:28,MultiPatch:31});function S(e,t){let r=t[0],o=t[1],n=-1;for(let i=0,a=e.length,c=a-1;i<a;c=i++){const a=e[i],s=a[0],d=a[1],u=e[c],m=u[0],l=u[1];M(a,u,t)?n=0:d>o!=l>o&&r<(m-s)*(o-d)/(l-d)+s&&(n=-n)}return n}function M(e,t,r){var o=r[0]-e[0],n=r[1]-e[1];if(0===o&&0===n)return!0;var i=t[0]-e[0],a=t[1]-e[1];if(0===i&&0===a)return!1;var c=(o*i+n*a)/(i*i+a*a);return!(c<0||c>1)&&(0===c||1===c||c*i===o&&c*a===n)}function y(e=o.DefaultLoadingManager,t=n.DefaultLogger){this.manager=e,this.logger=t,this.globalOffset=new o.Vector3,this.worldAxis={from:"zUp",to:"zForward"},this._reader=new n.TBinaryReader}Object.assign(y,{FileCode:9994,MinFileLength:100,MinVersion:1e3}),Object.assign(y.prototype,{load(e,t,r,n){const i=this,a=new o.FileLoader(i.manager);a.setResponseType("arraybuffer"),a.load(e,e=>{t(i.parse(e))},r,n)},parse(e){this._reader.setEndianess(n.Endianness.Big).setBuffer(e);const t=this._parseHeader();if(t.fileCode!==y.FileCode)return this.logger.error("SHPLoader: Invalide Shape file code !"),null;if(t.fileLength<y.MinFileLength)return this.logger.error("SHPLoader: Shape file have an incorrect length !"),null;if(!Object.values(v).includes(t.shapeType))return this.logger.error("SHPLoader: Shape file have an incorrect shape type !"),null;t.version<y.MinVersion&&this.logger.warn("SHPLoader: Version of shape file below than 1000 could be incorrectly parsed !");const r=this._parseDatas(t);return this._convertToObjects(r)},_parseHeader(){const e=this._reader.getInt32();this._reader.skipOffsetOf(20);const t=this._reader.getInt32();this._reader.setEndianess(n.Endianness.Little);const r=this._reader.getInt32(),o=this._reader.getInt32(),i=this._reader.getInt32(),a=this._reader.getInt32();return{fileCode:e,fileLength:t,version:r,shapeType:o,boundingBox:{xMin:i,xMax:this._reader.getInt32(),yMin:a,yMax:this._reader.getInt32(),zMin:this._reader.getInt32(),zMax:this._reader.getInt32(),mMin:this._reader.getInt32(),mMax:this._reader.getInt32()}}},_parseDatas(e){this._reader.skipOffsetTo(100);let t=[],r=void 0,o=void 0,i=void 0;for(;!this._reader.isEndOfFile();)switch(r=this._parseRecordHeader(),o=this._reader.getOffset()+2*r.contentLength,this._reader.setEndianess(n.Endianness.Little),e.shapeType){case v.NullShape:this._reader.skipOffsetTo(o);break;case v.Point:case v.PointZ:case v.PointM:for(;this._reader.getOffset()<o;)i=this._parsePoint(),i&&t.push(i);break;case v.Polyline:case v.PolyLineZ:case v.PolylineM:for(;this._reader.getOffset()<o;)i=this._parsePolyLine(),i&&t.push(i);break;case v.Polygon:case v.PolygonZ:case v.PolygonM:for(;this._reader.getOffset()<o;)i=this._parsePolyLine(),i&&t.push(i);break;case v.MultiPoint:case v.MultiPointZ:case v.MultiPointM:for(;this._reader.getOffset()<o;)i=this._parseMultiPoint(),i&&t.push(i);break;case v.MultiPatch:for(;this._reader.getOffset()<o;)i=this._parseMultiPatch(),i&&t.push(i);break;default:this.logger.error(`SHPLoader: Invalid switch parameter: ${e.shapeType}`)}return t},_parseRecordHeader(){return this._reader.setEndianess(n.Endianness.Big),{recordNumber:this._reader.getInt32(),contentLength:this._reader.getInt32()}},_parsePoint(){const e=this._reader.getInt32();return e===v.NullShape?null:{shapeType:e,x:this._reader.getFloat64(),y:this._reader.getFloat64()}},_parsePolyLine(){const e=this._reader.getInt32();if(e===v.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),o=this._reader.getInt32(),n=new Array(r);for(let e=0;e<r;e++)n[e]=this._reader.getInt32();const i=new Array(o);for(let e=0;e<o;e++)i[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};return{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:o,parts:n,points:i}},_parsePolygon(){const e=this._reader.getInt32();if(e===v.NullShape)return null;const t={xMin:this._reader.getFloat64(),yMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),o=this._reader.getInt32();let n=new Array(r);for(let e=0;e<r;e++)n[e]=this._reader.getInt32();let i=new Array(o);for(let e=0;e<o;e++)i[e]={x:this._reader.getFloat64(),y:this._reader.getFloat64()};const a=[],c=[];return n.forEach((e,t)=>{const r=i.slice(e,n[t+1]);!function(e){if((t=e.length)<4)return!1;for(var t,r=0,o=e[t-1][1]*e[0][0]-e[t-1][0]*e[0][1];++r<t;)o+=e[r-1][1]*e[r][0]-e[r-1][0]*e[r][1];return o>=0}(r)?c.push(r):a.push(r)}),c.forEach(e=>{a.some(t=>{if(function(e,t){let r=0,o=t.length;do{if(S(e,t[r])>0)return!0}while(++r<o);return!1}(t[0],e))return t.push(e),!0})||a.push([e])}),{shapeType:e,boundingBox:t,numberOfParts:r,numberOfPoints:o,parts:n,polygons:a}},_parseMultiPoint(){const e=this._reader.getInt32();if(e===v.NullShape)return null;const t={xMin:this._reader.getFloat64(),xMax:this._reader.getFloat64(),yMin:this._reader.getFloat64(),yMax:this._reader.getFloat64()},r=this._reader.getInt32(),o=new Array(r);for(let e=0;e<r;e++)o.push([this._reader.getFloat64(),this._reader.getFloat64()]);return{shapeType:e,boundingBox:t,numberOfPoints:r,points:o}},_parseMultiPatch(){const e=this._reader.getInt32();return e===v.NullShape?null:{shapeType:e}},_convertToObjects(e){let t=[];for(let t=0,o=e.length;t<o;t++){let o=e[t];o.shapeType!==v.Polygon&&o.shapeType!==v.PolygonZ&&o.shapeType!==v.PolygonM||(o.points&&Array.isArray(o.points[0])?r(o.points):n(o.points))}function r(e){for(let t=0,o=e.length;t<o;t++){let o=e[t];o?Array.isArray(o[0])?r(o):n(o):this.logger.log("no array, oups !")}}function n(e){t.push(new o.Shape(e))}return t}});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class b extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,o,n){super._convert(e,t,r,o,n);try{r((new y).parse(e))}catch(e){n(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class F extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.JSON})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{r((new o.STLLoader).parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class w extends t.TAbstractFileConverter{constructor(){super({dumpType:t.TAbstractFileConverter.DumpType.ArrayBuffer})}_convert(e,t,r,n,i){super._convert(e,t,r,n,i);try{r((new o.TDSLoader).parse(e))}catch(e){i(e)}}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class T extends t.TAbstractDataInserter{constructor(e={}){super(e),this.mergeStrategy="add"}static _arrayify(e){let t=[];return i.isDefined(e)&&(t=i.isArray(e)?e:[e]),t}async _save(e,t,r,o,n){const a=T._arrayify(e);if(i.isEmptyArray(a))return void n("No data to save in database. Abort insert !");const c=a.map(e=>e.name);console.log(`ThreeToMongoDB: Saving ${c}`),t.mergeStrategy&&(this.mergeStrategy=t.mergeStrategy);try{const e=t.parentId;let o=null,c=null;if(i.isDefined(e)){const r=await this._readOneDocument("Objects3D",{_id:e});if(i.isNull(r))return void n(`Unable to retrieve parent with id (${t.parentId}). Abort insert !`);if("add"===this.mergeStrategy)o=await this._parseObjects(a,e),c=i.isDefined(o)?o.filter(e=>e).map(e=>e._id):[],await this._updateDocument(r,{$addToSet:{children:c}});else if("replace"===this.mergeStrategy){const t=await this._readManyDocument("Objects3D",{parent:e}),n=a.map(e=>e.uuid),s=t.filter(e=>!n.includes(e.uuid));await this._removeChildrenDocuments(s),o=await this._parseObjects(a,e),c=i.isDefined(o)?o.filter(e=>e).map(e=>e._id):[],await this._updateDocument(r,{$set:{children:c}})}}else o=await this._parseObjects(a,null),c=i.isDefined(o)?o.filter(e=>e).map(e=>e._id):[];console.log(`ThreeToMongoDB: Saved ${c}`),r()}catch(e){n(e)}}async _parseObjects(e=[],t=null){const r=T._arrayify(e);if(i.isEmptyArray(r))return null;const o=[];for(let e=0,n=r.length;e<n;e++)o.push(this._parseObject(r[e],t));return Promise.all(o)}async _parseObject(e,t=null){if(i.isNotDefined(e))return null;const r=e.type,o=e.name,n=e.geometry,a=T._arrayify(e.children),c=T._arrayify(e.material);if(i.isDefined(n)&&i.isEmptyArray(a))if(n.isGeometry){const e=n.vertices;if(i.isNotDefined(e)||i.isEmptyArray(e))return console.error(`Leaf object ${o} have a geometry that doesn't contain vertices ! Skip it.`),null}else{if(!n.isBufferGeometry)return console.error(`Object ${o} contain an unknown/unmanaged geometry of type ${n.type} ! Skip it.`),null;{const e=n.attributes;if(i.isNotDefined(e))return console.error(`Buffer geometry of ${o} doesn't contain attributes ! Skip it.`),null;const t=e.position;if(i.isNotDefined(t)||0===t.count)return console.error(`Leaf object ${o} have a buffer geometry that doesn't contain position attribute ! Skip it.`),null}}let s=null;if(T.AvailableLineTypes.includes(r)){if(i.isNotDefined(n))return console.error(`Missing geometry for object ${e.name} of type ${r}. Only Sprite can contains material without geometry ! Skip it.`),null;s=T.AvailableLineMaterialTypes}else if(T.AvailablePointTypes.includes(r)){if(i.isNotDefined(n))return console.error(`Missing geometry for object ${e.name} of type ${r}. Only Sprite can contains material without geometry ! Skip it.`),null;s=T.AvailablePointMaterialTypes}else T.AvailableSpriteTypes.includes(r)&&(s=T.AvailableSpriteMaterialTypes);if(s)for(let e=0,t=c.length;e<t;e++){const t=c[e].type;if(!s.includes(t))return console.error(`Object ${o} of type ${r}, contain an invalid material of type ${t} ! Skip it.`),null}const d=await this._getOrCreateDocuments(n),u=i.isDefined(d)?d.filter(e=>e).map(e=>e._id).pop():null,m=await this._getOrCreateDocuments(c),l=i.isDefined(m)?m.filter(e=>e).map(e=>e._id):[];let f=await this._readOneDocument(r,{uuid:e.uuid,parent:t});if(i.isDefined(f))if("add"===this.mergeStrategy){const e=await this._parseObjects(a,f._id),t=i.isDefined(e)?e.filter(e=>e).map(e=>e._id):[];await this._updateDocument(f,{$addToSet:{children:t}})}else if("replace"===this.mergeStrategy){const e=await this._readManyDocument("Objects3D",{parent:f._id}),t=a.map(e=>e.uuid),r=e.filter(e=>!t.includes(e.uuid));await this._removeChildrenDocuments(r);const o=await this._parseObjects(a,f._id),n=i.isDefined(o)?o.filter(e=>e).map(e=>e._id):[];await this._updateDocument(f,{$set:{children:n,geometry:u,material:l}})}else console.error(`Unknown/Unmanaged merge srategy ${this.mergeStrategy}`);else{e.parent=t,e.children=[],e.geometry=u,e.material=l,f=await this._createDocument(e);const r=await this._parseObjects(a,f._id),o=i.isDefined(r)?r.filter(e=>e).map(e=>e._id):[];await this._updateDocument(f,{$set:{children:o,geometry:u,material:l}})}return f}async _getOrCreateDocuments(e=[]){const t=T._arrayify(e);if(i.isEmptyArray(t))return null;const r=[];for(let e=0,o=t.length;e<o;e++)r.push(this._getOrCreateDocument(t[e]));return Promise.all(r)}async _getOrCreateDocument(e){if(i.isNotDefined(e))return null;let t=await this._readOneDocument(e.type,{uuid:e.uuid});return t=i.isDefined(t)?await this._updateDocument(t,e):await this._createDocument(e),t}async _createDocuments(e=[]){const t=T._arrayify(e);if(i.isEmptyArray(t))return null;const r=[];for(let e=0,o=t.length;e<o;e++)r.push(this._createDocument(t[e]));return Promise.all(r)}async _createDocument(e){if(i.isNotDefined(e))return null;const t=this._driver.model(e.type);return(await t(e).save())._doc}async _readOneDocument(e,t){if(i.isNotDefined(e)||i.isNotDefined(t))return null;const r=await this._driver.model(e).findOne(t).exec();return i.isDefined(r)?r._doc:null}async _readManyDocument(e,t){if(i.isNotDefined(e)||i.isNotDefined(t))return null;return(await this._driver.model(e).find(t).exec()).map(e=>e._doc)}async _updateDocuments(e=[],t,r){const o=T._arrayify(e);if(i.isEmptyArray(o))return null;const n=[];for(let e=0,i=o.length;e<i;e++)n.push(this._updateDocument(o[e],t,r));return Promise.all(n)}async _updateDocument(e,t,r){return i.isNotDefined(e)?null:await this._driver.model(e.type).findByIdAndUpdate(e._id,t,r).exec()}async _deleteDocuments(e=[]){const t=T._arrayify(e);if(i.isEmptyArray(t))return null;const r=[];for(let e=0,o=t.length;e<o;e++)r.push(this._deleteDocument(t[e]));return Promise.all(r)}async _deleteDocument(e){return i.isNotDefined(e)?null:await this._driver.model(e.type).findByIdAndDelete(e._id).exec()}async _removeChildrenDocuments(e){let t=[];for(let r=e.length-1;r>=0;r--)t.push(this._removeChildDocument(e[r]));return Promise.all(t)}async _removeChildDocument(e){const t=await this._readManyDocument("Objects3D",{parent:e._id});await this._removeChildrenDocuments(t),await this._removeOrphanGeometryWithId(e.geometry),await this._removeOrphanMaterialsWithIds(e.material||[]),await this._deleteDocument(e)}async _removeOrphanGeometryWithId(e){if(i.isNotDefined(e))return;if((await this._readManyDocument("Objects3D",{geometry:e})).length>1)return;const t=await this._readOneDocument("Geometries",{_id:e});await this._deleteDocument(t)}async _removeOrphanMaterialsWithIds(e){const t=[];for(let r=0,o=e.length;r<o;r++)t.push(this._removeOrphanMaterialWithId(e[r]));return Promise.all(t)}async _removeOrphanMaterialWithId(e){if((await this._readManyDocument("Objects3D",{material:e})).length>1)return;const t=await this._readOneDocument("Materials",{_id:e});await this._deleteDocument(t)}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Object3D
 *
 * @description Todo...
 */
function _(){}T.AvailableCurveTypes=["Curve","ArcCurve","CatmullRomCurve3","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","CurvePath","Path","Shape"],T.AvailableLineTypes=["Line","LineLoop","LineSegments"],T.AvailableLineMaterialTypes=["LineBasicMaterial","LineDashedMaterial"],T.AvailablePointTypes=["Points"],T.AvailablePointMaterialTypes=["PointsMaterial"],T.AvailableSpriteTypes=["Sprite"],T.AvailableSpriteMaterialTypes=["SpriteMaterial"],_.getSchemaFrom=e=>(_._schema||_._createSchema(e),_._schema),_._createSchema=e=>{const t=e.Schema,r=t.Types,o=r.ObjectId,n=r.Mixed,i=r.Vector3,a=r.Quaternion,c=r.Matrix4,s=r.Euler;_._schema=new t({uuid:String,name:String,type:String,parent:o,children:[o],up:i,position:i,rotation:s,quaternion:a,scale:{type:i,default:{x:1,y:1,z:1}},modelViewMatrix:c,normalMatrix:c,matrix:c,matrixWorld:c,matrixAutoUpdate:Boolean,matrixWorldNeedsUpdate:Boolean,layers:{type:Number,set:e=>e.mask},visible:Boolean,castShadow:Boolean,receiveShadow:Boolean,frustumCulled:Boolean,renderOrder:Boolean,userData:{type:n,set:e=>function e(t){let r={};for(let o in t){if(!Object.prototype.hasOwnProperty.call(t,o))continue;let n=t[o];n.constructor===Object&&(n=e(n)),r[o.replace(/\./g,"")]=n}return r}(e)}},{collection:"objects",discriminatorKey:"type"})},_.getModelFrom=e=>(_._model||_._createModel(e),_._model),_._createModel=e=>{_._model=e.model("Objects3D",_.getSchemaFrom(e)),_._model.discriminator("Object3D",new e.Schema({}))},_.registerModelTo=e=>(_._model||_._createModel(e),e),_._schema=null,_._model=null;var N=Object.freeze({__proto__:null,Object3D:_});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:B}=N;let O=void 0,I=void 0;function D(e){return O||function(e){const t=e.Schema;O=new t({})}(e),O}function x(e){const t=B.getModelFrom(e);I=t.discriminator("Audio",D(e))}var C={getSchemaFrom:D,getModelFrom:function(e){return I||x(e),I},registerModelTo:function(e){return I||x(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:E}=N;let A=void 0,j=void 0;function L(e){return A||function(e){const t=e.Schema;A=new t({})}(e),A}function P(e){const t=E.getModelFrom(e);j=t.discriminator("AudioListener",L(e))}var G={getSchemaFrom:L,getModelFrom:function(e){return j||P(e),j},registerModelTo:function(e){return j||P(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:V}=N;let $=void 0,U=void 0;function k(e){return $||function(e){const t=e.Schema;$=new t({})}(e),$}function z(e){const t=V.getModelFrom(e);U=t.discriminator("PositionalAudio",k(e))}var R={getSchemaFrom:k,getModelFrom:function(e){return U||z(e),U},registerModelTo:function(e){return U||z(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:H}=N;let Q=void 0,Y=void 0;function Z(e){return Q||function(e){const t=e.Schema;Q=new t({})}(e),Q}function X(e){const t=H.getModelFrom(e);Y=t.discriminator("ArrayCamera",Z(e))}var W={getSchemaFrom:Z,getModelFrom:function(e){return Y||X(e),Y},registerModelTo:function(e){return Y||X(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:q}=N;let K=void 0,J=void 0;function ee(e){return K||function(e){const t=e.Schema;K=new t({})}(e),K}function te(e){const t=q.getModelFrom(e);J=t.discriminator("Camera",ee(e))}var re={getSchemaFrom:ee,getModelFrom:function(e){return J||te(e),J},registerModelTo:function(e){return J||te(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:oe}=N;let ne=void 0,ie=void 0;function ae(e){return ne||function(e){const t=e.Schema;ne=new t({})}(e),ne}function ce(e){const t=oe.getModelFrom(e);ie=t.discriminator("CubeCamera",ae(e))}var se={getSchemaFrom:ae,getModelFrom:function(e){return ie||ce(e),ie},registerModelTo:function(e){return ie||ce(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:de}=N;let ue=void 0,me=void 0;function le(e){return ue||function(e){const t=e.Schema;ue=new t({})}(e),ue}function fe(e){const t=de.getModelFrom(e);me=t.discriminator("OrthographicCamera",le(e))}var he={getSchemaFrom:le,getModelFrom:function(e){return me||fe(e),me},registerModelTo:function(e){return me||fe(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:ge}=N;let pe=void 0,ve=void 0;function Se(e){return pe||function(e){const t=e.Schema;pe=new t({})}(e),pe}function Me(e){const t=ge.getModelFrom(e);ve=t.discriminator("PerspectiveCamera",Se(e))}var ye={getSchemaFrom:Se,getModelFrom:function(e){return ve||Me(e),ve},registerModelTo:function(e){return ve||Me(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Geometry
 *
 * @description Todo...
 */const{isInt8Array:be,isInt16Array:Fe,isInt32Array:we,isFloat32Array:Te,isFloat64Array:_e,isUint8Array:Ne,isUint8ClampedArray:Be,isUint16Array:Oe,isUint32Array:Ie,isBigInt64Array:De,isBigUint64Array:xe}=a;let Ce=void 0;var Ee={getSchemaFrom:function(e){return Ce||function(e){const t=e.Schema,r=t.Types.Mixed,o={Int8Array:0,Uint8Array:1,Uint8ClampedArray:2,Int16Array:3,Uint16Array:4,Int32Array:5,Uint32Array:6,Float32Array:7,Float64Array:8,BigInt64Array:9,BigUint64Array:10};Ce=new t({array:{type:Buffer,set:e=>{const t=e.length;let r=null,n=0;if(be(e)){r=Buffer.allocUnsafe(1+1*t),n=r.writeUInt8(o.Int8Array,n);for(let o=0;o<t;o++)n=r.writeInt8(e[o],n)}else if(Ne(e)){r=Buffer.allocUnsafe(1+1*t),n=r.writeUInt8(o.Uint8Array,n);for(let o=0;o<t;o++)n=r.writeUInt8(e[o],n)}else if(Be(e)){r=Buffer.allocUnsafe(1+1*t),n=r.writeUInt8(o.Uint8ClampedArray,n);for(let o=0;o<t;o++)n=r.writeUInt8(e[o],n)}else if(Fe(e)){r=Buffer.allocUnsafe(1+2*t),n=r.writeUInt8(o.Int16Array,n);for(let o=0;o<t;o++)n=r.writeInt16BE(e[o],n)}else if(Oe(e)){r=Buffer.allocUnsafe(1+2*t),n=r.writeUInt8(o.Uint16Array,n);for(let o=0;o<t;o++)n=r.writeUInt16BE(e[o],n)}else if(we(e)){r=Buffer.allocUnsafe(1+4*t),n=r.writeUInt8(o.Int32Array,n);for(let o=0;o<t;o++)n=r.writeInt32BE(e[o],n)}else if(Ie(e)){r=Buffer.allocUnsafe(1+4*t),n=r.writeUInt8(o.Uint32Array,n);for(let o=0;o<t;o++)n=r.writeUInt32BE(e[o],n)}else if(Te(e)){r=Buffer.allocUnsafe(1+4*t),n=r.writeUInt8(o.Float32Array,n);for(let o=0;o<t;o++)n=r.writeFloatBE(e[o],n)}else if(_e(e)){r=Buffer.allocUnsafe(1+8*t),n=r.writeUInt8(o.Float64Array,n);for(let o=0;o<t;o++)n=r.writeDoubleBE(e[o],n)}else if(De(e)){r=Buffer.allocUnsafe(1+8*t),n=r.writeUInt8(o.BigInt64Array,n);for(let o=0;o<t;o++)n=r.writeDoubleBE(e[o],n)}else{if(!xe(e))throw new Error("Unable to determine the array type to bufferize.");r=Buffer.allocUnsafe(1+8*t),n=r.writeUInt8(o.BigUint64Array,n);for(let o=0;o<t;o++)n=r.writeDoubleBE(e[o],n)}return r}},count:Number,dynamic:Boolean,itemSize:Number,name:String,needsUpdate:Boolean,normalized:Boolean,updateRange:r,uuid:String,version:Number},{_id:!1,id:!1})}(e),Ce},getModelFrom:()=>null,registerModelTo:e=>e},Ae={BufferAttribute:Ee};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/BufferGeometry
 *
 * @description Todo...
 */
const{BufferAttribute:je}=Ae;let Le=void 0,Pe=void 0;function Ge(e){return Le||function(e){const t=e.Schema,r=t.Types,o=r.Mixed,n=r.Vector3,i=je.getSchemaFrom(e);Le=new t({uuid:String,name:String,type:String,index:i,attributes:{position:i,normal:i,color:i,uv:i},groups:o,boundingBox:{min:n,max:n},boundingSphere:{center:n,radius:Number},drawRange:o},{collection:"geometries",discriminatorKey:"type"})}(e),Le}function Ve(e){Pe=e.model("BufferGeometries",Ge(e)),Pe.discriminator("BufferGeometry",new e.Schema({}))}var $e={getSchemaFrom:Ge,getModelFrom:function(e){return Pe||Ve(e),Pe},registerModelTo:function(e){return Pe||Ve(e),e}},Ue={BufferGeometry:$e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Geometry
 *
 * @description Todo...
 */
let ke=void 0,ze=void 0;function Re(e){return ke||function(e){const t=e.Schema;ke=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{collection:"curves",discriminatorKey:"type"})}(e),ke}function He(e){ze=e.model("Curves",Re(e)),ze.discriminator("Curve",new e.Schema({}))}var Qe={getSchemaFrom:Re,getModelFrom:function(e){return ze||He(e),ze},registerModelTo:function(e){return ze||He(e),e}},Ye={Curve:Qe};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
const{Curve:Ze}=Ye;let Xe=void 0,We=void 0;function qe(e){return Xe||function(e){const t=e.Schema,r=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});Xe=new t({curves:[r],autoClose:{type:Boolean,default:!1}})}(e),Xe}function Ke(e){const t=Ze.getModelFrom(e);We=t.discriminator("CurvePath",qe(e))}var Je={getSchemaFrom:qe,getModelFrom:function(e){return We||Ke(e),We},registerModelTo:function(e){return We||Ke(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Face3
 *
 * @description Todo...
 */let et=void 0;var tt={getSchemaFrom:function(e){return et||function(e){const t=e.Schema,r=t.Types,o=r.Color,n=r.Vector3;et=new t({a:Number,b:Number,c:Number,normal:n,vertexNormals:[Number],color:o,vertexColors:[Number],materialIndex:Number},{_id:!1,id:!1})}(e),et},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Geometry
 *
 * @description Todo...
 */let rt=void 0,ot=void 0;function nt(e){return rt||function(e){const t=tt.getSchemaFrom(e),r=e.Schema,o=r.Types.Vector3;rt=new r({uuid:String,name:String,type:String,vertices:[o],colors:[Number],faces:[t],faceVertexUvs:[[Number]],morphTargets:[Number],morphNormals:[Number],skinWeights:[Number],skinIndices:[Number],lineDistances:[Number],boundingBox:{min:o,max:o},boundingSphere:{center:o,radius:Number},elementsNeedUpdate:Boolean,verticesNeedUpdate:Boolean,uvsNeedUpdate:Boolean,normalsNeedUpdate:Boolean,colorsNeedUpdate:Boolean,lineDistancesNeedUpdate:Boolean,groupsNeedUpdate:Boolean},{collection:"geometries",discriminatorKey:"type"})}(e),rt}function it(e){ot=e.model("Geometries",nt(e)),ot.discriminator("Geometry",new e.Schema({}))}const at={getSchemaFrom:nt,getModelFrom:function(e){return ot||it(e),ot},registerModelTo:function(e){return ot||it(e),e}};var ct=Object.freeze({__proto__:null,Geometry:at});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:st}=Ye;let dt=void 0,ut=void 0;function mt(e){return dt||function(e){const t=e.Schema,r=t.Types.Vector2,o=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1});dt=new t({curves:[o],autoClose:{type:Boolean,default:!1},currentPoint:r})}(e),dt}function lt(e){const t=st.getModelFrom(e);ut=t.discriminator("Path",mt(e))}var ft={getSchemaFrom:mt,getModelFrom:function(e){return ut||lt(e),ut},registerModelTo:function(e){return ut||lt(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:ht}=Ye;let gt=void 0,pt=void 0;function vt(e){return gt||function(e){const t=e.Schema,r=t.Types.Vector2,o=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),n=new t({curves:[o],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1});gt=new t({curves:[o],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[n]})}(e),gt}function St(e){const t=ht.getModelFrom(e);pt=t.discriminator("Shape",vt(e))}var Mt={getSchemaFrom:vt,getModelFrom:function(e){return pt||St(e),pt},registerModelTo:function(e){return pt||St(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:yt}=Ye;let bt=void 0,Ft=void 0;function wt(e){return bt||function(e){const t=e.Schema;bt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),bt}function Tt(e){const t=yt.getModelFrom(e);Ft=t.discriminator("ArcCurve",wt(e))}var _t={getSchemaFrom:wt,getModelFrom:function(e){return Ft||Tt(e),Ft},registerModelTo:function(e){return Ft||Tt(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Nt}=Ye;let Bt=void 0,Ot=void 0;function It(e){return Bt||function(e){const t=e.Schema,r=t.Types.Vector3;Bt=new t({points:[r],closed:Boolean,curveType:String,tension:Number})}(e),Bt}function Dt(e){const t=Nt.getModelFrom(e);Ot=t.discriminator("CatmullRomCurve3",It(e))}var xt={getSchemaFrom:It,getModelFrom:function(e){return Ot||Dt(e),Ot},registerModelTo:function(e){return Ot||Dt(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Ct}=Ye;let Et=void 0,At=void 0;function jt(e){return Et||function(e){const t=e.Schema,r=t.Types.Vector2;Et=new t({v0:r,v1:r,v2:r,v3:r})}(e),Et}function Lt(e){const t=Ct.getModelFrom(e);At=t.discriminator("CubicBezierCurve",jt(e))}var Pt={getSchemaFrom:jt,getModelFrom:function(e){return At||Lt(e),At},registerModelTo:function(e){return At||Lt(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Gt}=Ye;let Vt=void 0,$t=void 0;function Ut(e){return Vt||function(e){const t=e.Schema,r=t.Types.Vector3;Vt=new t({v0:r,v1:r,v2:r,v3:r})}(e),Vt}function kt(e){const t=Gt.getModelFrom(e);$t=t.discriminator("CubicBezierCurve3",Ut(e))}var zt={getSchemaFrom:Ut,getModelFrom:function(e){return $t||kt(e),$t},registerModelTo:function(e){return $t||kt(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Rt}=Ye;let Ht=void 0,Qt=void 0;function Yt(e){return Ht||function(e){const t=e.Schema;Ht=new t({})}(e),Ht}function Zt(e){const t=Rt.getModelFrom(e);Qt=t.discriminator("CurveExtras",Yt(e))}var Xt={getSchemaFrom:Yt,getModelFrom:function(e){return Qt||Zt(e),Qt},registerModelTo:function(e){return Qt||Zt(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Wt}=Ye;let qt=void 0,Kt=void 0;function Jt(e){return qt||function(e){const t=e.Schema;qt=new t({aX:Number,aY:Number,xRadius:Number,yRadius:Number,aStartAngle:Number,aEndAngle:Number,aClockwise:Boolean,aRotation:Number})}(e),qt}function er(e){const t=Wt.getModelFrom(e);Kt=t.discriminator("EllipseCurve",Jt(e))}var tr={getSchemaFrom:Jt,getModelFrom:function(e){return Kt||er(e),Kt},registerModelTo:function(e){return Kt||er(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:rr}=Ye;let or=void 0,nr=void 0;function ir(e){return or||function(e){const t=e.Schema,r=t.Types.Vector2;or=new t({v0:r,v1:r})}(e),or}function ar(e){const t=rr.getModelFrom(e);nr=t.discriminator("LineCurve",ir(e))}var cr={getSchemaFrom:ir,getModelFrom:function(e){return nr||ar(e),nr},registerModelTo:function(e){return nr||ar(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:sr}=Ye;let dr=void 0,ur=void 0;function mr(e){return dr||function(e){const t=e.Schema,r=t.Types.Vector3;dr=new t({v0:r,v1:r})}(e),dr}function lr(e){const t=sr.getModelFrom(e);ur=t.discriminator("LineCurve3",mr(e))}var fr={getSchemaFrom:mr,getModelFrom:function(e){return ur||lr(e),ur},registerModelTo:function(e){return ur||lr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:hr}=Ye;let gr=void 0,pr=void 0;function vr(e){return gr||function(e){const t=e.Schema;gr=new t({})}(e),gr}function Sr(e){const t=hr.getModelFrom(e);pr=t.discriminator("NURBSCurve",vr(e))}var Mr={getSchemaFrom:vr,getModelFrom:function(e){return pr||Sr(e),pr},registerModelTo:function(e){return pr||Sr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:yr}=Ye;let br=void 0,Fr=void 0;function wr(e){return br||function(e){const t=e.Schema;br=new t({})}(e),br}function Tr(e){const t=yr.getModelFrom(e);Fr=t.discriminator("NURBSSurface",wr(e))}var _r={getSchemaFrom:wr,getModelFrom:function(e){return Fr||Tr(e),Fr},registerModelTo:function(e){return Fr||Tr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Nr}=Ye;let Br=void 0,Or=void 0;function Ir(e){return Br||function(e){const t=e.Schema,r=t.Types.Vector2;Br=new t({v0:r,v1:r,v2:r})}(e),Br}function Dr(e){const t=Nr.getModelFrom(e);Or=t.discriminator("QuadraticBezierCurve",Ir(e))}var xr={getSchemaFrom:Ir,getModelFrom:function(e){return Or||Dr(e),Or},registerModelTo:function(e){return Or||Dr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Cr}=Ye;let Er=void 0,Ar=void 0;function jr(e){return Er||function(e){const t=e.Schema,r=t.Types.Vector3;Er=new t({v0:r,v1:r,v2:r})}(e),Er}function Lr(e){const t=Cr.getModelFrom(e);Ar=t.discriminator("QuadraticBezierCurve3",jr(e))}var Pr={getSchemaFrom:jr,getModelFrom:function(e){return Ar||Lr(e),Ar},registerModelTo:function(e){return Ar||Lr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Curve:Gr}=Ye;let Vr=void 0,$r=void 0;function Ur(e){return Vr||function(e){const t=e.Schema,r=t.Types.Vector3;Vr=new t({points:[r]})}(e),Vr}function kr(e){const t=Gr.getModelFrom(e);$r=t.discriminator("SplineCurve",Ur(e))}var zr={getSchemaFrom:Ur,getModelFrom:function(e){return $r||kr(e),$r},registerModelTo:function(e){return $r||kr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Rr}=Ue;let Hr=void 0,Qr=void 0;function Yr(e){return Hr||function(e){const t=e.Schema;Hr=new t({})}(e),Hr}function Zr(e){const t=Rr.getModelFrom(e);Qr=t.discriminator("BoxBufferGeometry",Yr(e))}var Xr={getSchemaFrom:Yr,getModelFrom:function(e){return Qr||Zr(e),Qr},registerModelTo:function(e){return Qr||Zr(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Wr}=ct;let qr=void 0,Kr=void 0;function Jr(e){return qr||function(e){const t=e.Schema;qr=new t({})}(e),qr}function eo(e){const t=Wr.getModelFrom(e);Kr=t.discriminator("BoxGeometry",Jr(e))}var to={getSchemaFrom:Jr,getModelFrom:function(e){return Kr||eo(e),Kr},registerModelTo:function(e){return Kr||eo(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:ro}=Ue;let oo=void 0,no=void 0;function io(e){return oo||function(e){const t=e.Schema;oo=new t({})}(e),oo}function ao(e){const t=ro.getModelFrom(e);no=t.discriminator("CircleBufferGeometry",io(e))}var co={getSchemaFrom:io,getModelFrom:function(e){return no||ao(e),no},registerModelTo:function(e){return no||ao(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:so}=ct;let uo=void 0,mo=void 0;function lo(e){return uo||function(e){const t=e.Schema;uo=new t({})}(e),uo}function fo(e){const t=so.getModelFrom(e);mo=t.discriminator("CircleGeometry",lo(e))}var ho={getSchemaFrom:lo,getModelFrom:function(e){return mo||fo(e),mo},registerModelTo:function(e){return mo||fo(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:go}=Ue;let po=void 0,vo=void 0;function So(e){return po||function(e){const t=e.Schema;po=new t({})}(e),po}function Mo(e){const t=go.getModelFrom(e);vo=t.discriminator("ConeBufferGeometry",So(e))}var yo={getSchemaFrom:So,getModelFrom:function(e){return vo||Mo(e),vo},registerModelTo:function(e){return vo||Mo(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:bo}=ct;let Fo=void 0,wo=void 0;function To(e){return Fo||function(e){const t=e.Schema;Fo=new t({})}(e),Fo}function _o(e){const t=bo.getModelFrom(e);wo=t.discriminator("ConeGeometry",To(e))}var No={getSchemaFrom:To,getModelFrom:function(e){return wo||_o(e),wo},registerModelTo:function(e){return wo||_o(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Bo}=ct;let Oo=void 0,Io=void 0;function Do(e){return Oo||function(e){const t=e.Schema;Oo=new t({})}(e),Oo}function xo(e){const t=Bo.getModelFrom(e);Io=t.discriminator("ConvexGeometry",Do(e))}var Co={getSchemaFrom:Do,getModelFrom:function(e){return Io||xo(e),Io},registerModelTo:function(e){return Io||xo(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Eo}=Ue;let Ao=void 0,jo=void 0;function Lo(e){return Ao||function(e){const t=e.Schema;Ao=new t({})}(e),Ao}function Po(e){const t=Eo.getModelFrom(e);jo=t.discriminator("CylinderBufferGeometry",Lo(e))}var Go={getSchemaFrom:Lo,getModelFrom:function(e){return jo||Po(e),jo},registerModelTo:function(e){return jo||Po(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Vo}=ct;let $o=void 0,Uo=void 0;function ko(e){return $o||function(e){const t=e.Schema;$o=new t({})}(e),$o}function zo(e){const t=Vo.getModelFrom(e);Uo=t.discriminator("CylinderGeometry",ko(e))}var Ro={getSchemaFrom:ko,getModelFrom:function(e){return Uo||zo(e),Uo},registerModelTo:function(e){return Uo||zo(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Ho}=ct;let Qo=void 0,Yo=void 0;function Zo(e){return Qo||function(e){const t=e.Schema;Qo=new t({})}(e),Qo}function Xo(e){const t=Ho.getModelFrom(e);Yo=t.discriminator("DecalGeometry",Zo(e))}var Wo={getSchemaFrom:Zo,getModelFrom:function(e){return Yo||Xo(e),Yo},registerModelTo:function(e){return Yo||Xo(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:qo}=ct;let Ko=void 0,Jo=void 0;function en(e){return Ko||function(e){const t=e.Schema;Ko=new t({})}(e),Ko}function tn(e){const t=qo.getModelFrom(e);Jo=t.discriminator("DodecahedronGeometry",en(e))}var rn={getSchemaFrom:en,getModelFrom:function(e){return Jo||tn(e),Jo},registerModelTo:function(e){return Jo||tn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:on}=ct;let nn=void 0,an=void 0;function cn(e){return nn||function(e){const t=e.Schema;nn=new t({})}(e),nn}function sn(e){const t=on.getModelFrom(e);an=t.discriminator("EdgesGeometry",cn(e))}var dn={getSchemaFrom:cn,getModelFrom:function(e){return an||sn(e),an},registerModelTo:function(e){return an||sn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:un}=Ue;let mn=void 0,ln=void 0;function fn(e){return mn||function(e){const t=e.Schema;mn=new t({})}(e),mn}function hn(e){const t=un.getModelFrom(e);ln=t.discriminator("ExtrudeBufferGeometry",fn(e))}var gn={getSchemaFrom:fn,getModelFrom:function(e){return ln||hn(e),ln},registerModelTo:function(e){return ln||hn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:pn}=ct;let vn=void 0,Sn=void 0;function Mn(e){return vn||function(e){const t=e.Schema;vn=new t({})}(e),vn}function yn(e){const t=pn.getModelFrom(e);Sn=t.discriminator("ExtrudeGeometry",Mn(e))}var bn={getSchemaFrom:Mn,getModelFrom:function(e){return Sn||yn(e),Sn},registerModelTo:function(e){return Sn||yn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Fn}=Ue;let wn=void 0,Tn=void 0;function _n(e){return wn||function(e){const t=e.Schema;wn=new t({})}(e),wn}function Nn(e){const t=Fn.getModelFrom(e);Tn=t.discriminator("IcosahedronBufferGeometry",_n(e))}var Bn={getSchemaFrom:_n,getModelFrom:function(e){return Tn||Nn(e),Tn},registerModelTo:function(e){return Tn||Nn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:On}=ct;let In=void 0,Dn=void 0;function xn(e){return In||function(e){const t=e.Schema;In=new t({})}(e),In}function Cn(e){const t=On.getModelFrom(e);Dn=t.discriminator("IcosahedronGeometry",xn(e))}var En={getSchemaFrom:xn,getModelFrom:function(e){return Dn||Cn(e),Dn},registerModelTo:function(e){return Dn||Cn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:An}=Ue;let jn=void 0,Ln=void 0;function Pn(e){return jn||function(e){const t=e.Schema;jn=new t({})}(e),jn}function Gn(e){const t=An.getModelFrom(e);Ln=t.discriminator("InstancedBufferGeometry",Pn(e))}var Vn={getSchemaFrom:Pn,getModelFrom:function(e){return Ln||Gn(e),Ln},registerModelTo:function(e){return Ln||Gn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:$n}=Ue;let Un=void 0,kn=void 0;function zn(e){return Un||function(e){const t=e.Schema;Un=new t({})}(e),Un}function Rn(e){const t=$n.getModelFrom(e);kn=t.discriminator("LatheBufferGeometry",zn(e))}var Hn={getSchemaFrom:zn,getModelFrom:function(e){return kn||Rn(e),kn},registerModelTo:function(e){return kn||Rn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Qn}=ct;let Yn=void 0,Zn=void 0;function Xn(e){return Yn||function(e){const t=e.Schema;Yn=new t({})}(e),Yn}function Wn(e){const t=Qn.getModelFrom(e);Zn=t.discriminator("LatheGeometry",Xn(e))}var qn={getSchemaFrom:Xn,getModelFrom:function(e){return Zn||Wn(e),Zn},registerModelTo:function(e){return Zn||Wn(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Kn}=Ue;let Jn=void 0,ei=void 0;function ti(e){return Jn||function(e){const t=e.Schema;Jn=new t({})}(e),Jn}function ri(e){const t=Kn.getModelFrom(e);ei=t.discriminator("OctahedronBufferGeometry",ti(e))}var oi={getSchemaFrom:ti,getModelFrom:function(e){return ei||ri(e),ei},registerModelTo:function(e){return ei||ri(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:ni}=ct;let ii=void 0,ai=void 0;function ci(e){return ii||function(e){const t=e.Schema;ii=new t({})}(e),ii}function si(e){const t=ni.getModelFrom(e);ai=t.discriminator("OctahedronGeometry",ci(e))}var di={getSchemaFrom:ci,getModelFrom:function(e){return ai||si(e),ai},registerModelTo:function(e){return ai||si(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:ui}=Ue;let mi=void 0,li=void 0;function fi(e){return mi||function(e){const t=e.Schema;mi=new t({})}(e),mi}function hi(e){const t=ui.getModelFrom(e);li=t.discriminator("ParametricBufferGeometry",fi(e))}var gi={getSchemaFrom:fi,getModelFrom:function(e){return li||hi(e),li},registerModelTo:function(e){return li||hi(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:pi}=ct;let vi=void 0,Si=void 0;function Mi(e){return vi||function(e){const t=e.Schema;vi=new t({})}(e),vi}function yi(e){const t=pi.getModelFrom(e);Si=t.discriminator("ParametricGeometry",Mi(e))}var bi={getSchemaFrom:Mi,getModelFrom:function(e){return Si||yi(e),Si},registerModelTo:function(e){return Si||yi(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Fi}=Ue;let wi=void 0,Ti=void 0;function _i(e){return wi||function(e){const t=e.Schema;wi=new t({})}(e),wi}function Ni(e){const t=Fi.getModelFrom(e);Ti=t.discriminator("PlaneBufferGeometry",_i(e))}var Bi={getSchemaFrom:_i,getModelFrom:function(e){return Ti||Ni(e),Ti},registerModelTo:function(e){return Ti||Ni(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Oi}=ct;let Ii=void 0,Di=void 0;function xi(e){return Ii||function(e){const t=e.Schema;Ii=new t({})}(e),Ii}function Ci(e){const t=Oi.getModelFrom(e);Di=t.discriminator("PlaneGeometry",xi(e))}var Ei={getSchemaFrom:xi,getModelFrom:function(e){return Di||Ci(e),Di},registerModelTo:function(e){return Di||Ci(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Ai}=Ue;let ji=void 0,Li=void 0;function Pi(e){return ji||function(e){const t=e.Schema;ji=new t({})}(e),ji}function Gi(e){const t=Ai.getModelFrom(e);Li=t.discriminator("PolyhedronBufferGeometry",Pi(e))}var Vi={getSchemaFrom:Pi,getModelFrom:function(e){return Li||Gi(e),Li},registerModelTo:function(e){return Li||Gi(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:$i}=ct;let Ui=void 0,ki=void 0;function zi(e){return Ui||function(e){const t=e.Schema;Ui=new t({})}(e),Ui}function Ri(e){const t=$i.getModelFrom(e);ki=t.discriminator("PolyhedronGeometry",zi(e))}var Hi={getSchemaFrom:zi,getModelFrom:function(e){return ki||Ri(e),ki},registerModelTo:function(e){return ki||Ri(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Qi}=Ue;let Yi=void 0,Zi=void 0;function Xi(e){return Yi||function(e){const t=e.Schema;Yi=new t({})}(e),Yi}function Wi(e){const t=Qi.getModelFrom(e);Zi=t.discriminator("RingBufferGeometry",Xi(e))}var qi={getSchemaFrom:Xi,getModelFrom:function(e){return Zi||Wi(e),Zi},registerModelTo:function(e){return Zi||Wi(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Ki}=ct;let Ji=void 0,ea=void 0;function ta(e){return Ji||function(e){const t=e.Schema;Ji=new t({})}(e),Ji}function ra(e){const t=Ki.getModelFrom(e);ea=t.discriminator("RingGeometry",ta(e))}var oa={getSchemaFrom:ta,getModelFrom:function(e){return ea||ra(e),ea},registerModelTo:function(e){return ea||ra(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:na}=Ue;let ia=void 0,aa=void 0;function ca(e){return ia||function(e){const t=e.Schema,r=t.Types.Vector2,o=new t({type:{type:String,default:"Curve"},arcLengthDivisions:Number},{id:!1,_id:!1}),n=new t({curves:[o],autoClose:{type:Boolean,default:!1},currentPoint:r},{id:!1,_id:!1}),i=new t({curves:[o],autoClose:{type:Boolean,default:!1},currentPoint:r,uuid:String,holes:[n]},{id:!1,_id:!1});ia=new t({shapes:[i],curveSegments:Number})}(e),ia}function sa(e){const t=na.getModelFrom(e);aa=t.discriminator("ShapeBufferGeometry",ca(e))}var da={getSchemaFrom:ca,getModelFrom:function(e){return aa||sa(e),aa},registerModelTo:function(e){return aa||sa(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:ua}=ct;let ma=void 0,la=void 0;function fa(e){return ma||function(e){const t=e.Schema;ma=new t({})}(e),ma}function ha(e){const t=ua.getModelFrom(e);la=t.discriminator("ShapeGeometry",fa(e))}var ga={getSchemaFrom:fa,getModelFrom:function(e){return la||ha(e),la},registerModelTo:function(e){return la||ha(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:pa}=Ue;let va=void 0,Sa=void 0;function Ma(e){return va||function(e){const t=e.Schema;va=new t({})}(e),va}function ya(e){const t=pa.getModelFrom(e);Sa=t.discriminator("SphereBufferGeometry",Ma(e))}var ba={getSchemaFrom:Ma,getModelFrom:function(e){return Sa||ya(e),Sa},registerModelTo:function(e){return Sa||ya(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Fa}=ct;let wa=void 0,Ta=void 0;function _a(e){return wa||function(e){const t=e.Schema;wa=new t({})}(e),wa}function Na(e){const t=Fa.getModelFrom(e);Ta=t.discriminator("SphereGeometry",_a(e))}var Ba={getSchemaFrom:_a,getModelFrom:function(e){return Ta||Na(e),Ta},registerModelTo:function(e){return Ta||Na(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Oa}=Ue;let Ia=void 0,Da=void 0;function xa(e){return Ia||function(e){const t=e.Schema;Ia=new t({})}(e),Ia}function Ca(e){const t=Oa.getModelFrom(e);Da=t.discriminator("TeapotBufferGeometry",xa(e))}var Ea={getSchemaFrom:xa,getModelFrom:function(e){return Da||Ca(e),Da},registerModelTo:function(e){return Da||Ca(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Aa}=Ue;let ja=void 0,La=void 0;function Pa(e){return ja||function(e){const t=e.Schema;ja=new t({})}(e),ja}function Ga(e){const t=Aa.getModelFrom(e);La=t.discriminator("TetrahedronBufferGeometry",Pa(e))}var Va={getSchemaFrom:Pa,getModelFrom:function(e){return La||Ga(e),La},registerModelTo:function(e){return La||Ga(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:$a}=ct;let Ua=void 0,ka=void 0;function za(e){return Ua||function(e){const t=e.Schema;Ua=new t({})}(e),Ua}function Ra(e){const t=$a.getModelFrom(e);ka=t.discriminator("TetrahedronGeometry",za(e))}var Ha={getSchemaFrom:za,getModelFrom:function(e){return ka||Ra(e),ka},registerModelTo:function(e){return ka||Ra(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Qa}=Ue;let Ya=void 0,Za=void 0;function Xa(e){return Ya||function(e){const t=e.Schema;Ya=new t({})}(e),Ya}function Wa(e){const t=Qa.getModelFrom(e);Za=t.discriminator("TextBufferGeometry",Xa(e))}var qa={getSchemaFrom:Xa,getModelFrom:function(e){return Za||Wa(e),Za},registerModelTo:function(e){return Za||Wa(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Ka}=ct;let Ja=void 0,ec=void 0;function tc(e){return Ja||function(e){const t=e.Schema;Ja=new t({})}(e),Ja}function rc(e){const t=Ka.getModelFrom(e);ec=t.discriminator("TextGeometry",tc(e))}var oc={getSchemaFrom:tc,getModelFrom:function(e){return ec||rc(e),ec},registerModelTo:function(e){return ec||rc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:nc}=Ue;let ic=void 0,ac=void 0;function cc(e){return ic||function(e){const t=e.Schema;ic=new t({})}(e),ic}function sc(e){const t=nc.getModelFrom(e);ac=t.discriminator("TorusBufferGeometry",cc(e))}var dc={getSchemaFrom:cc,getModelFrom:function(e){return ac||sc(e),ac},registerModelTo:function(e){return ac||sc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:uc}=ct;let mc=void 0,lc=void 0;function fc(e){return mc||function(e){const t=e.Schema;mc=new t({})}(e),mc}function hc(e){const t=uc.getModelFrom(e);lc=t.discriminator("TorusGeometry",fc(e))}var gc={getSchemaFrom:fc,getModelFrom:function(e){return lc||hc(e),lc},registerModelTo:function(e){return lc||hc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:pc}=Ue;let vc=void 0,Sc=void 0;function Mc(e){return vc||function(e){const t=e.Schema;vc=new t({})}(e),vc}function yc(e){const t=pc.getModelFrom(e);Sc=t.discriminator("TorusKnotBufferGeometry",Mc(e))}var bc={getSchemaFrom:Mc,getModelFrom:function(e){return Sc||yc(e),Sc},registerModelTo:function(e){return Sc||yc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Fc}=ct;let wc=void 0,Tc=void 0;function _c(e){return wc||function(e){const t=e.Schema;wc=new t({})}(e),wc}function Nc(e){const t=Fc.getModelFrom(e);Tc=t.discriminator("TorusKnotGeometry",_c(e))}var Bc={getSchemaFrom:_c,getModelFrom:function(e){return Tc||Nc(e),Tc},registerModelTo:function(e){return Tc||Nc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{BufferGeometry:Oc}=Ue;let Ic=void 0,Dc=void 0;function xc(e){return Ic||function(e){const t=e.Schema;Ic=new t({})}(e),Ic}function Cc(e){const t=Oc.getModelFrom(e);Dc=t.discriminator("TubeBufferGeometry",xc(e))}var Ec={getSchemaFrom:xc,getModelFrom:function(e){return Dc||Cc(e),Dc},registerModelTo:function(e){return Dc||Cc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:Ac}=ct;let jc=void 0,Lc=void 0;function Pc(e){return jc||function(e){const t=e.Schema;jc=new t({})}(e),jc}function Gc(e){const t=Ac.getModelFrom(e);Lc=t.discriminator("TubeGeometry",Pc(e))}var Vc={getSchemaFrom:Pc,getModelFrom:function(e){return Lc||Gc(e),Lc},registerModelTo:function(e){return Lc||Gc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Geometry:$c}=ct;let Uc=void 0,kc=void 0;function zc(e){return Uc||function(e){const t=e.Schema;Uc=new t({})}(e),Uc}function Rc(e){const t=$c.getModelFrom(e);kc=t.discriminator("WireframeGeometry",zc(e))}var Hc={getSchemaFrom:zc,getModelFrom:function(e){return kc||Rc(e),kc},registerModelTo:function(e){return kc||Rc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Qc}=N;let Yc=void 0,Zc=void 0;function Xc(e){return Yc||function(e){const t=e.Schema;Yc=new t({})}(e),Yc}function Wc(e){const t=Qc.getModelFrom(e);Zc=t.discriminator("ArrowHelper",Xc(e))}var qc={getSchemaFrom:Xc,getModelFrom:function(e){return Zc||Wc(e),Zc},registerModelTo:function(e){return Zc||Wc(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Kc}=N;let Jc=void 0,es=void 0;function ts(e){return Jc||function(e){const t=e.Schema;Jc=new t({})}(e),Jc}function rs(e){const t=Kc.getModelFrom(e);es=t.discriminator("AxesHelper",ts(e))}var os={getSchemaFrom:ts,getModelFrom:function(e){return es||rs(e),es},registerModelTo:function(e){return es||rs(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:ns}=N;let is=void 0,as=void 0;function cs(e){return is||function(e){const t=e.Schema;is=new t({})}(e),is}function ss(e){const t=ns.getModelFrom(e);as=t.discriminator("Box3Helper",cs(e))}var ds={getSchemaFrom:cs,getModelFrom:function(e){return as||ss(e),as},registerModelTo:function(e){return as||ss(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:us}=N;let ms=void 0,ls=void 0;function fs(e){return ms||function(e){const t=e.Schema;ms=new t({})}(e),ms}function hs(e){const t=us.getModelFrom(e);ls=t.discriminator("BoxHelper",fs(e))}var gs={getSchemaFrom:fs,getModelFrom:function(e){return ls||hs(e),ls},registerModelTo:function(e){return ls||hs(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:ps}=N;let vs=void 0,Ss=void 0;function Ms(e){return vs||function(e){const t=e.Schema;vs=new t({})}(e),vs}function ys(e){const t=ps.getModelFrom(e);Ss=t.discriminator("CameraHelper",Ms(e))}var bs={getSchemaFrom:Ms,getModelFrom:function(e){return Ss||ys(e),Ss},registerModelTo:function(e){return Ss||ys(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Fs}=N;let ws=void 0,Ts=void 0;function _s(e){return ws||function(e){const t=e.Schema;ws=new t({})}(e),ws}function Ns(e){const t=Fs.getModelFrom(e);Ts=t.discriminator("DirectionalLightHelper",_s(e))}var Bs={getSchemaFrom:_s,getModelFrom:function(e){return Ts||Ns(e),Ts},registerModelTo:function(e){return Ts||Ns(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Os}=N;let Is=void 0,Ds=void 0;function xs(e){return Is||function(e){const t=e.Schema;Is=new t({})}(e),Is}function Cs(e){const t=Os.getModelFrom(e);Ds=t.discriminator("FaceNormalsHelper",xs(e))}var Es={getSchemaFrom:xs,getModelFrom:function(e){return Ds||Cs(e),Ds},registerModelTo:function(e){return Ds||Cs(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:As}=N;let js=void 0,Ls=void 0;function Ps(e){return js||function(e){const t=e.Schema;js=new t({})}(e),js}function Gs(e){const t=As.getModelFrom(e);Ls=t.discriminator("GridHelper",Ps(e))}var Vs={getSchemaFrom:Ps,getModelFrom:function(e){return Ls||Gs(e),Ls},registerModelTo:function(e){return Ls||Gs(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:$s}=N;let Us=void 0,ks=void 0;function zs(e){return Us||function(e){const t=e.Schema;Us=new t({})}(e),Us}function Rs(e){const t=$s.getModelFrom(e);ks=t.discriminator("HemisphereLightHelper",zs(e))}var Hs={getSchemaFrom:zs,getModelFrom:function(e){return ks||Rs(e),ks},registerModelTo:function(e){return ks||Rs(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Qs}=N;let Ys=void 0,Zs=void 0;function Xs(e){return Ys||function(e){const t=e.Schema;Ys=new t({})}(e),Ys}function Ws(e){const t=Qs.getModelFrom(e);Zs=t.discriminator("PlaneHelper",Xs(e))}var qs={getSchemaFrom:Xs,getModelFrom:function(e){return Zs||Ws(e),Zs},registerModelTo:function(e){return Zs||Ws(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Ks}=N;let Js=void 0,ed=void 0;function td(e){return Js||function(e){const t=e.Schema;Js=new t({})}(e),Js}function rd(e){const t=Ks.getModelFrom(e);ed=t.discriminator("PointLightHelper",td(e))}var od={getSchemaFrom:td,getModelFrom:function(e){return ed||rd(e),ed},registerModelTo:function(e){return ed||rd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:nd}=N;let id=void 0,ad=void 0;function cd(e){return id||function(e){const t=e.Schema;id=new t({})}(e),id}function sd(e){const t=nd.getModelFrom(e);ad=t.discriminator("PolarGridHelper",cd(e))}var dd={getSchemaFrom:cd,getModelFrom:function(e){return ad||sd(e),ad},registerModelTo:function(e){return ad||sd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:ud}=N;let md=void 0,ld=void 0;function fd(e){return md||function(e){const t=e.Schema;md=new t({})}(e),md}function hd(e){const t=ud.getModelFrom(e);ld=t.discriminator("RectAreaLightHelper",fd(e))}var gd={getSchemaFrom:fd,getModelFrom:function(e){return ld||hd(e),ld},registerModelTo:function(e){return ld||hd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:pd}=N;let vd=void 0,Sd=void 0;function Md(e){return vd||function(e){const t=e.Schema;vd=new t({})}(e),vd}function yd(e){const t=pd.getModelFrom(e);Sd=t.discriminator("SkeletonHelper",Md(e))}var bd={getSchemaFrom:Md,getModelFrom:function(e){return Sd||yd(e),Sd},registerModelTo:function(e){return Sd||yd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Fd}=N;let wd=void 0,Td=void 0;function _d(e){return wd||function(e){const t=e.Schema;wd=new t({})}(e),wd}function Nd(e){const t=Fd.getModelFrom(e);Td=t.discriminator("SpotLightHelper",_d(e))}var Bd={getSchemaFrom:_d,getModelFrom:function(e){return Td||Nd(e),Td},registerModelTo:function(e){return Td||Nd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Od}=N;let Id=void 0,Dd=void 0;function xd(e){return Id||function(e){const t=e.Schema;Id=new t({})}(e),Id}function Cd(e){const t=Od.getModelFrom(e);Dd=t.discriminator("VertexNormalsHelper",xd(e))}var Ed={getSchemaFrom:xd,getModelFrom:function(e){return Dd||Cd(e),Dd},registerModelTo:function(e){return Dd||Cd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Ad}=N;let jd=void 0,Ld=void 0;function Pd(e){return jd||function(e){const t=e.Schema;jd=new t({})}(e),jd}function Gd(e){const t=Ad.getModelFrom(e);Ld=t.discriminator("AmbientLight",Pd(e))}var Vd={getSchemaFrom:Pd,getModelFrom:function(e){return Ld||Gd(e),Ld},registerModelTo:function(e){return Ld||Gd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:$d}=N;let Ud=void 0,kd=void 0;function zd(e){return Ud||function(e){const t=e.Schema;Ud=new t({})}(e),Ud}function Rd(e){const t=$d.getModelFrom(e);kd=t.discriminator("DirectionalLight",zd(e))}var Hd={getSchemaFrom:zd,getModelFrom:function(e){return kd||Rd(e),kd},registerModelTo:function(e){return kd||Rd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Qd}=N;let Yd=void 0,Zd=void 0;function Xd(e){return Yd||function(e){const t=e.Schema;Yd=new t({})}(e),Yd}function Wd(e){const t=Qd.getModelFrom(e);Zd=t.discriminator("HemisphereLight",Xd(e))}var qd={getSchemaFrom:Xd,getModelFrom:function(e){return Zd||Wd(e),Zd},registerModelTo:function(e){return Zd||Wd(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Kd}=N;let Jd=void 0,eu=void 0;function tu(e){return Jd||function(e){const t=e.Schema;Jd=new t({})}(e),Jd}function ru(e){const t=Kd.getModelFrom(e);eu=t.discriminator("Light",tu(e))}var ou={getSchemaFrom:tu,getModelFrom:function(e){return eu||ru(e),eu},registerModelTo:function(e){return eu||ru(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:nu}=N;let iu=void 0,au=void 0;function cu(e){return iu||function(e){const t=e.Schema;iu=new t({})}(e),iu}function su(e){const t=nu.getModelFrom(e);au=t.discriminator("PointLight",cu(e))}var du={getSchemaFrom:cu,getModelFrom:function(e){return au||su(e),au},registerModelTo:function(e){return au||su(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:uu}=N;let mu=void 0,lu=void 0;function fu(e){return mu||function(e){const t=e.Schema;mu=new t({})}(e),mu}function hu(e){const t=uu.getModelFrom(e);lu=t.discriminator("RectAreaLight",fu(e))}var gu={getSchemaFrom:fu,getModelFrom:function(e){return lu||hu(e),lu},registerModelTo:function(e){return lu||hu(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:pu}=N;let vu=void 0,Su=void 0;function Mu(e){return vu||function(e){const t=e.Schema;vu=new t({})}(e),vu}function yu(e){const t=pu.getModelFrom(e);Su=t.discriminator("SpotLight",Mu(e))}var bu={getSchemaFrom:Mu,getModelFrom:function(e){return Su||yu(e),Su},registerModelTo:function(e){return Su||yu(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Material
 *
 * @description Todo...
 */let Fu=void 0,wu=void 0;function Tu(e){return Fu||function(e){const t=e.Schema,r=t.Types.Mixed;Fu=new t({uuid:String,name:String,type:String,fog:Boolean,lights:Boolean,blending:Number,side:Number,flatShading:Boolean,vertexColors:Number,opacity:Number,transparent:Boolean,blendSrc:Number,blendDst:Number,blendEquation:Number,blendSrcAlpha:String,blendDstAlpha:String,blendEquationAlpha:String,depthFunc:Number,depthTest:Boolean,depthWrite:Boolean,clippingPlanes:r,clipIntersection:Boolean,clipShadows:Boolean,colorWrite:Boolean,precision:Number,polygonOffset:Boolean,polygonOffsetFactor:Number,polygonOffsetUnits:Number,dithering:Boolean,alphaTest:Number,premultipliedAlpha:Boolean,overdraw:Number,visible:Boolean,userData:r,needsUpdate:Boolean},{collection:"materials",discriminatorKey:"type"})}(e),Fu}function _u(e){wu=e.model("Materials",Tu(e)),wu.discriminator("Material",new e.Schema({}))}var Nu={getSchemaFrom:Tu,getModelFrom:function(e){return wu||_u(e),wu},registerModelTo:function(e){return wu||_u(e),e}},Bu={Material:Nu};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
const{Material:Ou}=Bu;let Iu=void 0,Du=void 0;function xu(e){return Iu||function(e){const t=e.Schema,r=t.Types.Color;Iu=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String})}(e),Iu}function Cu(e){const t=Ou.getModelFrom(e);Du=t.discriminator("LineBasicMaterial",xu(e))}var Eu={getSchemaFrom:xu,getModelFrom:function(e){return Du||Cu(e),Du},registerModelTo:function(e){return Du||Cu(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Au}=Bu;let ju=void 0,Lu=void 0;function Pu(e){return ju||function(e){const t=e.Schema,r=t.Types.Color;ju=new t({color:r,light:Boolean,lineWidth:Number,linecap:String,linejoin:String,dashSize:Number,gapSize:Number,scale:Number})}(e),ju}function Gu(e){const t=Au.getModelFrom(e);Lu=t.discriminator("LineDashedMaterial",Pu(e))}var Vu={getSchemaFrom:Pu,getModelFrom:function(e){return Lu||Gu(e),Lu},registerModelTo:function(e){return Lu||Gu(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:$u}=Bu;let Uu=void 0,ku=void 0;function zu(e){return Uu||function(e){const t=e.Schema,r=t.Types,o=r.Mixed,n=r.Color;Uu=new t({color:n,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,specularMap:o,alphaMap:o,envMap:o,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,light:Boolean})}(e),Uu}function Ru(e){const t=$u.getModelFrom(e);ku=t.discriminator("MeshBasicMaterial",zu(e))}var Hu={getSchemaFrom:zu,getModelFrom:function(e){return ku||Ru(e),ku},registerModelTo:function(e){return ku||Ru(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Qu}=Bu;let Yu=void 0,Zu=void 0;function Xu(e){return Yu||function(e){const t=e.Schema,r=t.Types.Mixed;Yu=new t({depthPacking:Number,skinning:Boolean,morphTargets:Boolean,map:r,alphaMap:r,displacementMap:r,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean})}(e),Yu}function Wu(e){const t=Qu.getModelFrom(e);Zu=t.discriminator("MeshDepthMaterial",Xu(e))}var qu={getSchemaFrom:Xu,getModelFrom:function(e){return Zu||Wu(e),Zu},registerModelTo:function(e){return Zu||Wu(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Ku}=Bu;let Ju=void 0,em=void 0;function tm(e){return Ju||function(e){const t=e.Schema,r=t.Types,o=r.Color,n=r.Mixed;Ju=new t({color:o,map:n,lightMap:n,lightMapIntensity:Number,aoMap:n,aoMapIntensity:Number,emissive:o,emissiveIntensity:Number,emissiveMap:n,specularMap:n,alphaMap:n,envMap:n,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),Ju}function rm(e){const t=Ku.getModelFrom(e);em=t.discriminator("MeshLambertMaterial",tm(e))}var om={getSchemaFrom:tm,getModelFrom:function(e){return em||rm(e),em},registerModelTo:function(e){return em||rm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:nm}=Bu;let im=void 0,am=void 0;function cm(e){return im||function(e){const t=e.Schema,r=t.Types,o=r.Mixed,n=r.Vector2;im=new t({bumpMap:o,bumpScale:Number,normalMap:o,normalScale:n,displacementMap:o,displacementScale:Number,displacementBias:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),im}function sm(e){const t=nm.getModelFrom(e);am=t.discriminator("MeshNormalMaterial",cm(e))}var dm={getSchemaFrom:cm,getModelFrom:function(e){return am||sm(e),am},registerModelTo:function(e){return am||sm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:um}=Bu;let mm=void 0,lm=void 0;function fm(e){return mm||function(e){const t=e.Schema,r=t.Types,o=r.Mixed,n=r.Color,i=r.Vector2;mm=new t({color:n,specular:n,shininess:Number,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,emissive:n,emissiveIntensity:Number,emissiveMap:o,bumpMap:o,bumpScale:Number,normalMap:o,normalScale:i,displacementMap:o,displacementScale:Number,displacementBias:Number,specularMap:o,alphaMap:o,envMap:o,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),mm}function hm(e){const t=um.getModelFrom(e);lm=t.discriminator("MeshPhongMaterial",fm(e))}var gm={getSchemaFrom:fm,getModelFrom:function(e){return lm||hm(e),lm},registerModelTo:function(e){return lm||hm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:pm}=Bu;let vm=void 0,Sm=void 0;function Mm(e){return vm||function(e){const t=e.Schema;vm=new t({reflectivity:Number,clearCoat:Number,clearCoatRoughness:Number})}(e),vm}function ym(e){const t=pm.getModelFrom(e);Sm=t.discriminator("MeshPhysicalMaterial",Mm(e))}var bm={getSchemaFrom:Mm,getModelFrom:function(e){return Sm||ym(e),Sm},registerModelTo:function(e){return Sm||ym(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Fm}=Bu;let wm=void 0,Tm=void 0;function _m(e){return wm||function(e){const t=e.Schema,r=t.Types,o=r.Mixed,n=r.Color,i=r.Vector2;wm=new t({color:n,roughness:Number,metalness:Number,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,emissive:n,emissiveIntensity:Number,emissiveMap:o,bumpMap:o,bumpScale:Number,normalMap:o,normalScale:i,displacementMap:o,displacementScale:Number,displacementBias:Number,roughnessMap:o,metalnessMap:o,alphaMap:o,envMap:o,envMapIntensity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean})}(e),wm}function Nm(e){const t=Fm.getModelFrom(e);Tm=t.discriminator("MeshStandardMaterial",_m(e))}var Bm={getSchemaFrom:_m,getModelFrom:function(e){return Tm||Nm(e),Tm},registerModelTo:function(e){return Tm||Nm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Om}=Bu;let Im=void 0,Dm=void 0;function xm(e){return Im||function(e){const t=e.Schema,r=t.Types,o=r.Mixed,n=r.Color,i=r.Vector2;Im=new t({color:n,specular:n,shininess:Number,map:o,lightMap:o,lightMapIntensity:Number,aoMap:o,aoMapIntensity:Number,emissive:n,emissiveIntensity:Number,emissiveMap:o,bumpMap:o,bumpScale:Number,normalMap:o,normalScale:i,displacementMap:o,displacementScale:Number,displacementBias:Number,specularMap:o,alphaMap:o,envMap:o,combine:Number,reflectivity:Number,refractionRatio:Number,wireframe:Boolean,wireframeLinewidth:Number,wireframeLinecap:String,wireframeLinejoin:String,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,gradientMap:o})}(e),Im}function Cm(e){const t=Om.getModelFrom(e);Dm=t.discriminator("MeshToonMaterial",xm(e))}var Em={getSchemaFrom:xm,getModelFrom:function(e){return Dm||Cm(e),Dm},registerModelTo:function(e){return Dm||Cm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Am}=Bu;let jm=void 0,Lm=void 0;function Pm(e){return jm||function(e){const t=e.Schema,r=t.Types,o=r.Color,n=r.Mixed;jm=new t({color:o,map:n,size:Number,sizeAttenuation:Boolean,lights:Boolean})}(e),jm}function Gm(e){const t=Am.getModelFrom(e);Lm=t.discriminator("PointsMaterial",Pm(e))}var Vm={getSchemaFrom:Pm,getModelFrom:function(e){return Lm||Gm(e),Lm},registerModelTo:function(e){return Lm||Gm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:$m}=Bu;let Um=void 0,km=void 0;function zm(e){return Um||function(e){const t=e.Schema,r=t.Types.Mixed;Um=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),Um}function Rm(e){const t=$m.getModelFrom(e);km=t.discriminator("RawShaderMaterial",zm(e))}var Hm={getSchemaFrom:zm,getModelFrom:function(e){return km||Rm(e),km},registerModelTo:function(e){return km||Rm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Qm}=Bu;let Ym=void 0,Zm=void 0;function Xm(e){return Ym||function(e){const t=e.Schema,r=t.Types.Mixed;Ym=new t({defines:r,uniforms:r,vertexShader:String,fragmentShader:String,linewidth:Number,wireframe:Boolean,wireframeLinewidth:Number,fog:Boolean,light:Boolean,clipping:Boolean,skinning:Boolean,morphTargets:Boolean,morphNormals:Boolean,derivatives:Boolean,fragDepth:Boolean,drawBuffers:Boolean,shaderTextureLOD:Boolean})}(e),Ym}function Wm(e){const t=Qm.getModelFrom(e);Zm=t.discriminator("ShaderMaterial",Xm(e))}var qm={getSchemaFrom:Xm,getModelFrom:function(e){return Zm||Wm(e),Zm},registerModelTo:function(e){return Zm||Wm(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:Km}=Bu;let Jm=void 0,el=void 0;function tl(e){return Jm||function(e){const t=e.Schema,r=t.Types.Color;Jm=new t({color:r,opacity:Number,lights:Boolean,transparent:Boolean})}(e),Jm}function rl(e){const t=Km.getModelFrom(e);el=t.discriminator("ShadowMaterial",tl(e))}var ol={getSchemaFrom:tl,getModelFrom:function(e){return el||rl(e),el},registerModelTo:function(e){return el||rl(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Material:nl}=Bu;let il=void 0,al=void 0;function cl(e){return il||function(e){const t=e.Schema,r=t.Types,o=r.Color,n=r.Mixed;il=new t({color:o,map:n,rotation:Number,fog:Boolean,lights:Boolean})}(e),il}function sl(e){const t=nl.getModelFrom(e);al=t.discriminator("SpriteMaterial",cl(e))}var dl={getSchemaFrom:cl,getModelFrom:function(e){return al||sl(e),al},registerModelTo:function(e){return al||sl(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Core/Box2
 *
 * @description The database counterpart of Three.Box2
 */let ul=void 0;var ml={getSchemaFrom:function(e){return ul||function(e){const t=e.Schema,r=t.Types.Vector2;ul=new t({min:r,max:r},{_id:!1,id:!1})}(e),ul},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */let ll=void 0;var fl={getSchemaFrom:function(e){return ll||function(e){const t=e.Schema,r=t.Types.Vector3;ll=new t({min:r,max:r},{_id:!1,id:!1})}(e),ll},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Face3
 *
 * @description Todo...
 */let hl=void 0;var gl={getSchemaFrom:function(e){return hl||function(e){const t=e.Schema,r=t.Types.Vector3;hl=new t({start:r,end:r},{_id:!1,id:!1})}(e),hl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Core/Vector3
 *
 * @description The database counterpart of Three.Vector3
 */let pl=void 0;var vl={getSchemaFrom:function(e){return pl||function(e){const t=e.Schema,r=t.Types.Vector3;pl=new t({normal:r,constant:Number},{_id:!1,id:!1})}(e),pl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Core/Vector3
 *
 * @description The database counterpart of Three.Vector3
 */let Sl=void 0;var Ml={getSchemaFrom:function(e){return Sl||function(e){const t=e.Schema,r=t.Types.Vector3;Sl=new t({origin:r,direction:r},{_id:!1,id:!1})}(e),Sl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Core/Vector3
 *
 * @description The database counterpart of Three.Vector3
 */let yl=void 0;var bl={getSchemaFrom:function(e){return yl||function(e){const t=e.Schema,r=t.Types.Vector3;yl=new t({center:r,radius:Number},{_id:!1,id:!1})}(e),yl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Core/Vector3
 *
 * @description The database counterpart of Three.Vector3
 */let Fl=void 0;var wl={getSchemaFrom:function(e){return Fl||function(e){const t=e.Schema;Fl=new t({radius:Number,phi:Number,theta:Number},{_id:!1,id:!1})}(e),Fl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Core/Vector3
 *
 * @description The database counterpart of Three.Vector3
 */let Tl=void 0;var _l={getSchemaFrom:function(e){return Tl||function(e){const t=e.Schema,r=t.Types.Vector3;Tl=new t({a:r,b:r,c:r},{_id:!1,id:!1})}(e),Tl},getModelFrom:()=>null,registerModelTo:e=>e};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Nl}=N;let Bl=void 0,Ol=void 0;function Il(e){return Bl||function(e){const t=e.Schema;Bl=new t({})}(e),Bl}function Dl(e){const t=Nl.getModelFrom(e);Ol=t.discriminator("Bone",Il(e))}var xl={getSchemaFrom:Il,getModelFrom:function(e){return Ol||Dl(e),Ol},registerModelTo:function(e){return Ol||Dl(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */let Cl=void 0,El=void 0;function Al(e){return Cl||function(e){const t=e.Schema;Cl=new t({})}(e),Cl}function jl(e){const t=_.getModelFrom(e);El=t.discriminator("Group",Al(e))}const Ll={getSchemaFrom:Al,getModelFrom:function(e){return El||jl(e),El},registerModelTo:function(e){return El||jl(e),e}},{Object3D:Pl}=N;
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */let Gl=void 0,Vl=void 0;function $l(e){return Gl||function(e){const t=e.Schema;Gl=new t({})}(e),Gl}function Ul(e){const t=Pl.getModelFrom(e);Vl=t.discriminator("ImmediateRenderObject",$l(e))}var kl={getSchemaFrom:$l,getModelFrom:function(e){return Vl||Ul(e),Vl},registerModelTo:function(e){return Vl||Ul(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:zl}=N;let Rl=void 0,Hl=void 0;function Ql(e){return Rl||function(e){const t=e.Schema,r=t.Types,o=r.ObjectId,n=r.Color,i=r.Vector3;Rl=new t({lensFlares:[{texture:o,size:Number,distance:Number,x:Number,y:Number,z:Number,scale:Number,rotation:Number,opacity:Number,color:n,blending:Number}],positionScreen:i})}(e),Rl}function Yl(e){const t=zl.getModelFrom(e);Hl=t.discriminator("LensFlare",Ql(e))}var Zl={getSchemaFrom:Ql,getModelFrom:function(e){return Hl||Yl(e),Hl},registerModelTo:function(e){return Hl||Yl(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Xl}=N;let Wl=void 0,ql=void 0;function Kl(e){return Wl||function(e){const t=e.Schema,r=t.Types.ObjectId;Wl=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),Wl}function Jl(e){const t=Xl.getModelFrom(e);ql=t.discriminator("Line",Kl(e))}var ef={getSchemaFrom:Kl,getModelFrom:function(e){return ql||Jl(e),ql},registerModelTo:function(e){return ql||Jl(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:tf}=N;let rf=void 0,of=void 0;function nf(e){return rf||function(e){const t=e.Schema,r=t.Types.ObjectId;rf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),rf}function af(e){const t=tf.getModelFrom(e);of=t.discriminator("LineLoop",nf(e))}var cf={getSchemaFrom:nf,getModelFrom:function(e){return of||af(e),of},registerModelTo:function(e){return of||af(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:sf}=N;let df=void 0,uf=void 0;function mf(e){return df||function(e){const t=e.Schema,r=t.Types.ObjectId;df=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"LineBasicMaterial"}],drawMode:Number})}(e),df}function lf(e){const t=sf.getModelFrom(e);uf=t.discriminator("LineSegments",mf(e))}var ff={getSchemaFrom:mf,getModelFrom:function(e){return uf||lf(e),uf},registerModelTo:function(e){return uf||lf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:hf}=N;let gf=void 0,pf=void 0;function vf(e){return gf||function(e){const t=e.Schema,r=t.Types.Mixed;gf=new t({levels:[r]})}(e),gf}function Sf(e){const t=hf.getModelFrom(e);pf=t.discriminator("LOD",vf(e))}var Mf={getSchemaFrom:vf,getModelFrom:function(e){return pf||Sf(e),pf},registerModelTo:function(e){return pf||Sf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:yf}=N;let bf=void 0,Ff=void 0;function wf(e){return bf||function(e){const t=e.Schema,r=t.Types.ObjectId;bf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number})}(e),bf}function Tf(e){const t=yf.getModelFrom(e);Ff=t.discriminator("Mesh",wf(e))}var _f={getSchemaFrom:wf,getModelFrom:function(e){return Ff||Tf(e),Ff},registerModelTo:function(e){return Ff||Tf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Nf}=N;let Bf=void 0,Of=void 0;function If(e){return Bf||function(e){const t=e.Schema,r=t.Types.ObjectId;Bf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"PointsMaterial"}],drawMode:Number})}(e),Bf}function Df(e){const t=Nf.getModelFrom(e);Of=t.discriminator("Points",If(e))}var xf={getSchemaFrom:If,getModelFrom:function(e){return Of||Df(e),Of},registerModelTo:function(e){return Of||Df(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Cf}=N;let Ef=void 0,Af=void 0;function jf(e){return Ef||function(e){const t=e.Schema,r=t.Types.ObjectId;Ef=new t({bones:[r],boneMatrices:[Number]})}(e),Ef}function Lf(e){const t=Cf.getModelFrom(e);Af=t.discriminator("Skeleton",jf(e))}var Pf={getSchemaFrom:jf,getModelFrom:function(e){return Af||Lf(e),Af},registerModelTo:function(e){return Af||Lf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Gf}=N;let Vf=void 0,$f=void 0;function Uf(e){return Vf||function(e){const t=e.Schema,r=t.Types.ObjectId;Vf=new t({geometry:{type:r,ref:"Geometry"},material:[{type:r,ref:"Material"}],drawMode:Number,bindMode:String,bindMatrix:[Number],bindMatrixInverse:[Number]})}(e),Vf}function kf(e){const t=Gf.getModelFrom(e);$f=t.discriminator("SkinnedMesh",Uf(e))}var zf={getSchemaFrom:Uf,getModelFrom:function(e){return $f||kf(e),$f},registerModelTo:function(e){return $f||kf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Object3D:Rf}=N;let Hf=void 0,Qf=void 0;function Yf(e){return Hf||function(e){const t=e.Schema,r=t.Types.ObjectId;Hf=new t({material:[{type:r,ref:"SpriteMaterial"}]})}(e),Hf}function Zf(e){const t=Rf.getModelFrom(e);Qf=t.discriminator("Sprite",Yf(e))}var Xf={getSchemaFrom:Yf,getModelFrom:function(e){return Qf||Zf(e),Qf},registerModelTo:function(e){return Qf||Zf(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */let Wf=void 0;var qf={getSchemaFrom:function(e){return Wf||function(e){const t=e.Schema;Wf=new t({coordinates:{x:Number,y:Number,z:Number},orientation:{x:Number,y:Number,z:Number},thumbnail:Buffer,path:String},{_id:!1,id:!1})}(e),Wf},getModelFrom:()=>null,registerModelTo:e=>e},Kf={Fog:qf};const{Object3D:Jf}=N,{Fog:eh}=Kf;let th=void 0,rh=void 0;function oh(e){return th||function(e){const t=eh.getSchemaFrom(e),r=e.Schema,o=r.Types.Color;th=new r({background:o,fog:t,overrideMaterial:String,autoUpdate:Boolean})}(e),th}function nh(e){const t=Jf.getModelFrom(e);rh=t.discriminator("Scene",oh(e))}var ih={getSchemaFrom:oh,getModelFrom:function(e){return rh||nh(e),rh},registerModelTo:function(e){return rh||nh(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @module Schemas/Geometry
 *
 * @description Todo...
 */let ah=void 0,ch=void 0;function sh(e){return ah||function(e){const t=e.Schema,r=t.Types,o=r.ObjectId,n=r.Vector2,i=r.Matrix3;ah=new t({uuid:String,name:String,image:o,mipmaps:[],mapping:Number,wrapS:Number,wrapT:Number,magFilter:Number,minFilter:Number,anisotropy:Number,format:Number,type:Number,offset:n,repeat:n,center:n,rotation:Number,matrixAutoUpdate:Boolean,matrix:i,generateMipmaps:Boolean,premultiplyAlpha:Boolean,flipY:Boolean,unpackAlignment:Number,encoding:Number,version:Number},{collection:"textures",discriminatorKey:"type"})}(e),ah}function dh(e){ch=e.model("Textures",sh(e)),ch.discriminator("Texture",new e.Schema({}))}var uh={getSchemaFrom:sh,getModelFrom:function(e){return ch||dh(e),ch},registerModelTo:function(e){return ch||dh(e),e}},mh={Texture:uh};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
const{Texture:lh}=mh;let fh=void 0,hh=void 0;function gh(e){return fh||function(e){const t=e.Schema;fh=new t({needsUpdate:Boolean})}(e),fh}function ph(e){const t=lh.getModelFrom(e);hh=t.discriminator("CanvasTexture",gh(e))}var vh={getSchemaFrom:gh,getModelFrom:function(e){return hh||ph(e),hh},registerModelTo:function(e){return hh||ph(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Texture:Sh}=mh;let Mh=void 0,yh=void 0;function bh(e){return Mh||function(e){const t=e.Schema;Mh=new t({})}(e),Mh}function Fh(e){const t=Sh.getModelFrom(e);yh=t.discriminator("CompressedTexture",bh(e))}var wh={getSchemaFrom:bh,getModelFrom:function(e){return yh||Fh(e),yh},registerModelTo:function(e){return yh||Fh(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Texture:Th}=mh;let _h=void 0,Nh=void 0;function Bh(e){return _h||function(e){const t=e.Schema;_h=new t({})}(e),_h}function Oh(e){const t=Th.getModelFrom(e);Nh=t.discriminator("CubeTexture",Bh(e))}var Ih={getSchemaFrom:Bh,getModelFrom:function(e){return Nh||Oh(e),Nh},registerModelTo:function(e){return Nh||Oh(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Texture:Dh}=mh;let xh=void 0,Ch=void 0;function Eh(e){return xh||function(e){const t=e.Schema;xh=new t({})}(e),xh}function Ah(e){const t=Dh.getModelFrom(e);Ch=t.discriminator("DataTexture",Eh(e))}var jh={getSchemaFrom:Eh,getModelFrom:function(e){return Ch||Ah(e),Ch},registerModelTo:function(e){return Ch||Ah(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Texture:Lh}=mh;let Ph=void 0,Gh=void 0;function Vh(e){return Ph||function(e){const t=e.Schema;Ph=new t({})}(e),Ph}function $h(e){const t=Lh.getModelFrom(e);Gh=t.discriminator("DepthTexture",Vh(e))}var Uh={getSchemaFrom:Vh,getModelFrom:function(e){return Gh||$h(e),Gh},registerModelTo:function(e){return Gh||$h(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */const{Texture:kh}=mh;let zh=void 0,Rh=void 0;function Hh(e){return zh||function(e){const t=e.Schema;zh=new t({})}(e),zh}function Qh(e){const t=kh.getModelFrom(e);Rh=t.discriminator("VideoTexture",Hh(e))}var Yh={getSchemaFrom:Hh,getModelFrom:function(e){return Rh||Qh(e),Rh},registerModelTo:function(e){return Rh||Qh(e),e}};
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [MIT]{@link https://opensource.org/licenses/MIT}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
var Zh=(new r.TMongoDBPlugin).addType((function(e){class t extends e.SchemaType{constructor(e,t){super(e,t,"Color")}cast(t){if(i.isNotDefined(t))throw new e.SchemaType.CastError(`Color: ${t} is null or undefined`);if(i.isNotObject(t)&&!t.isColor)throw new e.SchemaType.CastError(`Color: ${t} is not a object or Color instance`);if(!("r"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain r property`);if(i.isNotNumber(t.r))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("g"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain g property`);if(i.isNotNumber(t.g))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);if(!("b"in t))throw new e.SchemaType.CastError(`Color: ${t} does not contain b property`);if(i.isNotNumber(t.b))throw new e.SchemaType.CastError(`Color: ${t} expected to be a number`);return{r:t.r,g:t.g,b:t.b}}}return t.COLOR_BSON_TYPE=c.BSON_DATA_OBJECT,e.Schema.Types.Color=t,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Euler")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(i.isNotDefined(e))throw new Error(`Euler: ${e} is null or undefined`);if(i.isNotObject(e)&&!e.isEuler)throw new Error(`Euler: ${e} is not a object or Euler instance`);if(!("x"in e))throw new Error(`Euler: ${e} does not contain x property`);if(i.isNotNumber(e.x))throw new Error(`Euler: ${e} expected x to be a number`);if(!("y"in e))throw new Error(`Euler: ${e} does not contain y property`);if(i.isNotNumber(e.y))throw new Error(`Euler: ${e} expected y to be a number`);if(!("z"in e))throw new Error(`Euler: ${e} does not contain z property`);if(i.isNotNumber(e.z))throw new Error(`Euler: ${e} expected z to be a number`);if(!("order"in e))throw new Error(`Euler: ${e} does not contain order property`);if(i.isNotString(e.order))throw new Error(`Euler: ${e} expected order to be a string`);if(!["XYZ","YZX","ZXY","XZY","YXZ","ZYX"].includes(e.order.toUpperCase()))throw new Error(`Euler: ${e} expected order to be a string in ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX']`);return{x:e.x,y:e.y,z:e.z,order:e.order.toUpperCase()}}}),r.Euler=o,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Matrix3")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(i.isNotDefined(e))throw new Error(`Matrix3: ${e} is null or undefined`);if(i.isNotArray(e)&&!e.isMatrix3)throw new Error(`Matrix3: ${e} is not a object or Matrix3 instance`);let t=void 0;t=e.isMatrix3?e.toArray():e;const r=t.length;if(9!==r)throw new Error(`Matrix3: ${e} does not contain the right number of values. Expect 9 values and found ${r}`);for(let o=0,n=void 0;o<r;o++){if(n=t[o],i.isNotNumber(n))throw new Error(`Matrix3: ${e} does not seem to contain right values. Expect values in range 0 and 1.`);if(i.isNaN(n))throw new Error(`Matrix3: ${e} does not seem to contain right values. Expect values in range 0 and 1.`)}return t}}),r.Matrix3=o,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Matrix4")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(i.isNotDefined(e))throw new Error(`Matrix4: ${e} is null or undefined`);if(i.isNotArray(e)&&!e.isMatrix4)throw new Error(`Matrix4: ${e} is not a object or Matrix4 instance`);let t=void 0;t=e.isMatrix4?e.toArray():e;const r=t.length;if(16!==r)throw new Error(`Matrix4: ${e} does not contain the right number of values. Expect 9 values and found ${r}`);for(let o=0,n=void 0;o<r;o++){if(n=t[o],i.isNotNumber(n))throw new Error(`Matrix4: ${e} does not seem to contain right values. Expect values in range 0 and 1.`);if(i.isNaN(n))throw new Error(`Matrix4: ${e} does not seem to contain right values. Expect values in range 0 and 1.`)}return t}}),r.Matrix4=o,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Quaternion")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(i.isNotDefined(e))throw new Error(`Quaternion: ${e} is null or undefined`);if(!("x"in e))throw new Error(`Quaternion: ${e} does not contain x property`);if(i.isNotNumber(e.x))throw new Error(`Quaternion: ${e} expected to be a number`);if(!("y"in e))throw new Error(`Quaternion: ${e} does not contain y property`);if(i.isNotNumber(e.y))throw new Error(`Quaternion: ${e} expected to be a number`);if(!("z"in e))throw new Error(`Quaternion: ${e} does not contain z property`);if(i.isNotNumber(e.z))throw new Error(`Quaternion: ${e} expected to be a number`);if(!("w"in e))throw new Error(`Quaternion: ${e} does not contain w property`);if(i.isNotNumber(e.w))throw new Error(`Quaternion: ${e} expected to be a number`);return{x:e.x,y:e.y,z:e.z,w:e.w}}}),r.Quaternion=o,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Vector2")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(i.isNotDefined(e))throw new Error(`Vector2: ${e} is null or undefined`);if(i.isNotObject(e)&&!e.isVector2)throw new Error(`Vector2: ${e} is not a object or Vector2 instance`);if(!("x"in e))throw new Error(`Vector2: ${e} does not contain x property`);if(i.isNotNumber(e.x))throw new Error(`Vector2: ${e} expected to be a number`);if(!("y"in e))throw new Error(`Vector2: ${e} does not contain y property`);if(i.isNotNumber(e.y))throw new Error(`Vector2: ${e} expected to be a number`);return{x:e.x,y:e.y}}}),r.Vector2=o,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Vector3")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(i.isNotDefined(e))throw new Error(`Vector3: ${e} is null or undefined`);if(i.isNotObject(e)&&!e.isVector3)throw new Error(`Vector3: ${e} is not a object or Vector3 instance`);if(!("x"in e))throw new Error(`Vector3: ${e} does not contain x property`);if(i.isNotNumber(e.x))throw new Error(`Vector3: ${e} expected to be a number`);if(!("y"in e))throw new Error(`Vector3: ${e} does not contain y property`);if(i.isNotNumber(e.y))throw new Error(`Vector3: ${e} expected to be a number`);if(!("z"in e))throw new Error(`Vector3: ${e} does not contain z property`);if(i.isNotNumber(e.z))throw new Error(`Vector3: ${e} expected to be a number`);return{x:e.x,y:e.y,z:e.z}}}),r.Vector3=o,e}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */)).addType((function(e){const t=e.SchemaType,r=e.Schema.Types;function o(e,r){t.call(this,e,r,"Vector4")}return o.prototype=Object.assign(Object.create(t.prototype),{cast(e){if(i.isNotDefined(e))throw new Error(`Vector4: ${e} is null or undefined`);if(i.isNotObject(e)&&!e.isVector4)throw new Error(`Vector4: ${e} is not a object or Vector4 instance`);if(!("x"in e))throw new Error(`Vector4: ${e} does not contain x property`);if(i.isNotNumber(e.x))throw new Error(`Vector4: ${e} expected to be a number`);if(!("y"in e))throw new Error(`Vector4: ${e} does not contain y property`);if(i.isNotNumber(e.y))throw new Error(`Vector4: ${e} expected to be a number`);if(!("z"in e))throw new Error(`Vector4: ${e} does not contain z property`);if(i.isNotNumber(e.z))throw new Error(`Vector4: ${e} expected to be a number`);if(!("w"in e))throw new Error(`Vector4: ${e} does not contain w property`);if(i.isNotNumber(e.w))throw new Error(`Vector4: ${e} expected to be a number`);return{x:e.x,y:e.y,z:e.z,w:e.w}}}),r.Vector4=o,e})).addSchema(C).addSchema(G).addSchema(R).addSchema(W).addSchema(re).addSchema(se).addSchema(he).addSchema(ye).addSchema(Ee).addSchema($e).addSchema(Je).addSchema(tt).addSchema(at).addSchema(_).addSchema(ft).addSchema(Mt).addSchema(_t).addSchema(xt).addSchema(Pt).addSchema(zt).addSchema(Qe).addSchema(Xt).addSchema(tr).addSchema(cr).addSchema(fr).addSchema(Mr).addSchema(_r).addSchema(xr).addSchema(Pr).addSchema(zr).addSchema(Xr).addSchema(to).addSchema(co).addSchema(ho).addSchema(yo).addSchema(No).addSchema(Co).addSchema(Go).addSchema(Ro).addSchema(Wo).addSchema(rn).addSchema(dn).addSchema(gn).addSchema(bn).addSchema(Bn).addSchema(En).addSchema(Vn).addSchema(Hn).addSchema(qn).addSchema(oi).addSchema(di).addSchema(gi).addSchema(bi).addSchema(Bi).addSchema(Ei).addSchema(Vi).addSchema(Hi).addSchema(qi).addSchema(oa).addSchema(da).addSchema(ga).addSchema(ba).addSchema(Ba).addSchema(Ea).addSchema(Va).addSchema(Ha).addSchema(qa).addSchema(oc).addSchema(dc).addSchema(gc).addSchema(bc).addSchema(Bc).addSchema(Ec).addSchema(Vc).addSchema(Hc).addSchema(qc).addSchema(os).addSchema(ds).addSchema(gs).addSchema(bs).addSchema(Bs).addSchema(Es).addSchema(Vs).addSchema(Hs).addSchema(qs).addSchema(od).addSchema(dd).addSchema(gd).addSchema(bd).addSchema(Bd).addSchema(Ed).addSchema(Vd).addSchema(Hd).addSchema(qd).addSchema(ou).addSchema(du).addSchema(gu).addSchema(bu).addSchema(gm).addSchema(Eu).addSchema(Vu).addSchema(Nu).addSchema(Hu).addSchema(qu).addSchema(om).addSchema(dm).addSchema(bm).addSchema(Bm).addSchema(Em).addSchema(Vm).addSchema(Hm).addSchema(qm).addSchema(ol).addSchema(dl).addSchema(ml).addSchema(fl).addSchema(gl).addSchema(vl).addSchema(Ml).addSchema(bl).addSchema(wl).addSchema(_l).addSchema(xl).addSchema(Ll).addSchema(kl).addSchema(Zl).addSchema(ef).addSchema(cf).addSchema(ff).addSchema(Mf).addSchema(_f).addSchema(xf).addSchema(Pf).addSchema(zf).addSchema(Xf).addSchema(qf).addSchema(ih).addSchema(vh).addSchema(wh).addSchema(Ih).addSchema(jh).addSchema(Uh).addSchema(uh).addSchema(Yh).addController(r.TMongooseController).addDescriptor({route:"/objects",controller:{name:"TMongooseController",options:{schemaName:"Objects3D"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/curves",controller:{name:"TMongooseController",options:{schemaName:"Curves"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/geometries",controller:{name:"TMongooseController",options:{schemaName:"Geometries"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/materials",controller:{name:"TMongooseController",options:{schemaName:"Materials"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addDescriptor({route:"/textures",controller:{name:"TMongooseController",options:{schemaName:"Textures"},can:{create:{on:"put",over:"/(:id)?"},read:{on:"post",over:"/(:id)?"},update:{on:"patch",over:"/(:id)?"},delete:{on:"delete",over:"/(:id)?"}}}}).addController(t.TAbstractConverterManager).addDescriptor({route:"/uploads",controller:{name:"TAbstractConverterManager",options:{useNext:!0,converters:{JsonToThree:new h,ShpToThree:new b,DbfToThree:new l,FbxToThree:new f,ColladaToThree:new s,StlToThree:new F,TdsToThree:new w,MtlToThree:new g,ObjToThree:new p},rules:[{on:".json",use:"JsonToThree"},{on:".dae",use:"ColladaToThree"},{on:".fbx",use:"FbxToThree"},{on:".stl",use:"StlToThree"},{on:".3ds",use:"TdsToThree"},{on:".shp",use:"ShpToThree"},{on:".dbf",use:"DbfToThree"},{on:[".shp",".dbf"],use:["ShpToThree","DbfToThree"]},{on:".mtl",use:"MtlToThree"},{on:".obj",use:"ObjToThree"},{on:[".mtl",".obj"],use:["MtlToThree","ObjToThree"]}],inserter:T},can:{processFiles:{on:"post",over:"/"}}}});module.exports=Zh;
