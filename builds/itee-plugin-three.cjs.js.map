{"version":3,"file":"itee-plugin-three.cjs.js","sources":["../sources/backend/loaders/DBFLoader.js","../sources/backend/converters/DbfToThree.js","../sources/backend/converters/JsonToThree.js","../sources/backend/converters/MtlToThree.js","../sources/backend/converters/Obj2ToThree.js","../sources/backend/loaders/SHPLoader.js","../sources/backend/converters/ShpToThree.js","../sources/backend/converters/ThreeToMongoDB.js","../sources/backend/types/Color.js","../sources/backend/MongoDBThreePlugin.js"],"sourcesContent":["/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * From:\r\n * https://www.clicketyclick.dk/databases/xbase/format/db2_dbf.html#DBII_DBF_STRUCT\r\n * http://web.archive.org/web/20150323061445/http://ulisse.elettra.trieste.it/services/doc/dbase/DBFstruct.htm\r\n * http://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm\r\n *\r\n * @class Todo...\r\n * @classdesc Todo...\r\n * @example Todo...\r\n *\r\n */\r\n\r\nimport {\r\n    DefaultLogger,\r\n    Endianness,\r\n    TBinaryReader\r\n} from 'itee-client'\r\nimport {\r\n    DefaultLoadingManager,\r\n    FileLoader\r\n} from 'three-full'\r\n\r\n/**\r\n *\r\n * @type {Object}\r\n */\r\nconst DBFVersion = Object.freeze( {\r\n    FoxPro:               0x30,\r\n    FoxPro_Autoincrement: 0x31,\r\n\r\n    dBASE_II:   0x02,\r\n    FoxPro_Var: 0x32,\r\n\r\n    dBASE_III_plus:          0x03,\r\n    dBASE_III_plus_memo:     0x83,\r\n    dBASE_IV_SQL_table:      0x43,\r\n    dBASE_IV_SQL_system:     0x63,\r\n    dBASE_IV_memo:           0x8B,\r\n    dBASE_IV_memo_SQL_table: 0xCB,\r\n    FoxBase:                 0xFB,\r\n\r\n    dBase_v_7: 4,\r\n\r\n    FoxPro_2_x:    0xF5,\r\n    HiPerSix_memo: 0xE5\r\n} )\r\n\r\n/**\r\n *\r\n * @type {Object}\r\n */\r\nconst DataType = Object.freeze( {\r\n    Binary:        'B',\r\n    Character:     'C',\r\n    Date:          'D',\r\n    Numeric:       'N',\r\n    Logical:       'L',\r\n    Memo:          'M',\r\n    Timestamp:     '@',\r\n    Long:          'I',\r\n    Autoincrement: '+',\r\n    Float:         'F',\r\n    Double:        'O',\r\n    OLE:           'G'\r\n} )\r\n\r\n/**\r\n *\r\n * @param manager\r\n * @param logger\r\n * @constructor\r\n */\r\nfunction DBFLoader ( manager = DefaultLoadingManager, logger = DefaultLogger ) {\r\n\r\n    this.manager = manager\r\n    this.logger  = logger\r\n    this.reader  = new TBinaryReader()\r\n\r\n}\r\n\r\nObject.assign( DBFLoader, {\r\n\r\n    /**\r\n     *\r\n     */\r\n    Terminator: 0x0D,\r\n\r\n    /**\r\n     *\r\n     */\r\n    DeletedRecord: 0x1A,\r\n\r\n    /**\r\n     *\r\n     */\r\n    YearOffset: 1900\r\n\r\n} )\r\n\r\nObject.assign( DBFLoader.prototype, {\r\n\r\n    /**\r\n     *\r\n     * @param url\r\n     * @param onLoad\r\n     * @param onProgress\r\n     * @param onError\r\n     */\r\n    load ( url, onLoad, onProgress, onError ) {\r\n\r\n        const scope = this\r\n\r\n        const loader = new FileLoader( scope.manager )\r\n        loader.setResponseType( 'arraybuffer' )\r\n        loader.load( url, arrayBuffer => {\r\n\r\n            onLoad( scope.parse( arrayBuffer ) )\r\n\r\n        }, onProgress, onError )\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param arrayBuffer\r\n     * @return {*}\r\n     */\r\n    parse ( arrayBuffer ) {\r\n\r\n        this.reader\r\n            .setEndianess( Endianness.Big )\r\n            .setBuffer( arrayBuffer )\r\n\r\n        const version = this.reader.getInt8()\r\n        if ( !this._isValidVersion( version ) ) {\r\n            this.logger.error( `DBFLoader: Invalid version number: ${version}` )\r\n            return null\r\n        }\r\n\r\n        const header = this._parseHeader( version )\r\n        const datas  = this._parseDatas( version, header )\r\n\r\n        return {\r\n            header,\r\n            datas\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param version\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    _isValidVersion ( version ) {\r\n\r\n        const availablesVersionValues = Object.values( DBFVersion )\r\n        return ( availablesVersionValues.includes( version ) )\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param version\r\n     * @return {{}}\r\n     * @private\r\n     */\r\n    _parseHeader ( version ) {\r\n\r\n        let header = {}\r\n\r\n        switch ( version ) {\r\n\r\n            case DBFVersion.FoxPro:\r\n            case DBFVersion.FoxPro_Autoincrement:\r\n            case DBFVersion.FoxPro_Var:\r\n            case DBFVersion.dBASE_II:\r\n                header = this._parseHeaderV2()\r\n                break\r\n\r\n            case DBFVersion.dBASE_III_plus:\r\n            case DBFVersion.dBASE_III_plus_memo:\r\n            //                header = this._parseHeaderV2_5()\r\n            //                break;\r\n\r\n            case DBFVersion.dBASE_IV_memo:\r\n            case DBFVersion.dBASE_IV_memo_SQL_table:\r\n            case DBFVersion.dBASE_IV_SQL_system:\r\n            case DBFVersion.dBASE_IV_SQL_table:\r\n                header = this._parseHeaderV3()\r\n                break\r\n\r\n            case DBFVersion.dBase_v_7:\r\n            case DBFVersion.FoxPro_2_x:\r\n            case DBFVersion.HiPerSix_memo:\r\n                header = this._parseHeaderV4()\r\n                break\r\n\r\n            default:\r\n                throw new RangeError( `Invalid version parameter: ${version}`, 'DBFLoader' )\r\n                break\r\n\r\n        }\r\n\r\n        // Check terminator\r\n        if ( this.reader.getUint8() !== DBFLoader.Terminator ) {\r\n            this.logger.error( 'DBFLoader: Invalid terminator after field descriptors !!!' )\r\n        }\r\n\r\n        return header\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {{numberOfRecords, year: *, month: (*|number), day: (*|number), lengthOfEachRecords, fields: Array}}\r\n     * @private\r\n     */\r\n    _parseHeaderV2 () {\r\n\r\n        const numberOfRecords     = this.reader.getInt16()\r\n        const year                = this.reader.getInt8() + DBFLoader.YearOffset\r\n        const month               = this.reader.getInt8()\r\n        const day                 = this.reader.getInt8()\r\n        const lengthOfEachRecords = this.reader.getInt16()\r\n\r\n        // Field descriptor array\r\n        let fields        = []\r\n        let name          = undefined\r\n        let type          = undefined\r\n        let length        = undefined\r\n        let memoryAddress = undefined\r\n        let decimalCount  = undefined\r\n        for ( let fieldIndex = 0 ; fieldIndex < numberOfRecords ; fieldIndex++ ) {\r\n\r\n            name          = this.reader.getString( 11 )\r\n            type          = this.reader.getChar()\r\n            length        = this.reader.getUint8()\r\n            memoryAddress = this.reader.getInt16()\r\n            decimalCount  = this.reader.getInt8()\r\n\r\n            fields.push( {\r\n                name,\r\n                type,\r\n                length,\r\n                memoryAddress,\r\n                decimalCount\r\n            } )\r\n\r\n        }\r\n\r\n        return {\r\n            numberOfRecords,\r\n            year,\r\n            month,\r\n            day,\r\n            lengthOfEachRecords,\r\n            fields\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {{year: *, month: (*|number), day: (*|number), numberOfRecords, numberOfByteInHeader, numberOfByteInRecord, fields: Array}}\r\n     * @private\r\n     */\r\n    _parseHeaderV2_5 () {\r\n\r\n        const year  = this.reader.getInt8() + DBFLoader.YearOffset\r\n        const month = this.reader.getInt8()\r\n        const day   = this.reader.getInt8()\r\n\r\n        this.reader.setEndianess( Endianness.Little )\r\n        const numberOfRecords      = this.reader.getInt32()\r\n        const numberOfByteInHeader = this.reader.getInt16()\r\n        const numberOfByteInRecord = this.reader.getInt16()\r\n        this.reader.setEndianess( Endianness.Big )\r\n        this.reader.skipOffsetOf( 3 + 13 + 4 ) // Reserved\r\n\r\n        // Field descriptor array\r\n        let fields        = []\r\n        let name          = undefined\r\n        let type          = undefined\r\n        let length        = undefined\r\n        let memoryAddress = undefined\r\n        let decimalCount  = undefined\r\n        let workAreaId    = undefined\r\n        let MDXFlag       = undefined\r\n        for ( let fieldIndex = 0 ; fieldIndex < numberOfRecords ; fieldIndex++ ) {\r\n\r\n            name          = this.reader.getString( 11 )\r\n            type          = this.reader.getChar()\r\n            memoryAddress = this.reader.getInt32()\r\n            length        = this.reader.getUint8()\r\n            decimalCount  = this.reader.getUint8()\r\n            this.reader.skipOffsetOf( 2 ) // Reserved\r\n            workAreaId = this.reader.getInt8()\r\n            this.reader.skipOffsetOf( 2 ) // Reserved\r\n            MDXFlag = this.reader.getInt8()\r\n            this.reader.skipOffsetOf( 1 ) // Reserved\r\n\r\n            fields.push( {\r\n                name,\r\n                type,\r\n                length,\r\n                memoryAddress,\r\n                decimalCount,\r\n                workAreaId,\r\n                MDXFlag\r\n            } )\r\n\r\n        }\r\n\r\n        return {\r\n            year,\r\n            month,\r\n            day,\r\n            numberOfRecords,\r\n            numberOfByteInHeader,\r\n            numberOfByteInRecord,\r\n            fields\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {{year: *, month: (*|number), day: (*|number), numberOfRecords, numberOfByteInHeader, numberOfByteInRecord, incompleteTransactionFlag: (*|number), encryptionFlag: (*|number), MDXFlag:\r\n     *     (*|number), languageDriverId: (*|number), fields: Array}}\r\n     * @private\r\n     */\r\n    _parseHeaderV3 () {\r\n\r\n        const year  = this.reader.getInt8() + DBFLoader.YearOffset\r\n        const month = this.reader.getInt8()\r\n        const day   = this.reader.getInt8()\r\n        this.reader.setEndianess( Endianness.Little )\r\n        const numberOfRecords      = this.reader.getInt32()\r\n        const numberOfByteInHeader = this.reader.getInt16()\r\n        const numberOfByteInRecord = this.reader.getInt16()\r\n        this.reader.setEndianess( Endianness.Big )\r\n        this.reader.skipOffsetOf( 2 ) // Reserved\r\n        const incompleteTransactionFlag = this.reader.getInt8()\r\n        const encryptionFlag            = this.reader.getInt8()\r\n        this.reader.skipOffsetOf( 12 ) // Reserved multi-users\r\n        const MDXFlag          = this.reader.getInt8()\r\n        const languageDriverId = this.reader.getInt8()\r\n        this.reader.skipOffsetOf( 2 ) // Reserved\r\n\r\n        // Field descriptor array\r\n        let fields       = []\r\n        let name         = undefined\r\n        let type         = undefined\r\n        let length       = undefined\r\n        let decimalCount = undefined\r\n        let workAreaId   = undefined\r\n        let MDXFieldFlag = undefined\r\n        while ( this.reader.getOffset() < numberOfByteInHeader - 1 ) {\r\n            //                for ( let fieldIndex = 0 ; fieldIndex < numberOfRecords ; fieldIndex++ ) {\r\n\r\n            name = this.reader.getString( 11 )\r\n            type = this.reader.getChar()\r\n            this.reader.skipOffsetOf( 4 ) // Reserved\r\n            length       = this.reader.getUint8()\r\n            decimalCount = this.reader.getUint8()\r\n            this.reader.skipOffsetOf( 2 ) // Reserved\r\n            workAreaId = this.reader.getInt8()\r\n            this.reader.skipOffsetOf( 10 ) // Reserved\r\n            MDXFieldFlag = this.reader.getInt8()\r\n\r\n            fields.push( {\r\n                name,\r\n                type,\r\n                length,\r\n                decimalCount,\r\n                workAreaId,\r\n                MDXFieldFlag\r\n            } )\r\n\r\n        }\r\n\r\n        return {\r\n            year,\r\n            month,\r\n            day,\r\n            numberOfRecords,\r\n            numberOfByteInHeader,\r\n            numberOfByteInRecord,\r\n            incompleteTransactionFlag,\r\n            encryptionFlag,\r\n            MDXFlag,\r\n            languageDriverId,\r\n            fields\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {{year: *, month: (*|number), day: (*|number), numberOfRecords, numberOfByteInHeader, numberOfByteInRecord, incompleteTransactionFlag: (*|number), encryptionFlag: (*|number), MDXFlag:\r\n     *     (*|number), languageDriverId: (*|number), languageDriverName, fields: Array}}\r\n     * @private\r\n     */\r\n    _parseHeaderV4 () {\r\n\r\n        const year  = this.reader.getInt8() + DBFLoader.YearOffset\r\n        const month = this.reader.getInt8()\r\n        const day   = this.reader.getInt8()\r\n        this.reader.setEndianess( Endianness.Little )\r\n        const numberOfRecords      = this.reader.getInt32()\r\n        const numberOfByteInHeader = this.reader.getInt16()\r\n        const numberOfByteInRecord = this.reader.getInt16()\r\n        this.reader.setEndianess( Endianness.Big )\r\n        this.reader.skipOffsetOf( 2 ) // Reserved\r\n        const incompleteTransactionFlag = this.reader.getInt8()\r\n        const encryptionFlag            = this.reader.getInt8()\r\n        this.reader.skipOffsetOf( 12 ) // Reserved multi-users\r\n        const MDXFlag          = this.reader.getInt8()\r\n        const languageDriverId = this.reader.getInt8()\r\n        this.reader.skipOffsetOf( 2 ) // Reserved\r\n        const languageDriverName = this.reader.getString( 32 )\r\n        this.reader.skipOffsetOf( 4 ) // Reserved\r\n\r\n        // Field descriptor array\r\n        let fields                 = []\r\n        let name                   = undefined\r\n        let type                   = undefined\r\n        let length                 = undefined\r\n        let decimalCount           = undefined\r\n        let MDXFieldFlag           = undefined\r\n        let nextAutoincrementValue = undefined\r\n        for ( let fieldIndex = 0 ; fieldIndex < numberOfRecords ; fieldIndex++ ) {\r\n\r\n            name         = this.reader.getString( 32 )\r\n            type         = this.reader.getChar()\r\n            length       = this.reader.getUint8()\r\n            decimalCount = this.reader.getUint8()\r\n            this.reader.skipOffsetOf( 2 ) // Reserved\r\n            MDXFieldFlag = this.reader.getInt8()\r\n            this.reader.skipOffsetOf( 2 ) // Reserved\r\n            nextAutoincrementValue = this.reader.getInt32()\r\n            this.reader.skipOffsetOf( 4 ) // Reserved\r\n\r\n            fields.push( {\r\n                name,\r\n                type,\r\n                length,\r\n                decimalCount,\r\n                MDXFieldFlag,\r\n                nextAutoincrementValue\r\n            } )\r\n\r\n        }\r\n\r\n        return {\r\n            year,\r\n            month,\r\n            day,\r\n            numberOfRecords,\r\n            numberOfByteInHeader,\r\n            numberOfByteInRecord,\r\n            incompleteTransactionFlag,\r\n            encryptionFlag,\r\n            MDXFlag,\r\n            languageDriverId,\r\n            languageDriverName,\r\n            fields\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param version\r\n     * @param header\r\n     * @return {Array}\r\n     * @private\r\n     */\r\n    _parseDatas ( version, header ) {\r\n\r\n        const numberOfRecords = header.numberOfRecords\r\n        const fields          = header.fields\r\n\r\n        let properties = undefined\r\n        if ( version === DBFVersion.dBase_v_7 ) {\r\n            properties = this._parseFieldProperties()\r\n        }\r\n\r\n        let records = []\r\n        let record  = undefined\r\n        let field   = undefined\r\n        for ( let recordIndex = 0 ; recordIndex < numberOfRecords ; recordIndex++ ) {\r\n\r\n            record              = {}\r\n            record[ 'deleted' ] = ( this.reader.getUInt8() === DBFLoader.DeletedRecord )\r\n\r\n            for ( let fieldIndex = 0, numberOfFields = fields.length ; fieldIndex < numberOfFields ; fieldIndex++ ) {\r\n\r\n                field = fields[ fieldIndex ]\r\n\r\n                switch ( field.type ) {\r\n\r\n                    case DataType.Binary:\r\n                        const binaryString   = this.reader.getString( field.length )\r\n                        record[ field.name ] = parseInt( binaryString )\r\n                        break\r\n\r\n                    case DataType.Numeric:\r\n                        const numericString  = this.reader.getString( field.length )\r\n                        record[ field.name ] = parseInt( numericString )\r\n                        break\r\n\r\n                    case DataType.Character:\r\n                        record[ field.name ] = this.reader.getString( field.length )\r\n                        break\r\n\r\n                    case DataType.Date:\r\n                        // YYYYMMDD\r\n                        record[ field.name ] = this.reader.getString( field.length )\r\n                        break\r\n\r\n                    case DataType.Logical:\r\n                        const logical = this.reader.getChar().toLowerCase()\r\n                        if ( logical === 't' || logical === 'y' ) {\r\n                            record[ field.name ] = true\r\n                        } else if ( logical === 'f' || logical === 'n' ) {\r\n                            record[ field.name ] = false\r\n                        } else {\r\n                            record[ field.name ] = null\r\n                        }\r\n                        break\r\n\r\n                    case DataType.Memo:\r\n                        record[ field.name ] = this.reader.getString( field.length )\r\n                        break\r\n\r\n                    case DataType.Timestamp:\r\n                        // 8 bytes - two longs, first for date, second for time.\r\n                        // The date is the number of days since  01/01/4713 BC.\r\n                        // Time is hours * 3600000L + minutes * 60000L + Seconds * 1000L\r\n\r\n                        break\r\n\r\n                    case DataType.Long:\r\n                        // 4 bytes. Leftmost bit used to indicate sign, 0 negative.\r\n                        record[ field.name ] = this.reader.getInt32()\r\n                        break\r\n\r\n                    case DataType.Autoincrement:\r\n                        // Same as a Long\r\n                        record[ field.name ] = this.reader.getInt32()\r\n                        break\r\n\r\n                    case DataType.Float:\r\n                        const floatString    = this.reader.getString( field.length )\r\n                        record[ field.name ] = parseInt( floatString )\r\n                        break\r\n\r\n                    case DataType.Double:\r\n                        record[ field.name ] = this.reader.getDouble()\r\n                        break\r\n\r\n                    case DataType.OLE:\r\n                        record[ field.name ] = this.reader.getString( field.length )\r\n                        break\r\n\r\n                    default:\r\n                        throw new RangeError( `Invalid data type parameter: ${field.type}`, '_parseDatas' )\r\n                        break\r\n\r\n                }\r\n\r\n            }\r\n\r\n            records.push( record )\r\n\r\n        }\r\n\r\n        return records\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {{numberOfStandardProperties, startOfStandardPropertiesDescriptor, numberOfCustomProperties, startOfCustomPropertiesDescriptor, numberOfReferentialIntegrityProperties,\r\n     *     startOfReferentialIntegrityDescriptor, startOfData, sizeOfPropertiesStructure, standardProperties: Array, customProperties: Array, referentialIntegrityProperties: Array}}\r\n     * @private\r\n     */\r\n    _parseFieldProperties () {\r\n\r\n        const numberOfStandardProperties             = this.reader.getInt16()\r\n        const startOfStandardPropertiesDescriptor    = this.reader.getInt16()\r\n        const numberOfCustomProperties               = this.reader.getInt16()\r\n        const startOfCustomPropertiesDescriptor      = this.reader.getInt16()\r\n        const numberOfReferentialIntegrityProperties = this.reader.getInt16()\r\n        const startOfReferentialIntegrityDescriptor  = this.reader.getInt16()\r\n        const startOfData                            = this.reader.getInt16()\r\n        const sizeOfPropertiesStructure              = this.reader.getInt16()\r\n\r\n        let standardProperties = []\r\n        for ( let standardIndex = 0 ; standardIndex < numberOfStandardProperties ; standardIndex++ ) {\r\n            standardProperties.push( this._getStandardProperties() )\r\n        }\r\n\r\n        let customProperties = []\r\n        for ( let customIndex = 0 ; customIndex < numberOfCustomProperties ; customIndex++ ) {\r\n            customProperties.push( this._getCustomProperties() )\r\n        }\r\n\r\n        let referentialIntegrityProperties = []\r\n        for ( let referentialIntegrityIndex = 0 ; referentialIntegrityIndex < numberOfReferentialIntegrityProperties ; referentialIntegrityIndex++ ) {\r\n            referentialIntegrityProperties.push( this._getReferentialIntegrityProperties() )\r\n        }\r\n\r\n        return {\r\n            numberOfStandardProperties,\r\n            startOfStandardPropertiesDescriptor,\r\n            numberOfCustomProperties,\r\n            startOfCustomPropertiesDescriptor,\r\n            numberOfReferentialIntegrityProperties,\r\n            startOfReferentialIntegrityDescriptor,\r\n            startOfData,\r\n            sizeOfPropertiesStructure,\r\n            standardProperties,\r\n            customProperties,\r\n            referentialIntegrityProperties\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {{generationalNumber, tableFieldOffset, propertyDescribed: (*|number), type: (*|number), isConstraint: (*|number), offsetFromStart, widthOfDatabaseField}}\r\n     * @private\r\n     */\r\n    _getStandardProperties () {\r\n\r\n        const generationalNumber = this.reader.getInt16()\r\n        const tableFieldOffset   = this.reader.getInt16()\r\n        const propertyDescribed  = this.reader.getInt8()\r\n        const type               = this.reader.getInt8()\r\n        const isConstraint       = this.reader.getInt8()\r\n        this.reader.skipOffsetOf( 4 ) // Reserved\r\n        const offsetFromStart      = this.reader.getInt16()\r\n        const widthOfDatabaseField = this.reader.getInt16()\r\n\r\n        return {\r\n            generationalNumber,\r\n            tableFieldOffset,\r\n            propertyDescribed,\r\n            type,\r\n            isConstraint,\r\n            offsetFromStart,\r\n            widthOfDatabaseField\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {{generationalNumber, tableFieldOffset, type: (*|number), offsetFromStartOfName, lengthOfName, offsetFromStartOfData, lengthOfData}}\r\n     * @private\r\n     */\r\n    _getCustomProperties () {\r\n\r\n        const generationalNumber = this.reader.getInt16()\r\n        const tableFieldOffset   = this.reader.getInt16()\r\n        const type               = this.reader.getInt8()\r\n        this.reader.skipOffsetOf( 1 ) // Reserved\r\n        const offsetFromStartOfName = this.reader.getInt16()\r\n        const lengthOfName          = this.reader.getInt16()\r\n        const offsetFromStartOfData = this.reader.getInt16()\r\n        const lengthOfData          = this.reader.getInt16()\r\n\r\n        return {\r\n            generationalNumber,\r\n            tableFieldOffset,\r\n            type,\r\n            offsetFromStartOfName,\r\n            lengthOfName,\r\n            offsetFromStartOfData,\r\n            lengthOfData\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {{databaseState: (*|number), sequentialNumberRule, offsetOfTheRIRuleName, sizeOfTheRIRuleName, offsetOfNameOfForeignTable, sizeOfNameOfForeignTable, stateBehaviour: (*|number),\r\n     *     numberOfFieldsInLinkingKey, offsetOfLocalTableTagName, sizeOfTheLocalTableTagName, offsetOfForeignTableTagName, sizeOfTheForeignTableTagName}}\r\n     * @private\r\n     */\r\n    _getReferentialIntegrityProperties () {\r\n\r\n        const databaseState                = this.reader.getInt8()\r\n        const sequentialNumberRule         = this.reader.getInt16()\r\n        const offsetOfTheRIRuleName        = this.reader.getInt16()\r\n        const sizeOfTheRIRuleName          = this.reader.getInt16()\r\n        const offsetOfNameOfForeignTable   = this.reader.getInt16()\r\n        const sizeOfNameOfForeignTable     = this.reader.getInt16()\r\n        const stateBehaviour               = this.reader.getInt8()\r\n        const numberOfFieldsInLinkingKey   = this.reader.getInt16()\r\n        const offsetOfLocalTableTagName    = this.reader.getInt16()\r\n        const sizeOfTheLocalTableTagName   = this.reader.getInt16()\r\n        const offsetOfForeignTableTagName  = this.reader.getInt16()\r\n        const sizeOfTheForeignTableTagName = this.reader.getInt16()\r\n\r\n        return {\r\n            databaseState,\r\n            sequentialNumberRule,\r\n            offsetOfTheRIRuleName,\r\n            sizeOfTheRIRuleName,\r\n            offsetOfNameOfForeignTable,\r\n            sizeOfNameOfForeignTable,\r\n            stateBehaviour,\r\n            numberOfFieldsInLinkingKey,\r\n            offsetOfLocalTableTagName,\r\n            sizeOfTheLocalTableTagName,\r\n            offsetOfForeignTableTagName,\r\n            sizeOfTheForeignTableTagName\r\n        }\r\n\r\n    }\r\n\r\n} )\r\n\r\nexport { DBFLoader }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { TAbstractFileConverter } from 'itee-database'\r\nimport { DBFLoader }              from '../loaders/DBFLoader'\r\n\r\nclass DbfToThree extends TAbstractFileConverter {\r\n\r\n    constructor () {\r\n        super( TAbstractFileConverter.DumpType.ArrayBuffer )\r\n    }\r\n\r\n    _convert ( data, parameters, onSuccess, onProgress, onError ) {\r\n        super._convert( data, parameters, onSuccess, onProgress, onError )\r\n\r\n        try {\r\n\r\n            const loader    = new DBFLoader()\r\n            const threeData = loader.parse( data )\r\n            onSuccess( threeData )\r\n\r\n        } catch ( error ) {\r\n\r\n            onError( error )\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { DbfToThree }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { TAbstractFileConverter } from 'itee-database'\r\nimport { ObjectLoader }           from 'three-full'\r\n\r\nclass JsonToThree extends TAbstractFileConverter {\r\n\r\n    constructor () {\r\n        super( TAbstractFileConverter.DumpType.JSON )\r\n    }\r\n\r\n    _convert ( data, parameters, onSuccess, onProgress, onError ) {\r\n        super._convert( data, parameters, onSuccess, onProgress, onError )\r\n\r\n        try {\r\n\r\n            const loader    = new ObjectLoader()\r\n            const threeData = loader.parse( data )\r\n            onSuccess( threeData )\r\n\r\n        } catch ( error ) {\r\n\r\n            onError( error )\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { JsonToThree }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { TAbstractFileConverter } from 'itee-database'\r\nimport { MTLLoader }              from 'three-full'\r\n\r\nclass MtlToThree extends TAbstractFileConverter {\r\n\r\n    constructor () {\r\n        super( TAbstractFileConverter.DumpType.String )\r\n    }\r\n\r\n    _convert ( data, parameters, onSuccess, onProgress, onError ) {\r\n        super._convert( data, parameters, onSuccess, onProgress, onError )\r\n\r\n        try {\r\n\r\n            const loader    = new MTLLoader()\r\n            const threeData = loader.parse( data )\r\n            onSuccess( threeData )\r\n\r\n        } catch ( error ) {\r\n\r\n            onError( error )\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport { MtlToThree }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { TAbstractFileConverter } from 'itee-database'\r\nimport { OBJLoader2 }             from 'three-full'\r\n\r\nclass Obj2ToThree extends TAbstractFileConverter {\r\n\r\n    constructor () {\r\n        super( TAbstractFileConverter.DumpType.String )\r\n    }\r\n\r\n    _convert ( data, parameters, onSuccess, onProgress, onError ) {\r\n        super._convert( data, parameters, onSuccess, onProgress, onError )\r\n\r\n        try {\r\n\r\n            const loader    = new OBJLoader2()\r\n            const threeData = loader.parse( data )\r\n            onSuccess( threeData )\r\n\r\n        } catch ( error ) {\r\n\r\n            onError( error )\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { Obj2ToThree }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * This class allow to split any geometries type during runtime.\r\n * Keeping normals and Uvs. It is really usefull to see inside mesh like building.\r\n *\r\n * Constructor parameter:\r\n *\r\n * size - the size of the square view\r\n *\r\n * @class Todo...\r\n * @classdesc Todo...\r\n * @example Todo...\r\n *\r\n */\r\n\r\n/* eslint-env browser */\r\n\r\nimport {\r\n    DefaultLogger,\r\n    Endianness,\r\n    TBinaryReader\r\n} from 'itee-client'\r\nimport {\r\n    DefaultLoadingManager,\r\n    FileLoader,\r\n    Shape,\r\n    Vector3\r\n} from 'three-full'\r\n\r\n/**\r\n *\r\n * @type {Object}\r\n */\r\nconst ShapeType = Object.freeze( {\r\n    NullShape:   0,\r\n    Point:       1,\r\n    Polyline:    3,\r\n    Polygon:     5,\r\n    MultiPoint:  8,\r\n    PointZ:      11,\r\n    PolyLineZ:   13,\r\n    PolygonZ:    15,\r\n    MultiPointZ: 18,\r\n    PointM:      21,\r\n    PolylineM:   23,\r\n    PolygonM:    25,\r\n    MultiPointM: 28,\r\n    MultiPatch:  31\r\n} )\r\n\r\n// Helpers\r\n/**\r\n *\r\n * @param ring\r\n * @return {boolean}\r\n */\r\nfunction ringClockwise ( ring ) {\r\n\r\n    if ( ( n = ring.length ) < 4 ) {\r\n        return false\r\n    }\r\n\r\n    var i = 0, n, area = ring[ n - 1 ][ 1 ] * ring[ 0 ][ 0 ] - ring[ n - 1 ][ 0 ] * ring[ 0 ][ 1 ]\r\n    while ( ++i < n ) {\r\n        area += ring[ i - 1 ][ 1 ] * ring[ i ][ 0 ] - ring[ i - 1 ][ 0 ] * ring[ i ][ 1 ]\r\n    }\r\n    return area >= 0\r\n}\r\n\r\n/**\r\n *\r\n * @param ring\r\n * @param hole\r\n * @return {boolean}\r\n */\r\nfunction ringContainsSome ( ring, hole ) {\r\n\r\n    var i = -1, n = hole.length, c\r\n    while ( ++i < n ) {\r\n        if ( c = ringContains( ring, hole[ i ] ) ) {\r\n            return c > 0\r\n        }\r\n    }\r\n    return false\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param ring\r\n * @param point\r\n * @return {number}\r\n */\r\nfunction ringContains ( ring, point ) {\r\n    var x = point[ 0 ], y = point[ 1 ], contains = -1\r\n    for ( var i = 0, n = ring.length, j = n - 1 ; i < n ; j = i++ ) {\r\n        var pi = ring[ i ], xi = pi[ 0 ], yi = pi[ 1 ],\r\n            pj                               = ring[ j ], xj = pj[ 0 ], yj = pj[ 1 ]\r\n        if ( segmentContains( pi, pj, point ) ) {\r\n            return 0\r\n        }\r\n        if ( ( ( yi > y ) !== ( yj > y ) ) && ( ( x < ( xj - xi ) * ( y - yi ) / ( yj - yi ) + xi ) ) ) {\r\n            contains = -contains\r\n        }\r\n    }\r\n    return contains\r\n}\r\n\r\n/**\r\n *\r\n * @param p0\r\n * @param p1\r\n * @param p2\r\n * @return {boolean}\r\n */\r\nfunction segmentContains ( p0, p1, p2 ) {\r\n    var x20 = p2[ 0 ] - p0[ 0 ], y20 = p2[ 1 ] - p0[ 1 ]\r\n    if ( x20 === 0 && y20 === 0 ) {\r\n        return true\r\n    }\r\n    var x10 = p1[ 0 ] - p0[ 0 ], y10 = p1[ 1 ] - p0[ 1 ]\r\n    if ( x10 === 0 && y10 === 0 ) {\r\n        return false\r\n    }\r\n    var t = ( x20 * x10 + y20 * y10 ) / ( x10 * x10 + y10 * y10 )\r\n    return t < 0 || t > 1 ? false : t === 0 || t === 1 ? true : t * x10 === x20 && t * y10 === y20\r\n}\r\n\r\n/**\r\n *\r\n * @param manager\r\n * @param logger\r\n * @constructor\r\n */\r\nfunction SHPLoader ( manager = DefaultLoadingManager, logger = DefaultLogger ) {\r\n\r\n    this.manager = manager\r\n    this.logger  = logger\r\n\r\n    this.globalOffset = new Vector3()\r\n    this.worldAxis    = {\r\n        from: 'zUp',\r\n        to:   'zForward'\r\n    }\r\n\r\n    this._reader = new TBinaryReader()\r\n\r\n}\r\n\r\nObject.assign( SHPLoader, {\r\n\r\n    /**\r\n     *\r\n     */\r\n    FileCode: 9994,\r\n\r\n    /**\r\n     *\r\n     */\r\n    MinFileLength: 100,\r\n\r\n    /**\r\n     *\r\n     */\r\n    MinVersion: 1000\r\n\r\n} )\r\n\r\nObject.assign( SHPLoader.prototype, {\r\n\r\n    /**\r\n     *\r\n     * @param url\r\n     * @param onLoad\r\n     * @param onProgress\r\n     * @param onError\r\n     */\r\n    load ( url, onLoad, onProgress, onError ) {\r\n\r\n        const scope = this\r\n\r\n        const loader = new FileLoader( scope.manager )\r\n        loader.setResponseType( 'arraybuffer' )\r\n        loader.load( url, arrayBuffer => {\r\n\r\n            onLoad( scope.parse( arrayBuffer ) )\r\n\r\n        }, onProgress, onError )\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param arrayBuffer\r\n     * @return {*}\r\n     */\r\n    parse ( arrayBuffer ) {\r\n\r\n        this._reader\r\n            .setEndianess( Endianness.Big )\r\n            .setBuffer( arrayBuffer )\r\n\r\n        const header = this._parseHeader()\r\n\r\n        if ( header.fileCode !== SHPLoader.FileCode ) {\r\n            this.logger.error( 'SHPLoader: Invalide Shape file code !' )\r\n            return null\r\n        }\r\n\r\n        if ( header.fileLength < SHPLoader.MinFileLength ) {\r\n            this.logger.error( 'SHPLoader: Shape file have an incorrect length !' )\r\n            return null\r\n        }\r\n\r\n        if ( !Object.values( ShapeType ).includes( header.shapeType ) ) {\r\n            this.logger.error( 'SHPLoader: Shape file have an incorrect shape type !' )\r\n            return null\r\n        }\r\n\r\n        if ( header.version < SHPLoader.MinVersion ) {\r\n            this.logger.warn( 'SHPLoader: Version of shape file below than 1000 could be incorrectly parsed !' )\r\n        }\r\n\r\n        const datas  = this._parseDatas( header )\r\n        const shapes = this._convertToObjects( datas )\r\n\r\n        return shapes\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {{fileCode, fileLength, version, shapeType, boundingBox: {xMin, xMax, yMin, yMax, zMin, zMax, mMin, mMax}}}\r\n     * @private\r\n     */\r\n    _parseHeader () {\r\n\r\n        const fileCode = this._reader.getInt32()\r\n        this._reader.skipOffsetOf( 20 )\r\n        const fileLength = this._reader.getInt32()\r\n\r\n        this._reader.setEndianess( Endianness.Little )\r\n\r\n        const version         = this._reader.getInt32()\r\n        const shapeType       = this._reader.getInt32()\r\n        const xMinBoundingBox = this._reader.getInt32()\r\n        const yMinBoundingBox = this._reader.getInt32()\r\n        const xMaxBoundingBox = this._reader.getInt32()\r\n        const yMaxBoundingBox = this._reader.getInt32()\r\n        const zMinBoundingBox = this._reader.getInt32()\r\n        const zMaxBoundingBox = this._reader.getInt32()\r\n        const mMinBoundingBox = this._reader.getInt32()\r\n        const mMaxBoundingBox = this._reader.getInt32()\r\n\r\n        return {\r\n            fileCode:    fileCode,\r\n            fileLength:  fileLength,\r\n            version:     version,\r\n            shapeType:   shapeType,\r\n            boundingBox: {\r\n                xMin: xMinBoundingBox,\r\n                xMax: xMaxBoundingBox,\r\n                yMin: yMinBoundingBox,\r\n                yMax: yMaxBoundingBox,\r\n                zMin: zMinBoundingBox,\r\n                zMax: zMaxBoundingBox,\r\n                mMin: mMinBoundingBox,\r\n                mMax: mMaxBoundingBox\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param header\r\n     * @return {Array}\r\n     * @private\r\n     */\r\n    _parseDatas ( header ) {\r\n\r\n        this._reader.skipOffsetTo( 100 )\r\n\r\n        let datas         = []\r\n        let recordHeader  = undefined\r\n        let endOfRecord   = undefined\r\n        let recordContent = undefined\r\n\r\n        while ( !this._reader.isEndOfFile() ) {\r\n\r\n            recordHeader = this._parseRecordHeader()\r\n            endOfRecord  = this._reader.getOffset() + ( recordHeader.contentLength * 2 )\r\n\r\n            // All parsing methods use little below\r\n            this._reader.setEndianess( Endianness.Little )\r\n\r\n            switch ( header.shapeType ) {\r\n\r\n                case ShapeType.NullShape:\r\n\r\n                    this._reader.skipOffsetTo( endOfRecord )\r\n\r\n                    //                    // Todo: just skip 1 byte - or - to endRecord\r\n                    //                    while ( this._reader.getOffset() < endOfRecord ) {\r\n                    //\r\n                    //                        recordContent = this._parseNull();\r\n                    //                        if ( recordContent ) {\r\n                    //                            datas.push( recordContent );\r\n                    //                        }\r\n                    //\r\n                    //                    }\r\n                    break\r\n\r\n                case ShapeType.Point:\r\n                case ShapeType.PointZ:\r\n                case ShapeType.PointM:\r\n                    while ( this._reader.getOffset() < endOfRecord ) {\r\n\r\n                        recordContent = this._parsePoint()\r\n                        if ( recordContent ) {\r\n                            datas.push( recordContent )\r\n                        }\r\n\r\n                    }\r\n                    break\r\n\r\n                case ShapeType.Polyline:\r\n                case ShapeType.PolyLineZ:\r\n                case ShapeType.PolylineM:\r\n                    while ( this._reader.getOffset() < endOfRecord ) {\r\n\r\n                        recordContent = this._parsePolyLine()\r\n                        if ( recordContent ) {\r\n                            datas.push( recordContent )\r\n                        }\r\n\r\n                    }\r\n                    break\r\n\r\n                case ShapeType.Polygon:\r\n                case ShapeType.PolygonZ:\r\n                case ShapeType.PolygonM:\r\n                    while ( this._reader.getOffset() < endOfRecord ) {\r\n\r\n                        recordContent = this._parsePolyLine()\r\n                        //                        recordContent = this._parsePolygon();\r\n                        if ( recordContent ) {\r\n                            datas.push( recordContent )\r\n                        }\r\n\r\n                    }\r\n                    break\r\n\r\n                case ShapeType.MultiPoint:\r\n                case ShapeType.MultiPointZ:\r\n                case ShapeType.MultiPointM:\r\n                    while ( this._reader.getOffset() < endOfRecord ) {\r\n\r\n                        recordContent = this._parseMultiPoint()\r\n                        if ( recordContent ) {\r\n                            datas.push( recordContent )\r\n                        }\r\n\r\n                    }\r\n                    break\r\n\r\n                case ShapeType.MultiPatch:\r\n                    while ( this._reader.getOffset() < endOfRecord ) {\r\n\r\n                        recordContent = this._parseMultiPatch()\r\n                        if ( recordContent ) {\r\n                            datas.push( recordContent )\r\n                        }\r\n\r\n                    }\r\n                    break\r\n\r\n                default:\r\n                    this.logger.error( `SHPLoader: Invalid switch parameter: ${shapeType}` )\r\n                    break\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return datas\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {{recordNumber, contentLength}}\r\n     * @private\r\n     */\r\n    _parseRecordHeader () {\r\n\r\n        this._reader.setEndianess( Endianness.Big )\r\n\r\n        const recordNumber  = this._reader.getInt32()\r\n        const contentLength = this._reader.getInt32()\r\n\r\n        return {\r\n            recordNumber,\r\n            contentLength\r\n        }\r\n\r\n    },\r\n\r\n    //    _parseNull () {\r\n    //\r\n    //        this._reader.getInt32();\r\n    //\r\n    //        return null;\r\n    //    },\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _parsePoint () {\r\n\r\n        const shapeType = this._reader.getInt32()\r\n        if ( shapeType === ShapeType.NullShape ) {\r\n            return null\r\n        }\r\n\r\n        const x = this._reader.getFloat64()\r\n        const y = this._reader.getFloat64()\r\n\r\n        return {\r\n            shapeType,\r\n            x,\r\n            y\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _parsePolyLine () {\r\n\r\n        const shapeType = this._reader.getInt32()\r\n        if ( shapeType === ShapeType.NullShape ) {\r\n            return null\r\n        }\r\n\r\n        const boundingBox = {\r\n            xMin: this._reader.getFloat64(),\r\n            yMin: this._reader.getFloat64(),\r\n            xMax: this._reader.getFloat64(),\r\n            yMax: this._reader.getFloat64()\r\n        }\r\n\r\n        const numberOfParts  = this._reader.getInt32()\r\n        const numberOfPoints = this._reader.getInt32()\r\n\r\n        const parts = new Array( numberOfParts )\r\n        for ( let indexParts = 0 ; indexParts < numberOfParts ; indexParts++ ) {\r\n            parts[ indexParts ] = this._reader.getInt32()\r\n        }\r\n\r\n        const points = new Array( numberOfPoints )\r\n        for ( let indexPoint = 0 ; indexPoint < numberOfPoints ; indexPoint++ ) {\r\n            points[ indexPoint ] = {\r\n                x: this._reader.getFloat64(),\r\n                y: this._reader.getFloat64()\r\n            }\r\n        }\r\n\r\n        return {\r\n            shapeType,\r\n            boundingBox,\r\n            numberOfParts,\r\n            numberOfPoints,\r\n            parts,\r\n            points\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _parsePolygon () {\r\n\r\n        const shapeType = this._reader.getInt32()\r\n        if ( shapeType === ShapeType.NullShape ) {\r\n            return null\r\n        }\r\n\r\n        const boundingBox = {\r\n            xMin: this._reader.getFloat64(),\r\n            yMin: this._reader.getFloat64(),\r\n            xMax: this._reader.getFloat64(),\r\n            yMax: this._reader.getFloat64()\r\n        }\r\n\r\n        const numberOfParts  = this._reader.getInt32()\r\n        const numberOfPoints = this._reader.getInt32()\r\n\r\n        let parts = new Array( numberOfParts )\r\n        for ( let indexParts = 0 ; indexParts < numberOfParts ; indexParts++ ) {\r\n            parts[ indexParts ] = this._reader.getInt32()\r\n        }\r\n\r\n        let points = new Array( numberOfPoints )\r\n        for ( let indexPoint = 0 ; indexPoint < numberOfPoints ; indexPoint++ ) {\r\n            points[ indexPoint ] = {\r\n                x: this._reader.getFloat64(),\r\n                y: this._reader.getFloat64()\r\n            }\r\n        }\r\n\r\n        const polygons = []\r\n        const holes    = []\r\n\r\n        parts.forEach( ( value, index ) => {\r\n\r\n            const ring = points.slice( value, parts[ index + 1 ] )\r\n\r\n            if ( ringClockwise( ring ) ) {\r\n\r\n                polygons.push( ring )\r\n                //\t\t\t\t\tpolygons.push( [ ring ] );\r\n\r\n            } else {\r\n\r\n                holes.push( ring )\r\n\r\n            }\r\n\r\n        } )\r\n\r\n        holes.forEach( hole => {\r\n\r\n            polygons.some( polygon => {\r\n\r\n                if ( ringContainsSome( polygon[ 0 ], hole ) ) {\r\n                    polygon.push( hole )\r\n                    return true\r\n                }\r\n\r\n            } ) || polygons.push( [ hole ] )\r\n\r\n        } )\r\n\r\n        return {\r\n            shapeType,\r\n            boundingBox,\r\n            numberOfParts,\r\n            numberOfPoints,\r\n            parts,\r\n            polygons\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _parseMultiPoint () {\r\n\r\n        const shapeType = this._reader.getInt32()\r\n        if ( shapeType === ShapeType.NullShape ) {\r\n            return null\r\n        }\r\n\r\n        const boundingBox = {\r\n            xMin: this._reader.getFloat64(),\r\n            xMax: this._reader.getFloat64(),\r\n            yMin: this._reader.getFloat64(),\r\n            yMax: this._reader.getFloat64()\r\n        }\r\n\r\n        const numberOfPoints = this._reader.getInt32()\r\n\r\n        const points = new Array( numberOfPoints )\r\n\r\n        for ( let indexPoint = 0 ; indexPoint < numberOfPoints ; indexPoint++ ) {\r\n            points.push( [ this._reader.getFloat64(), this._reader.getFloat64() ] )\r\n        }\r\n\r\n        return {\r\n            shapeType,\r\n            boundingBox,\r\n            numberOfPoints,\r\n            points\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _parseMultiPatch () {\r\n\r\n        const shapeType = this._reader.getInt32()\r\n        if ( shapeType === ShapeType.NullShape ) {\r\n            return null\r\n        }\r\n\r\n        return {\r\n            shapeType\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param datas\r\n     * @return {Array}\r\n     * @private\r\n     */\r\n    _convertToObjects ( datas ) {\r\n\r\n        let shapes = []\r\n\r\n        for ( let index = 0, numberOfShapes = datas.length ; index < numberOfShapes ; index++ ) {\r\n            let data = datas[ index ]\r\n\r\n            if ( data.shapeType === ShapeType.Polygon || data.shapeType === ShapeType.PolygonZ || data.shapeType === ShapeType.PolygonM ) {\r\n\r\n                if ( data.points && Array.isArray( data.points[ 0 ] ) ) {\r\n\r\n                    __createObjectsFromArrays( data.points )\r\n\r\n                } else {\r\n\r\n                    __createObjectFromPoints( data.points )\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function __createObjectsFromArrays ( arrays ) {\r\n\r\n            //Todo: need to fix parsePolygon to avoid too much array imbrication\r\n\r\n            for ( let arrayIndex = 0, numberOfArray = arrays.length ; arrayIndex < numberOfArray ; arrayIndex++ ) {\r\n\r\n                let array = arrays[ arrayIndex ]\r\n\r\n                if ( !array ) {\r\n                    this.logger.log( 'no array, oups !' )\r\n                    continue\r\n                }\r\n\r\n                if ( Array.isArray( array[ 0 ] ) ) {\r\n\r\n                    __createObjectsFromArrays( array )\r\n\r\n                } else {\r\n\r\n                    __createObjectFromPoints( array )\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function __createObjectFromPoints ( points ) {\r\n\r\n            shapes.push( new Shape( points ) )\r\n\r\n        }\r\n\r\n        return shapes\r\n\r\n    }\r\n\r\n} )\r\n\r\nexport {\r\n    SHPLoader,\r\n    ShapeType\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { TAbstractFileConverter } from 'itee-database'\r\nimport { SHPLoader }              from '../loaders/SHPLoader'\r\n\r\nclass ShpToThree extends TAbstractFileConverter {\r\n\r\n    constructor () {\r\n        super( TAbstractFileConverter.DumpType.ArrayBuffer )\r\n    }\r\n\r\n    _convert ( data, parameters, onSuccess, onProgress, onError ) {\r\n        super._convert( data, parameters, onSuccess, onProgress, onError )\r\n\r\n        try {\r\n\r\n            const loader    = new SHPLoader()\r\n            const threeData = loader.parse( data )\r\n            onSuccess( threeData )\r\n\r\n        } catch ( error ) {\r\n\r\n            onError( error )\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { ShpToThree }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { TAbstractDataInserter } from 'itee-database'\r\nimport { isNotDefined }          from 'itee-validators'\r\n\r\nclass ThreeToMongoDB extends TAbstractDataInserter {\r\n\r\n    constructor ( Mongoose ) {\r\n\r\n        super( Mongoose )\r\n\r\n    }\r\n\r\n    _save ( data, parameters, onSuccess, onProgress, onError ) {\r\n\r\n        const self                 = this\r\n        const parentId             = parameters.parentId\r\n        const disableRootNode      = ( parameters.disableRootNode === 'true' )\r\n        const dataToParse          = ( disableRootNode ) ? data.children : ( Array.isArray( data ) ) ? data : [ data ]\r\n        const errors               = []\r\n        const numberOfRootChildren = dataToParse.length\r\n        let processedRootChildren  = 0\r\n\r\n        if ( numberOfRootChildren === 0 ) {\r\n            onError( 'No node to save in database !' )\r\n        }\r\n\r\n        let rootChildIndex = 0\r\n        checkNextRootChild()\r\n\r\n        function checkNextRootChild () {\r\n\r\n            const rootChild = dataToParse[ rootChildIndex ]\r\n\r\n            self._parse(\r\n                rootChild,\r\n                ( childrenIds ) => {\r\n\r\n                    processedRootChildren++\r\n\r\n                    onProgress( {\r\n                        name: rootChild.name,\r\n                        done: processedRootChildren,\r\n                        todo: numberOfRootChildren\r\n                    } )\r\n\r\n                    // In case the root object haven't parent or children skip update\r\n                    if ( isNotDefined( parentId ) || isNotDefined( childrenIds ) ) {\r\n\r\n                        checkEndOfParsing()\r\n                        return\r\n\r\n                    } else if ( typeof childrenIds === 'string' ) {\r\n\r\n                        // Convert single childrenId to array to avoid unecessary code duplication\r\n                        childrenIds = [ childrenIds ]\r\n\r\n                    } else {\r\n                        // already an array, it's ok\r\n                    }\r\n\r\n                    const Objects3DModelBase = self._driver.model( 'Objects3D' )\r\n                    Objects3DModelBase.findOneAndUpdate( { _id: parentId }, { $push: { children: childrenIds } }, ( error, rootObject ) => {\r\n\r\n                        if ( error ) {\r\n\r\n                            errors.push( error )\r\n                            checkEndOfParsing()\r\n                            return\r\n\r\n                        }\r\n\r\n                        if ( !rootObject ) {\r\n\r\n                            errors.push( `Unable to retrieve parent object with the given id: ${parentId} !!!` )\r\n                            checkEndOfParsing()\r\n                            return\r\n\r\n                        }\r\n\r\n                        // Update Children with parent id\r\n                        const rootId           = rootObject.id\r\n                        const numberOfChildren = childrenIds.length\r\n                        let endUpdates         = 0\r\n\r\n                        for ( let childIndex = 0 ; childIndex < numberOfChildren ; childIndex++ ) {\r\n\r\n                            let childId = childrenIds[ childIndex ]\r\n\r\n                            Objects3DModelBase.findByIdAndUpdate( childId, { $set: { parent: rootId } }, ( error, success ) => {\r\n\r\n                                if ( error ) {\r\n                                    errors.push( error )\r\n                                }\r\n\r\n                                endUpdates++\r\n                                if ( endUpdates < numberOfChildren ) {\r\n                                    return\r\n                                }\r\n\r\n                                checkEndOfParsing()\r\n\r\n                            } )\r\n\r\n                        }\r\n\r\n                    } )\r\n\r\n                },\r\n                onProgress,\r\n                onError\r\n            )\r\n\r\n        }\r\n\r\n        function checkEndOfParsing () {\r\n            rootChildIndex++\r\n            if ( rootChildIndex < numberOfRootChildren ) {\r\n                checkNextRootChild()\r\n                return\r\n            }\r\n\r\n            if ( errors.length > 0 ) {\r\n                onError( errors )\r\n            } else {\r\n                onSuccess( parentId )\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    _parse ( object, onSuccess, onProgress, onError ) {\r\n\r\n        const self             = this\r\n        const numberOfChildren = object.children.length\r\n        let childrenIds        = []\r\n        let childIndex         = 0\r\n\r\n        if ( numberOfChildren > 0 ) {\r\n\r\n            checkNextChild()\r\n\r\n        } else {\r\n\r\n            self._saveInDataBase( object, [], onError, onSuccess )\r\n\r\n        }\r\n\r\n        function checkNextChild () {\r\n\r\n            const child = object.children[ childIndex ]\r\n\r\n            self._parse(\r\n                child,\r\n                objectId => {\r\n\r\n                    childrenIds.push( objectId )\r\n\r\n                    onProgress( {\r\n                        name: child.name,\r\n                        done: childrenIds.length,\r\n                        todo: numberOfChildren\r\n                    } )\r\n\r\n                    if ( childrenIds.length < numberOfChildren ) {\r\n                        childIndex++\r\n                        checkNextChild()\r\n                        return\r\n                    }\r\n\r\n                    self._saveInDataBase( object, childrenIds, onError, onSuccess )\r\n\r\n                },\r\n                onProgress,\r\n                onError\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    ///////////\r\n\r\n    _parseUserData ( jsonUserData ) {\r\n\r\n        let userData = {}\r\n\r\n        for ( let prop in jsonUserData ) {\r\n            if ( jsonUserData.hasOwnProperty( prop ) ) {\r\n                userData[ prop.replace( /\\./g, '' ) ] = jsonUserData[ prop ]\r\n            }\r\n        }\r\n\r\n        return userData\r\n\r\n    }\r\n\r\n    _saveInDataBase ( object, childrenArrayIds, onError, onSuccess ) {\r\n\r\n        // Remove null ids that could come from invalid objects\r\n        const self        = this\r\n        const childrenIds = childrenArrayIds.filter( ( item ) => {\r\n            return item\r\n        } )\r\n\r\n        // Preprocess objects here to save geometry, materials and related before to save the object itself\r\n        const objectType = object.type\r\n        const geometry   = object.geometry\r\n        const materials  = object.material\r\n\r\n        if (\r\n            objectType === 'Curve' ||\r\n            objectType === 'ArcCurve' ||\r\n            objectType === 'CatmullRomCurve3' ||\r\n            objectType === 'CubicBezierCurve' ||\r\n            objectType === 'CubicBezierCurve3' ||\r\n            objectType === 'EllipseCurve' ||\r\n            objectType === 'LineCurve' ||\r\n            objectType === 'LineCurve3' ||\r\n            objectType === 'QuadraticBezierCurve' ||\r\n            objectType === 'QuadraticBezierCurve3' ||\r\n            objectType === 'SplineCurve' ||\r\n            objectType === 'CurvePath' ||\r\n            objectType === 'Path' ||\r\n            objectType === 'Shape'\r\n        ) {\r\n\r\n            self._saveCurveInDatabase( object, childrenIds, onError, onSuccess )\r\n\r\n        } else if ( geometry && materials ) {\r\n\r\n            if ( geometry.isGeometry ) {\r\n\r\n                // If it is a terminal object ( No children ) with an empty geometry\r\n                if ( childrenIds.length === 0 && ( !geometry.vertices || geometry.vertices.length === 0 ) ) {\r\n\r\n                    console.error( `Object ${object.name} geometry doesn't contain vertices ! Skip it.` )\r\n                    onSuccess( null )\r\n                    return\r\n\r\n                }\r\n\r\n                if ( objectType === 'Line' || objectType === 'LineLoop' || objectType === 'LineSegments' ) {\r\n\r\n                    // if material != LineBasicMaterial or LineDashedMaterial... ERROR\r\n                    if ( Array.isArray( materials ) ) {\r\n\r\n                        let materialOnError = false\r\n                        let material        = undefined\r\n                        let materialType    = undefined\r\n                        for ( let materialIndex = 0, numberOfMaterials = materials.length ; materialIndex < numberOfMaterials ; materialIndex++ ) {\r\n\r\n                            material     = materials[ materialIndex ]\r\n                            materialType = material.type\r\n                            if ( materialType !== 'LineBasicMaterial' && materialType !== 'LineDashedMaterial' ) {\r\n                                materialOnError = true\r\n                                break\r\n                            }\r\n\r\n                        }\r\n\r\n                        if ( materialOnError ) {\r\n\r\n                            console.error( `Object ${object.name} of type ${objectType}, contain an invalid material of type ${materialType} ! Skip it.` )\r\n                            onSuccess( null )\r\n                            return\r\n\r\n                        }\r\n\r\n                    } else if ( materials.type !== 'LineBasicMaterial' && materials.type !== 'LineDashedMaterial' ) {\r\n\r\n                        console.error( `Object ${object.name} of type ${objectType}, contain an invalid material of type ${materials.type} ! Skip it.` )\r\n                        onSuccess( null )\r\n                        return\r\n\r\n                    } else {\r\n\r\n                        // Materials are ok for this type of object\r\n\r\n                    }\r\n\r\n                } else if ( objectType === 'Points' ) {\r\n\r\n                    // if material != PointsMaterial... ERROR\r\n\r\n                    if ( Array.isArray( materials ) ) {\r\n\r\n                        let materialOnError = false\r\n                        let material        = undefined\r\n                        let materialType    = undefined\r\n                        for ( let materialIndex = 0, numberOfMaterials = materials.length ; materialIndex < numberOfMaterials ; materialIndex++ ) {\r\n\r\n                            material     = materials[ materialIndex ]\r\n                            materialType = material.type\r\n                            if ( materialType !== 'PointsMaterial' ) {\r\n                                materialOnError = true\r\n                                break\r\n                            }\r\n\r\n                        }\r\n\r\n                        if ( materialOnError ) {\r\n\r\n                            console.error( `Object ${object.name} of type ${objectType}, contain an invalid material of type ${materialType} ! Skip it.` )\r\n                            onSuccess( null )\r\n                            return\r\n\r\n                        }\r\n\r\n                    } else if ( materials.type !== 'PointsMaterial' ) {\r\n\r\n                        console.error( `Object ${object.name} of type ${objectType}, contain an invalid material of type ${materials.type} ! Skip it.` )\r\n                        onSuccess( null )\r\n                        return\r\n\r\n                    } else {\r\n\r\n                        // Materials are ok for this type of object\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    // Regular object\r\n\r\n                }\r\n\r\n                self._saveGeometryInDatabase( geometry, onError, ( geometryId ) => {\r\n\r\n                    self._saveMaterialInDatabase( materials, onError, ( materialIds ) => {\r\n\r\n                        self._saveObject3DInDatabase( object, childrenIds, geometryId, materialIds, onError, onSuccess )\r\n\r\n                    } )\r\n\r\n                } )\r\n\r\n            } else if ( geometry.isBufferGeometry ) {\r\n\r\n                // If it is a terminal object ( No children ) with an empty geometry\r\n                if ( childrenIds.length === 0 && ( !geometry.attributes[ 'position' ] || geometry.attributes[ 'position' ].count === 0 ) ) {\r\n\r\n                    console.error( `Object ${object.name} geometry doesn't contain vertices ! Skip it.` )\r\n                    onSuccess( null )\r\n                    return\r\n\r\n                }\r\n\r\n                if ( objectType === 'Line' || objectType === 'LineLoop' || objectType === 'LineSegments' ) {\r\n\r\n                    // if material != LineBasicMaterial or LineDashedMaterial... ERROR\r\n                    if ( Array.isArray( materials ) ) {\r\n\r\n                        let materialOnError = false\r\n                        let material        = undefined\r\n                        let materialType    = undefined\r\n                        for ( let materialIndex = 0, numberOfMaterials = materials.length ; materialIndex < numberOfMaterials ; materialIndex++ ) {\r\n\r\n                            material     = materials[ materialIndex ]\r\n                            materialType = material.type\r\n                            if ( materialType !== 'LineBasicMaterial' && materialType !== 'LineDashedMaterial' ) {\r\n                                materialOnError = true\r\n                                break\r\n                            }\r\n\r\n                        }\r\n\r\n                        if ( materialOnError ) {\r\n\r\n                            console.error( `Object ${object.name} of type ${objectType}, contain an invalid material of type ${materialType} ! Skip it.` )\r\n                            onSuccess( null )\r\n                            return\r\n\r\n                        }\r\n\r\n                    } else if ( materials.type !== 'LineBasicMaterial' && materials.type !== 'LineDashedMaterial' ) {\r\n\r\n                        console.error( `Object ${object.name} of type ${objectType}, contain an invalid material of type ${materials.type} ! Skip it.` )\r\n                        onSuccess( null )\r\n                        return\r\n\r\n                    } else {\r\n\r\n                        // Materials are ok for this type of object\r\n\r\n                    }\r\n\r\n                } else if ( objectType === 'Points' ) {\r\n\r\n                    // if material != PointsMaterial... ERROR\r\n\r\n                    if ( Array.isArray( materials ) ) {\r\n\r\n                        let materialOnError = false\r\n                        let material        = undefined\r\n                        let materialType    = undefined\r\n                        for ( let materialIndex = 0, numberOfMaterials = materials.length ; materialIndex < numberOfMaterials ; materialIndex++ ) {\r\n\r\n                            material     = materials[ materialIndex ]\r\n                            materialType = material.type\r\n                            if ( materialType !== 'PointsMaterial' ) {\r\n                                materialOnError = true\r\n                                break\r\n                            }\r\n\r\n                        }\r\n\r\n                        if ( materialOnError ) {\r\n\r\n                            console.error( `Object ${object.name} of type ${objectType}, contain an invalid material of type ${materialType} ! Skip it.` )\r\n                            onSuccess( null )\r\n                            return\r\n\r\n                        }\r\n\r\n                    } else if ( materials.type !== 'PointsMaterial' ) {\r\n\r\n                        console.error( `Object ${object.name} of type ${objectType}, contain an invalid material of type ${materials.type} ! Skip it.` )\r\n                        onSuccess( null )\r\n                        return\r\n\r\n                    } else {\r\n\r\n                        // Materials are ok for this type of object\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    // Regular object\r\n\r\n                }\r\n\r\n                self._saveBufferGeometryInDatabase( geometry, onError, ( geometryId ) => {\r\n\r\n                    self._saveMaterialInDatabase( materials, onError, ( materialIds ) => {\r\n\r\n                        self._saveObject3DInDatabase( object, childrenIds, geometryId, materialIds, onError, onSuccess )\r\n\r\n                    } )\r\n\r\n                } )\r\n\r\n            } else {\r\n\r\n                console.error( `Object ${object.name} contain an unknown/unmanaged geometry of type ${geometry.type} ! Skip it.` )\r\n                onSuccess( null )\r\n\r\n            }\r\n\r\n        } else if ( geometry && !materials ) {\r\n\r\n            // Is this right ??? Object can have geometry without material ???\r\n\r\n            if ( geometry.isGeometry ) {\r\n\r\n                // If it is a terminal object ( No children ) with an empty geometry\r\n                if ( childrenIds.length === 0 && ( !geometry.vertices || geometry.vertices.length === 0 ) ) {\r\n\r\n                    console.error( `Mesh ${object.name} geometry doesn't contain vertices ! Skip it.` )\r\n                    onSuccess( null )\r\n                    return\r\n\r\n                }\r\n\r\n                self._saveGeometryInDatabase( geometry, onError, ( geometryId ) => {\r\n\r\n                    self._saveObject3DInDatabase( object, childrenIds, geometryId, [], onError, onSuccess )\r\n\r\n                } )\r\n\r\n            } else if ( geometry.isBufferGeometry ) {\r\n\r\n                // If it is a terminal object ( No children ) with an empty geometry\r\n                if ( childrenIds.length === 0 && ( !geometry.attributes[ 'position' ] || geometry.attributes[ 'position' ].count === 0 ) ) {\r\n\r\n                    console.error( `Mesh ${object.name} buffer geometry doesn't contain position attributes ! Skip it.` )\r\n                    onSuccess( null )\r\n                    return\r\n\r\n                }\r\n\r\n                self._saveBufferGeometryInDatabase( geometry, onError, ( geometryId ) => {\r\n\r\n                    self._saveObject3DInDatabase( object, childrenIds, geometryId, null, onError, onSuccess )\r\n\r\n                } )\r\n\r\n            } else {\r\n\r\n                console.error( `Object ${object.name} contain an unknown/unmanaged geometry of type ${geometry.type} ! Skip it.` )\r\n                onSuccess( null )\r\n\r\n            }\r\n\r\n        } else if ( !geometry && materials ) {\r\n\r\n            if ( objectType === 'Sprite' ) {\r\n\r\n                // if material != SpriteMaterial... ERROR\r\n                if ( Array.isArray( materials ) ) {\r\n\r\n                    let materialOnError = false\r\n                    let material        = undefined\r\n                    let materialType    = undefined\r\n                    for ( let materialIndex = 0, numberOfMaterials = materials.length ; materialIndex < numberOfMaterials ; materialIndex++ ) {\r\n\r\n                        material     = materials[ materialIndex ]\r\n                        materialType = material.type\r\n                        if ( materialType !== 'SpriteMaterial' ) {\r\n                            materialOnError = true\r\n                            break\r\n                        }\r\n\r\n                    }\r\n\r\n                    if ( materialOnError ) {\r\n\r\n                        console.error( `Object ${object.name} of type ${objectType}, contain an invalid material of type ${materialType} ! Skip it.` )\r\n                        onSuccess( null )\r\n                        return\r\n\r\n                    }\r\n\r\n                } else if ( materials.type !== 'SpriteMaterial' ) {\r\n\r\n                    console.error( `Object ${object.name} of type ${objectType}, contain an invalid material of type ${materials.type} ! Skip it.` )\r\n                    onSuccess( null )\r\n                    return\r\n\r\n                } else {\r\n\r\n                    // Materials are ok for this type of object\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                console.error( `Missing geometry for object ${object.name} of type ${objectType}. Only Sprite can contains material without geometry ! Skip it.` )\r\n                onSuccess( null )\r\n                return\r\n\r\n            }\r\n\r\n            self._saveMaterialInDatabase( materials, onError, ( materialIds ) => {\r\n\r\n                self._saveObject3DInDatabase( object, childrenIds, null, materialIds, onError, onSuccess )\r\n\r\n            } )\r\n\r\n        } else {\r\n\r\n            self._saveObject3DInDatabase( object, childrenIds, null, null, onError, onSuccess )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Object3D\r\n\r\n    _checkIfObject3DAlreadyExist ( object ) {\r\n\r\n        // Todo\r\n        return null\r\n\r\n    }\r\n\r\n    _getObject3DModel ( object, childrenIds, geometryId, materialsIds ) {\r\n\r\n        object.parent   = null\r\n        object.children = childrenIds\r\n        object.geometry = geometryId\r\n        object.material = materialsIds\r\n\r\n        return this._driver.model( object.type )( object )\r\n\r\n    }\r\n\r\n    _saveObject3DInDatabase ( object, childrenIds, geometryId, materialsIds, onError, onSuccess ) {\r\n\r\n        const self     = this\r\n        const objectId = this._checkIfObject3DAlreadyExist( object )\r\n\r\n        if ( objectId ) {\r\n\r\n            onSuccess( objectId )\r\n\r\n        } else {\r\n\r\n            this._getObject3DModel( object, childrenIds, geometryId, materialsIds )\r\n                .save()\r\n                .then( savedObject => {\r\n\r\n                    const objectId = savedObject.id\r\n\r\n                    // Update Children with parent id\r\n                    if ( childrenIds && childrenIds.length > 0 ) {\r\n                        updateChildren( onError, onSuccess )\r\n                    } else {\r\n                        onSuccess( objectId )\r\n                    }\r\n\r\n                    function updateChildren ( onError, onSuccess ) {\r\n\r\n                        const savedChildrenIds = savedObject._doc.children\r\n                        const numberOfChildren = savedChildrenIds.length\r\n\r\n                        let endUpdates = 0\r\n                        let childId    = undefined\r\n                        const errors   = []\r\n\r\n                        for ( let childIndex = 0 ; childIndex < numberOfChildren ; childIndex++ ) {\r\n\r\n                            childId = savedChildrenIds[ childIndex ]\r\n\r\n                            const Objects3DModelBase = self._driver.model( 'Objects3D' )\r\n                            Objects3DModelBase.findByIdAndUpdate( childId, { $set: { parent: objectId } }, ( error, success ) => {\r\n\r\n                                if ( error ) {\r\n                                    errors.push( error )\r\n                                }\r\n\r\n                                endUpdates++\r\n                                if ( endUpdates < numberOfChildren ) {\r\n                                    return\r\n                                }\r\n\r\n                                returnResult( onError, onSuccess )\r\n\r\n                            } )\r\n\r\n                        }\r\n\r\n                        function returnResult ( onError, onSuccess ) {\r\n\r\n                            if ( errors.length > 0 ) {\r\n                                onError( errors )\r\n                            } else {\r\n                                onSuccess( objectId )\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } )\r\n                .catch( onError )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Curve\r\n\r\n    _checkIfCurveAlreadyExist ( curve ) {\r\n\r\n        // Todo\r\n        return null\r\n\r\n    }\r\n\r\n    _getCurveModel ( curve ) {\r\n\r\n        return this._driver.model( curve.type )( curve )\r\n\r\n    }\r\n\r\n    _saveCurveInDatabase ( curve, onError, onSuccess ) {\r\n\r\n        const curveId = this._checkIfCurveAlreadyExist( curve )\r\n\r\n        if ( curveId ) {\r\n\r\n            onSuccess( curveId )\r\n\r\n        } else {\r\n\r\n            this._getCurveModel( curve )\r\n                .save()\r\n                .then( savedCurve => { onSuccess( savedCurve.id ) } )\r\n                .catch( onError )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Geometry\r\n\r\n    _checkIfGeometryAlreadyExist ( geometry ) {\r\n\r\n        // Todo\r\n        return null\r\n\r\n    }\r\n\r\n    _getGeometryModel ( geometry ) {\r\n\r\n        return this._driver.model( geometry.type )( geometry )\r\n\r\n    }\r\n\r\n    _saveGeometryInDatabase ( geometry, onError, onSuccess ) {\r\n\r\n        const geometryId = this._checkIfGeometryAlreadyExist( geometry )\r\n\r\n        if ( geometryId ) {\r\n\r\n            onSuccess( geometryId )\r\n\r\n        } else {\r\n\r\n            this._getGeometryModel( geometry )\r\n                .save()\r\n                .then( savedGeometry => { onSuccess( savedGeometry.id ) } )\r\n                .catch( onError )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // BufferGeometry\r\n\r\n    _checkIfBufferGeometryAlreadyExist ( bufferGeometry ) {\r\n\r\n        // Todo\r\n        return null\r\n\r\n    }\r\n\r\n    _getBufferGeometryModel ( bufferGeometry ) {\r\n\r\n        return this._driver.model( bufferGeometry.type )( bufferGeometry )\r\n\r\n    }\r\n\r\n    _saveBufferGeometryInDatabase ( bufferGeometry, onError, onSuccess ) {\r\n\r\n        const bufferGeometryId = this._checkIfBufferGeometryAlreadyExist( bufferGeometry )\r\n\r\n        if ( bufferGeometryId ) {\r\n\r\n            onSuccess( bufferGeometryId )\r\n\r\n        } else {\r\n\r\n            this._getBufferGeometryModel( bufferGeometry )\r\n                .save()\r\n                .then( savedBufferGeometry => { onSuccess( savedBufferGeometry.id ) } )\r\n                .catch( onError )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Material\r\n\r\n    _checkIfMaterialAlreadyExist ( materials ) {\r\n\r\n        // Todo\r\n        return null\r\n\r\n    }\r\n\r\n    _getMaterialModel ( material, texturesIds ) {\r\n\r\n        material.texturesIds = texturesIds\r\n\r\n        return this._driver.model( material.type )( material )\r\n\r\n    }\r\n\r\n    _saveMaterialInDatabase ( materials, onError, onSuccess ) {\r\n\r\n        const self = this\r\n        if ( Array.isArray( materials ) ) {\r\n\r\n            const numberOfMaterials    = materials.length\r\n            let materialIds            = new Array( numberOfMaterials )\r\n            let numberOfSavedMaterials = 0\r\n            let material               = undefined\r\n            for ( let materialIndex = 0 ; materialIndex < numberOfMaterials ; materialIndex++ ) {\r\n\r\n                material         = materials[ materialIndex ]\r\n                const materialId = this._checkIfMaterialAlreadyExist( material )\r\n\r\n                if ( materialId ) {\r\n\r\n                    materialIds[ materialIndex ] = materialId\r\n                    numberOfSavedMaterials++\r\n\r\n                    // End condition\r\n                    if ( numberOfSavedMaterials === numberOfMaterials ) {\r\n                        onSuccess( materialIds )\r\n                    }\r\n\r\n                } else {\r\n\r\n                    ( function closeIndex () {\r\n\r\n                        const materialLocalIndex = materialIndex\r\n\r\n                        self._getMaterialModel( material )\r\n                            .save()\r\n                            .then( savedMaterial => {\r\n\r\n                                materialIds[ materialLocalIndex ] = savedMaterial.id\r\n                                numberOfSavedMaterials++\r\n\r\n                                // End condition\r\n                                if ( numberOfSavedMaterials === numberOfMaterials ) {\r\n                                    onSuccess( materialIds )\r\n                                }\r\n\r\n                            } )\r\n                            .catch( onError )\r\n\r\n                    } )()\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            const materialId = this._checkIfMaterialAlreadyExist( materials )\r\n\r\n            if ( materialId ) {\r\n\r\n                onSuccess( materialId )\r\n\r\n            } else {\r\n\r\n                this._getMaterialModel( materials )\r\n                    .save()\r\n                    .then( savedMaterial => {\r\n\r\n                        // Return id\r\n                        onSuccess( savedMaterial.id )\r\n\r\n                    } )\r\n                    .catch( onError )\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Texture\r\n\r\n    _checkIfTextureAlreadyExist ( texture ) {\r\n\r\n        // Todo\r\n        return null\r\n\r\n    }\r\n\r\n    _getTextureModel ( texture ) {\r\n\r\n        return this._driver.model( texture.type )( texture )\r\n\r\n    }\r\n\r\n    _saveTextureInDatabase ( texture, onError, onSuccess ) {\r\n\r\n        const textureId = this._checkIfTextureAlreadyExist( texture )\r\n\r\n        if ( textureId ) {\r\n\r\n            onSuccess( textureId )\r\n\r\n        } else {\r\n\r\n            this._getTextureModel( texture )\r\n                .save()\r\n                .then( savedTexture => { onSuccess( savedTexture.id ) } )\r\n                .catch( onError )\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { ThreeToMongoDB }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\n/*\r\n import { BSON_DATA_OBJECT } from 'bson'\r\n import {\r\n isNotDefined,\r\n isNotNumber,\r\n isNotObject\r\n }                           from 'itee-validators'\r\n import Mongoose             from 'mongoose'\r\n\r\n class Color extends Mongoose.SchemaType {\r\n\r\n constructor ( key, options ) {\r\n\r\n super( key, options, 'Color' )\r\n\r\n }\r\n\r\n cast ( value ) {\r\n\r\n if ( isNotDefined( value ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} is null or undefined` ) }\r\n if ( isNotObject( value ) && !value.isColor ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} is not a object or Color instance` ) }\r\n\r\n if ( !( 'r' in value ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} does not contain r property` ) }\r\n if ( isNotNumber( value.r ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} expected to be a number` ) }\r\n\r\n if ( !( 'g' in value ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} does not contain g property` ) }\r\n if ( isNotNumber( value.g ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} expected to be a number` ) }\r\n\r\n if ( !( 'b' in value ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} does not contain b property` ) }\r\n if ( isNotNumber( value.b ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} expected to be a number` ) }\r\n\r\n return {\r\n r: value.r,\r\n g: value.g,\r\n b: value.b\r\n }\r\n\r\n }\r\n\r\n }\r\n\r\n Color.COLOR_BSON_TYPE = BSON_DATA_OBJECT\r\n\r\n // Register type\r\n Mongoose.Schema.Types.Color = Color\r\n\r\n export { Color }\r\n */\r\n\r\n/*\r\nconst { isNotDefined, isNotNumber, isNotObject } = require( 'itee-validators' )\r\nconst { BSON_DATA_OBJECT }                       = require( 'bson' )\r\n\r\nfunction ColorType ( Mongoose ) {\r\n    'use strict'\r\n\r\n    class Color extends Mongoose.SchemaType {\r\n\r\n        constructor ( key, options ) {\r\n\r\n            super( key, options, 'Color' )\r\n\r\n        }\r\n\r\n        cast ( value ) {\r\n\r\n            if ( isNotDefined( value ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} is null or undefined` ) }\r\n            if ( isNotObject( value ) && !value.isColor ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} is not a object or Color instance` ) }\r\n\r\n            if ( !( 'r' in value ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} does not contain r property` ) }\r\n            if ( isNotNumber( value.r ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} expected to be a number` ) }\r\n\r\n            if ( !( 'g' in value ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} does not contain g property` ) }\r\n            if ( isNotNumber( value.g ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} expected to be a number` ) }\r\n\r\n            if ( !( 'b' in value ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} does not contain b property` ) }\r\n            if ( isNotNumber( value.b ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} expected to be a number` ) }\r\n\r\n            return {\r\n                r: value.r,\r\n                g: value.g,\r\n                b: value.b\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    Color.COLOR_BSON_TYPE = BSON_DATA_OBJECT\r\n\r\n    // Register type\r\n    Mongoose.Schema.Types.Color = Color\r\n\r\n    return Mongoose\r\n\r\n}\r\n\r\nmodule.exports = { ColorType }\r\n*/\r\n\r\nimport {\r\n    isNotDefined,\r\n    isNotNumber,\r\n    isNotObject\r\n}                           from 'itee-validators'\r\nimport { BSON_DATA_OBJECT } from 'bson'\r\n\r\nfunction ColorType ( Mongoose ) {\r\n    'use strict'\r\n\r\n    class Color extends Mongoose.SchemaType {\r\n\r\n        constructor ( key, options ) {\r\n\r\n            super( key, options, 'Color' )\r\n\r\n        }\r\n\r\n        cast ( value ) {\r\n\r\n            if ( isNotDefined( value ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} is null or undefined` ) }\r\n            if ( isNotObject( value ) && !value.isColor ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} is not a object or Color instance` ) }\r\n\r\n            if ( !( 'r' in value ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} does not contain r property` ) }\r\n            if ( isNotNumber( value.r ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} expected to be a number` ) }\r\n\r\n            if ( !( 'g' in value ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} does not contain g property` ) }\r\n            if ( isNotNumber( value.g ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} expected to be a number` ) }\r\n\r\n            if ( !( 'b' in value ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} does not contain b property` ) }\r\n            if ( isNotNumber( value.b ) ) { throw new Mongoose.SchemaType.CastError( `Color: ${value} expected to be a number` ) }\r\n\r\n            return {\r\n                r: value.r,\r\n                g: value.g,\r\n                b: value.b\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    Color.COLOR_BSON_TYPE = BSON_DATA_OBJECT\r\n\r\n    // Register type\r\n    Mongoose.Schema.Types.Color = Color\r\n\r\n    return Mongoose\r\n\r\n}\r\n\r\nexport { ColorType }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [MIT]{@link https://opensource.org/licenses/MIT}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport {\r\n    TAbstractConverterManager,\r\n    TMongoDBPlugin,\r\n    TMongooseController\r\n}                         from 'itee-database'\r\nimport { DbfToThree }     from './converters/DbfToThree'\r\nimport { JsonToThree }    from './converters/JsonToThree'\r\nimport { MtlToThree }     from './converters/MtlToThree'\r\nimport { Obj2ToThree }    from './converters/Obj2ToThree'\r\nimport { ShpToThree }     from './converters/ShpToThree'\r\nimport { ThreeToMongoDB } from './converters/ThreeToMongoDB'\r\nimport { ColorType }      from './types/Color'\r\n\r\nexport default new TMongoDBPlugin()\r\n    .addType( ColorType )\r\n    .addController( TMongooseController )\r\n    .addDescriptor( {\r\n        route:      '/objects',\r\n        controller: {\r\n            name:    'TMongooseController',\r\n            options: {\r\n                schemaName: 'Objects3D'\r\n            },\r\n            can:     {\r\n                create: {\r\n                    on:   'put',\r\n                    over: '/(:id)?'\r\n                },\r\n                read:   {\r\n                    on:   'post',\r\n                    over: '/(:id)?'\r\n                },\r\n                update: {\r\n                    on:   'patch',\r\n                    over: '/(:id)?'\r\n                },\r\n                delete: {\r\n                    on:   'delete',\r\n                    over: '/(:id)?'\r\n                }\r\n            }\r\n        }\r\n    } )\r\n    .addDescriptor( {\r\n        route:      '/curves',\r\n        controller: {\r\n            name:    'TMongooseController',\r\n            options: {\r\n                schemaName: 'Curves'\r\n            },\r\n            can:     {\r\n                create: {\r\n                    on:   'put',\r\n                    over: '/(:id)?'\r\n                },\r\n                read:   {\r\n                    on:   'post',\r\n                    over: '/(:id)?'\r\n                },\r\n                update: {\r\n                    on:   'patch',\r\n                    over: '/(:id)?'\r\n                },\r\n                delete: {\r\n                    on:   'delete',\r\n                    over: '/(:id)?'\r\n                }\r\n            }\r\n        }\r\n    } )\r\n    .addDescriptor( {\r\n        route:      '/geometries',\r\n        controller: {\r\n            name:    'TMongooseController',\r\n            options: {\r\n                schemaName: 'Geometries'\r\n            },\r\n            can:     {\r\n                create: {\r\n                    on:   'put',\r\n                    over: '/(:id)?'\r\n                },\r\n                read:   {\r\n                    on:   'post',\r\n                    over: '/(:id)?'\r\n                },\r\n                update: {\r\n                    on:   'patch',\r\n                    over: '/(:id)?'\r\n                },\r\n                delete: {\r\n                    on:   'delete',\r\n                    over: '/(:id)?'\r\n                }\r\n            }\r\n        }\r\n    } )\r\n    .addDescriptor( {\r\n        route:      '/materials',\r\n        controller: {\r\n            name:    'TMongooseController',\r\n            options: {\r\n                schemaName: 'Materials'\r\n            },\r\n            can:     {\r\n                create: {\r\n                    on:   'put',\r\n                    over: '/(:id)?'\r\n                },\r\n                read:   {\r\n                    on:   'post',\r\n                    over: '/(:id)?'\r\n                },\r\n                update: {\r\n                    on:   'patch',\r\n                    over: '/(:id)?'\r\n                },\r\n                delete: {\r\n                    on:   'delete',\r\n                    over: '/(:id)?'\r\n                }\r\n            }\r\n        }\r\n    } )\r\n    .addDescriptor( {\r\n        route:      '/textures',\r\n        controller: {\r\n            name:    'TMongooseController',\r\n            options: {\r\n                schemaName: 'Textures'\r\n            },\r\n            can:     {\r\n                create: {\r\n                    on:   'put',\r\n                    over: '/(:id)?'\r\n                },\r\n                read:   {\r\n                    on:   'post',\r\n                    over: '/(:id)?'\r\n                },\r\n                update: {\r\n                    on:   'patch',\r\n                    over: '/(:id)?'\r\n                },\r\n                delete: {\r\n                    on:   'delete',\r\n                    over: '/(:id)?'\r\n                }\r\n            }\r\n        }\r\n    } )\r\n    .addController( TAbstractConverterManager )\r\n    .addDescriptor( {\r\n        route:      '/uploads',\r\n        controller: {\r\n            name:    'TAbstractConverterManager',\r\n            options: {\r\n                useNext:    true,\r\n                converters: {\r\n                    JsonToThree: new JsonToThree(),\r\n                    ShpToThree:  new ShpToThree(),\r\n                    DbfToThree:  new DbfToThree(),\r\n                    MtlToThree:  new MtlToThree(),\r\n                    ObjToThree:  new Obj2ToThree()\r\n                },\r\n                rules:      [\r\n                    {\r\n                        on:  '.json',\r\n                        use: 'JsonToThree'\r\n                    },\r\n                    {\r\n                        on:  '.shp',\r\n                        use: 'ShpToThree'\r\n                    },\r\n                    {\r\n                        on:  '.dbf',\r\n                        use: 'DbfToThree'\r\n                    },\r\n                    {\r\n                        on:  [ '.shp', '.dbf' ],\r\n                        use: [ 'ShpToThree', 'DbfToThree' ]\r\n                    },\r\n                    {\r\n                        on:  '.mtl',\r\n                        use: 'MtlToThree'\r\n                    },\r\n                    {\r\n                        on:  '.obj',\r\n                        use: 'ObjToThree'\r\n                    },\r\n                    {\r\n                        on:  [ '.mtl', '.obj' ],\r\n                        use: [ 'MtlToThree', 'ObjToThree' ]\r\n                    }\r\n                ],\r\n                inserter:   ThreeToMongoDB\r\n            },\r\n            can:     {\r\n                processFiles: {\r\n                    on:   'post',\r\n                    over: '/'\r\n                }\r\n            }\r\n        }\r\n    } )\r\n"],"names":["DefaultLoadingManager","DefaultLogger","TBinaryReader","FileLoader","Endianness","TAbstractFileConverter","ObjectLoader","MTLLoader","OBJLoader2","Vector3","Shape","TAbstractDataInserter","isNotDefined","isNotObject","isNotNumber","BSON_DATA_OBJECT","TMongoDBPlugin","TMongooseController","TAbstractConverterManager"],"mappings":"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"}